{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Dynatrace Environment API",
    "description" : "\nDocumentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress. \n\nIf you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
    "version" : "2.0.0"
  },
  "servers" : [ {
    "url" : "https://{instance}.live.dynatrace.com/api/v2",
    "variables" : { }
  } ],
  "tags" : [ {
    "name" : "Metrics",
    "description" : "Query and ingest metrics"
  }, {
    "name" : "Problems",
    "description" : "Manage problems and comments"
  }, {
    "name" : "Events",
    "description" : "Manage events"
  }, {
    "name" : "Audit Logs",
    "description" : "Read audit logs"
  }, {
    "name" : "Network zones",
    "description" : "Manage network zones"
  }, {
    "name" : "Monitored entities",
    "description" : "Manage monitored entities"
  }, {
    "name" : "Logs",
    "description" : "Read and ingest logs"
  }, {
    "name" : "ActiveGates",
    "description" : "View information about your ActiveGates"
  }, {
    "name" : "ActiveGates - Auto-update configuration",
    "description" : "Manage ActiveGate auto-update settings."
  }, {
    "name" : "ActiveGates - Auto-update jobs",
    "description" : "Manage ActiveGate auto-update jobs."
  }, {
    "name" : "ActiveGates - Remote configuration management",
    "description" : "Manage ActiveGates configuration remotely"
  }, {
    "name" : "OneAgent - Remote configuration management",
    "description" : "Manage OneAgent configuration remotely"
  }, {
    "name" : "Monitored entities - Custom tags",
    "description" : "Manage custom tags of monitored entities"
  }, {
    "name" : "Monitored entities - Monitoring state",
    "description" : "Read state of monitored entities"
  }, {
    "name" : "Service-level objectives",
    "description" : "Manage SLOs"
  }, {
    "name" : "Releases",
    "description" : "Analyze your deployed components"
  }, {
    "name" : "Security problems",
    "description" : "Manage security problems"
  }, {
    "name" : "Attacks",
    "description" : "Read attacks"
  }, {
    "name" : "Davis security advisor",
    "description" : "Manage Davis security advices"
  }, {
    "name" : "Extensions 2.0",
    "description" : "Manage Extensions 2.0 life cycle"
  }, {
    "name" : "Geographic regions",
    "description" : "Query countries, regions, and cities"
  }, {
    "name" : "Hub items",
    "description" : "Install, update and manage metadata of Hub items"
  }, {
    "name" : "JavaScript mapping files",
    "description" : "Manage JavaScript mapping files for JavaScript symbolication and deobfuscation"
  }, {
    "name" : "ActiveGates - ActiveGate tokens enforcement",
    "description" : "Gets the status of ActiveGate [tokens enforcement](https://dt-url.net/m80331a)"
  }, {
    "name" : "OpenTelemetry Protocol (OTLP) Logs Ingest",
    "description" : "Ingest OpenTelemetry Protocol (OTLP) logs into Dynatrace"
  }, {
    "name" : "OpenTelemetry Protocol (OTLP) Trace Ingest",
    "description" : "Ingest OpenTelemetry traces into Dynatrace"
  }, {
    "name" : "OpenTelemetry Protocol (OTLP) Metric Ingest",
    "description" : "Ingest OpenTelemetry Protocol (OTLP) metrics into Dynatrace"
  }, {
    "name" : "Access Tokens - ActiveGate tokens",
    "description" : "Manage Dynatrace ActiveGate tokens"
  }, {
    "name" : "Access Tokens - API tokens",
    "description" : "Manage Dynatrace API tokens"
  }, {
    "name" : "Credential vault",
    "description" : "Manage credentials for Synthetic monitors"
  }, {
    "name" : "Settings - Objects",
    "description" : "Manage settings objects"
  }, {
    "name" : "Settings - Schemas",
    "description" : "View settings schemas"
  }, {
    "name" : "Synthetic - On-demand monitor executions",
    "description" : "Trigger and view information about on-demand synthetic monitor executions"
  }, {
    "name" : "Access tokens - Tenant tokens",
    "description" : "Rotate tenant tokens"
  }, {
    "name" : "Metrics - Units",
    "description" : "View metric units"
  } ],
  "paths" : {
    "/activeGates/{agId}/autoUpdate" : {
      "get" : {
        "tags" : [ "ActiveGates - Auto-update configuration" ],
        "summary" : "Gets the configuration of auto-update for the specified ActiveGate",
        "operationId" : "getAutoUpdateConfigById",
        "parameters" : [ {
          "name" : "agId",
          "in" : "path",
          "description" : "The ID of the required ActiveGate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateAutoUpdateConfig"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found. See response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      },
      "put" : {
        "tags" : [ "ActiveGates - Auto-update configuration" ],
        "summary" : "Updates the configuration of auto-update for the specified ActiveGate",
        "operationId" : "putAutoUpdateConfigById",
        "parameters" : [ {
          "name" : "agId",
          "in" : "path",
          "description" : "The ID of the required ActiveGate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing auto update parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActiveGateAutoUpdateConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The auto-update configuration have been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/activeGates/{agId}/autoUpdate/validator" : {
      "post" : {
        "tags" : [ "ActiveGates - Auto-update configuration" ],
        "summary" : "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
        "operationId" : "validateAutoUpdateConfigById",
        "parameters" : [ {
          "name" : "agId",
          "in" : "path",
          "description" : "The ID of the required ActiveGate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing auto update parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActiveGateAutoUpdateConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted auto-update configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/activeGates/autoUpdate" : {
      "get" : {
        "tags" : [ "ActiveGates - Auto-update configuration" ],
        "summary" : "Gets the global auto-update configuration of environment ActiveGates.",
        "operationId" : "getGlobalAutoUpdateConfigForTenant",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateGlobalAutoUpdateConfig"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      },
      "put" : {
        "tags" : [ "ActiveGates - Auto-update configuration" ],
        "summary" : "Puts the global auto-update configuration of environment ActiveGates.",
        "operationId" : "putGlobalAutoUpdateConfigForTenant",
        "requestBody" : {
          "description" : "JSON body of the request, containing global auto update parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActiveGateGlobalAutoUpdateConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The global auto-update configuration have been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/activeGates/autoUpdate/validator" : {
      "post" : {
        "tags" : [ "ActiveGates - Auto-update configuration" ],
        "summary" : "Validates the payload for the `POST /activeGates/autoUpdate` request.",
        "operationId" : "validateGlobalAutoUpdateConfigForTenant",
        "requestBody" : {
          "description" : "JSON body of the request, containing global auto update parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActiveGateGlobalAutoUpdateConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/activeGates/updateJobs" : {
      "get" : {
        "tags" : [ "ActiveGates - Auto-update jobs" ],
        "summary" : "List ActiveGates with update jobs",
        "description" : "The response includes ActiveGates that have both completed (successful and failed) jobs and jobs in progress.",
        "operationId" : "getAllUpdateJobList",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one day is used (`now-1d`). \n\nMaximum timeframe is 31 days.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startVersionCompareType",
          "in" : "query",
          "description" : "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here.",
          "schema" : {
            "type" : "string",
            "enum" : [ "EQUAL", "GREATER", "GREATER_EQUAL", "LOWER", "LOWER_EQUAL" ],
            "default" : "EQUAL"
          }
        }, {
          "name" : "startVersion",
          "in" : "query",
          "description" : "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "updateType",
          "in" : "query",
          "description" : "Filters the resulting set of update-jobs by the update type.",
          "schema" : {
            "type" : "string",
            "enum" : [ "ACTIVE_GATE", "REMOTE_PLUGIN_AGENT", "SYNTHETIC", "Z_REMOTE" ]
          },
          "example" : "ACTIVE_GATE"
        }, {
          "name" : "targetVersionCompareType",
          "in" : "query",
          "description" : "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here.",
          "schema" : {
            "type" : "string",
            "enum" : [ "EQUAL", "GREATER", "GREATER_EQUAL", "LOWER", "LOWER_EQUAL" ],
            "default" : "EQUAL"
          }
        }, {
          "name" : "targetVersion",
          "in" : "query",
          "description" : "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastUpdates",
          "in" : "query",
          "description" : "If `true`, filters the resulting set of update jobs to the most recent update of each type.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateJobsAll"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/activeGates/{agId}/updateJobs" : {
      "get" : {
        "tags" : [ "ActiveGates - Auto-update jobs" ],
        "summary" : "Lists update jobs for the specified ActiveGate",
        "description" : "The job can update the ActiveGate to the specified version or the latest available one.",
        "operationId" : "getUpdateJobListByAgId",
        "parameters" : [ {
          "name" : "agId",
          "in" : "path",
          "description" : "The ID of the required ActiveGate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one week is used (`now-1w`). \n\nMaximum timeframe is 31 days.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startVersionCompareType",
          "in" : "query",
          "description" : "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here.",
          "schema" : {
            "type" : "string",
            "enum" : [ "EQUAL", "GREATER", "GREATER_EQUAL", "LOWER", "LOWER_EQUAL" ],
            "default" : "EQUAL"
          }
        }, {
          "name" : "startVersion",
          "in" : "query",
          "description" : "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "updateType",
          "in" : "query",
          "description" : "Filters the resulting set of update-jobs by the update type.",
          "schema" : {
            "type" : "string",
            "enum" : [ "ACTIVE_GATE", "REMOTE_PLUGIN_AGENT", "SYNTHETIC", "Z_REMOTE" ]
          },
          "example" : "ACTIVE_GATE"
        }, {
          "name" : "targetVersionCompareType",
          "in" : "query",
          "description" : "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here.",
          "schema" : {
            "type" : "string",
            "enum" : [ "EQUAL", "GREATER", "GREATER_EQUAL", "LOWER", "LOWER_EQUAL" ],
            "default" : "EQUAL"
          }
        }, {
          "name" : "targetVersion",
          "in" : "query",
          "description" : "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastUpdates",
          "in" : "query",
          "description" : "If `true`, filters the resulting set of update jobs to the most recent update of each type.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateJobList"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found. See response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      },
      "post" : {
        "tags" : [ "ActiveGates - Auto-update jobs" ],
        "summary" : "Creates a new update job for the specified ActiveGate",
        "operationId" : "createUpdateJobForAg",
        "parameters" : [ {
          "name" : "agId",
          "in" : "path",
          "description" : "The ID of the required ActiveGate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing update-job parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateJob"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The update-job have been created.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateJob"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/activeGates/{agId}/updateJobs/{jobId}" : {
      "get" : {
        "tags" : [ "ActiveGates - Auto-update jobs" ],
        "summary" : "Gets the parameters of the specified update job",
        "operationId" : "getUpdateJobByJobIdForAg",
        "parameters" : [ {
          "name" : "agId",
          "in" : "path",
          "description" : "The ID of the required ActiveGate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "A unique identifier for a update-job of ActiveGate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateJob"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found. See response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      },
      "delete" : {
        "tags" : [ "ActiveGates - Auto-update jobs" ],
        "summary" : "Deletes the specified update job",
        "operationId" : "deleteUpdateJobByJobIdForAg",
        "parameters" : [ {
          "name" : "agId",
          "in" : "path",
          "description" : "The ID of the required ActiveGate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "A unique identifier for a update-job of ActiveGate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The update-job have been deleted. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found. See response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/activeGates/{agId}/updateJobs/validator" : {
      "post" : {
        "tags" : [ "ActiveGates - Auto-update jobs" ],
        "summary" : "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
        "operationId" : "validateUpdateJobForAg",
        "parameters" : [ {
          "name" : "agId",
          "in" : "path",
          "description" : "The ID of the required ActiveGate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing update-job parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateJob"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted update-job is valid. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/activeGates" : {
      "get" : {
        "tags" : [ "ActiveGates" ],
        "summary" : "Lists all available ActiveGates",
        "description" : "The response includes all ActiveGates that are currently connected to the environment or have been connected during last 2 hours.",
        "operationId" : "getAllActiveGates",
        "parameters" : [ {
          "name" : "hostname",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates by the name of the host it's running on. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "osType",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates by the OS type of the host it's running on.",
          "schema" : {
            "type" : "string",
            "enum" : [ "LINUX", "WINDOWS" ]
          }
        }, {
          "name" : "networkAddress",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates by the network address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loadBalancerAddress",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates by the Load Balancer address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates by the ActiveGate type.",
          "schema" : {
            "type" : "string",
            "enum" : [ "ENVIRONMENT", "ENVIRONMENT_MULTI" ]
          }
        }, {
          "name" : "networkZone",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates by the network zone. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "updateStatus",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates by the auto-update status.",
          "schema" : {
            "type" : "string",
            "enum" : [ "INCOMPATIBLE", "OUTDATED", "SCHEDULED", "SUPPRESSED", "UNKNOWN", "UP2DATE", "UPDATE_IN_PROGRESS", "UPDATE_PENDING", "UPDATE_PROBLEM" ]
          }
        }, {
          "name" : "versionCompareType",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the comparison operator here.",
          "schema" : {
            "type" : "string",
            "enum" : [ "EQUAL", "GREATER", "GREATER_EQUAL", "LOWER", "LOWER_EQUAL" ],
            "default" : "EQUAL"
          }
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the version in `<major>.<minor>.<revision>` format (for example, `1.195.0`) here.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "autoUpdate",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates by the actual state of auto-update.",
          "schema" : {
            "type" : "string",
            "enum" : [ "DISABLED", "ENABLED" ]
          }
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates by the group. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "online",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates by the communication status.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "enabledModule",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates by the enabled modules.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AWS", "AZURE", "BEACON_FORWARDER", "CLOUD_FOUNDRY", "DB_INSIGHT", "EXTENSIONS_V1", "EXTENSIONS_V2", "KUBERNETES", "LOGS", "MEMORY_DUMPS", "METRIC_API", "ONE_AGENT_ROUTING", "OTLP_INGEST", "REST_API", "SYNTHETIC", "VMWARE", "Z_OS" ]
            }
          }
        }, {
          "name" : "disabledModule",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates by the disabled modules.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AWS", "AZURE", "BEACON_FORWARDER", "CLOUD_FOUNDRY", "DB_INSIGHT", "EXTENSIONS_V1", "EXTENSIONS_V2", "KUBERNETES", "LOGS", "MEMORY_DUMPS", "METRIC_API", "ONE_AGENT_ROUTING", "OTLP_INGEST", "REST_API", "SYNTHETIC", "VMWARE", "Z_OS" ]
            }
          }
        }, {
          "name" : "containerized",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates to those which are running in container (`true`) or not (`false`).",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "tokenState",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates to those with authorization token in specified state.",
          "schema" : {
            "type" : "string",
            "enum" : [ "ABSENT", "EXPIRING", "INVALID", "UNKNOWN", "UNSUPPORTED", "VALID" ]
          }
        }, {
          "name" : "tokenExpirationSet",
          "in" : "query",
          "description" : "Filters the resulting set of ActiveGates to those with set expiration date for authorization token.",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateList"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/activeGates/{agId}" : {
      "get" : {
        "tags" : [ "ActiveGates" ],
        "summary" : "Gets the details of the specified ActiveGate",
        "operationId" : "getOneActiveGateById",
        "parameters" : [ {
          "name" : "agId",
          "in" : "path",
          "description" : "The ID of the required ActiveGate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGate"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found. See response body for details.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/activeGates/remoteConfigurationManagement" : {
      "get" : {
        "tags" : [ "ActiveGates - Remote configuration management" ],
        "summary" : "Lists finished ActiveGate remote configuration management jobs",
        "description" : "The response includes finished jobs for the last 7 days.",
        "operationId" : "getRemoteIdentityOperations",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe for a remote configuration management job. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe for a remote configuration management job. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementJobList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      },
      "post" : {
        "tags" : [ "ActiveGates - Remote configuration management" ],
        "summary" : "Creates a new remote configuration management job",
        "operationId" : "createRemoteIdentityOperationJob",
        "requestBody" : {
          "description" : "JSON body of the request, containing remote configuration management job definition.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteConfigurationManagementOperationActiveGateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementJob"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementValidationResult"
                }
              }
            }
          },
          "409" : {
            "description" : "Other remote configuration management job is currently being executed"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/activeGates/remoteConfigurationManagement/preview" : {
      "post" : {
        "tags" : [ "ActiveGates - Remote configuration management" ],
        "summary" : "Creates a preview for remote configuration management job - applicable only to network zone, host group and ActiveGate group",
        "operationId" : "createRemoteIdentityOperationPreview",
        "requestBody" : {
          "description" : "JSON body of the request, containing remote configuration management job definition.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteConfigurationManagementOperationActiveGateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementPreviewList"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementValidationResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/activeGates/remoteConfigurationManagement/current" : {
      "get" : {
        "tags" : [ "ActiveGates - Remote configuration management" ],
        "summary" : "Gets remote configuration management job that is currently running",
        "description" : "The currently running remote configuration management job may be related to ActiveGates or OneAgents. There is a limit of one concurrent remote configuration management job, regardless of the entity type.",
        "operationId" : "getCurrentRemoteIdentityOperationJob",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementJob"
                }
              }
            }
          },
          "204" : {
            "description" : "No remote configuration management job is currently running "
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/activeGates/remoteConfigurationManagement/{id}" : {
      "get" : {
        "tags" : [ "ActiveGates - Remote configuration management" ],
        "summary" : "Gets the specified remote configuration management job",
        "operationId" : "getRemoteIdentityOperationJob",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required remote configuration management job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementJob"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/activeGates/remoteConfigurationManagement/validator" : {
      "post" : {
        "tags" : [ "ActiveGates - Remote configuration management" ],
        "summary" : "Validates the payload for the `POST /activeGates/remoteConfigurationManagement` request.",
        "operationId" : "validateRemoteIdentityOperation",
        "requestBody" : {
          "description" : "JSON body of the request, containing remote configuration management job definition.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteConfigurationManagementOperationActiveGateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementValidationResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/activeGates/tokenEnforcement" : {
      "get" : {
        "tags" : [ "ActiveGates - ActiveGate tokens enforcement" ],
        "summary" : "Gets the status of ActiveGate tokens enforcement",
        "operationId" : "getTokenEnforcement",
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the status of ActiveGate tokens enforcement",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateTokenEnforcement"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGates.read" ],
        "x-supports-personal-access-token" : true
      }
    },
    "/entities" : {
      "get" : {
        "tags" : [ "Monitored entities" ],
        "summary" : "Gets the information about monitored entities",
        "description" : "Lists entities observed within the specified timeframe along with their properties. \n\nWhen you query entities of the `SERVICE_METHOD` type, only the following requests are returned: \n\n* [Key requests](https://dt-url.net/a903u9s) \n* Top X requests that are used for [baselining](https://dt-url.net/0j23uqb) \n* Requests that have caused a [problem](https://dt-url.net/pf43uqg) \n\nYou can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "getEntities",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of entities. \n\nIf not set, 50 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "entitySelector",
          "in" : "query",
          "description" : "Defines the scope of the query. Only entities matching the specified criteria are included into response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\nThe field is **required** when you're querying the first page of results.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Defines the ordering of the entities returned. \n\nThis field is **optional**, each field has a sign prefix (+/-), which corresponds to sorting order ( + for ascending and - for descending). If no sign prefix is set, then default ascending sorting order will be applied. \n\nCurrently ordering is only available for the display name (for example `sort=name or sort =+name for ascending, sort=-name for descending`)",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntitiesList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "entities.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/entities/{entityId}" : {
      "get" : {
        "tags" : [ "Monitored entities" ],
        "summary" : "Gets the properties of the specified monitored entity",
        "operationId" : "getEntity",
        "parameters" : [ {
          "name" : "entityId",
          "in" : "path",
          "description" : "The ID of the required entity.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`).",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Entity"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "entities.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/entityTypes/{type}" : {
      "get" : {
        "tags" : [ "Monitored entities" ],
        "summary" : "Gets a list of properties for the specified entity type",
        "operationId" : "getEntityType",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "The required entity type.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityType"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The requested monitored entity type is not exportable or doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "entities.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/entityTypes" : {
      "get" : {
        "tags" : [ "Monitored entities" ],
        "summary" : "Gets a list of properties for all entity types",
        "description" : "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "getEntityTypes",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of entity types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityTypeList"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. There are no more entity types to export."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "entities.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/entities/custom" : {
      "post" : {
        "tags" : [ "Monitored entities" ],
        "summary" : "Creates or updates a custom device",
        "operationId" : "pushCustomDevice",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of a custom device.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomDeviceCreation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomDeviceCreationResult"
                }
              }
            }
          },
          "204" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "entities.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/events/ingest" : {
      "post" : {
        "tags" : [ "Events" ],
        "summary" : "Ingests a custom event",
        "description" : "The ingestion of custom events consumes [Davis Data Units](https://dt-url.net/ddu) (DDUs) from the events pool.",
        "operationId" : "createEvent",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains properties of the new event.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventIngest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The event ingest request was received by the server. The response body indicates for each event whether its creation was successful.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventIngestResults"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "events.ingest" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer", "storage:events:write" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/events/{eventId}" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Gets the properties of an event",
        "operationId" : "getEvent",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "The ID of the required event.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the configuration of the event.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "events.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/eventProperties" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Lists all event properties",
        "operationId" : "getEventProperties",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of event properties in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventPropertiesList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "events.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/eventProperties/{propertyKey}" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Gets the details of an event property",
        "operationId" : "getEventProperty",
        "parameters" : [ {
          "name" : "propertyKey",
          "in" : "path",
          "description" : "The event property key you're inquiring.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventPropertyDetails"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "events.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/eventTypes/{eventType}" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Gets the properties of an event type",
        "operationId" : "getEventType",
        "parameters" : [ {
          "name" : "eventType",
          "in" : "path",
          "description" : "The event type you're inquiring.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventType"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "events.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/eventTypes" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Lists all event types",
        "operationId" : "getEventTypes",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of event types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventTypeList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "events.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/events" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Lists events within the specified timeframe",
        "operationId" : "getEvents",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of events in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eventSelector",
          "in" : "query",
          "description" : "Defines the scope of the query. Only events matching the specified criteria are included in the response.\n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies.\n* Event ID: `eventId(\"id-1\", \"id-2\")`.\n* ID of related entity: `entityId(\"id-1\", \"id-2\")`.\n* Event status: `status(\"OPEN\")` or `status(\"CLOSED\")`. You can specify only one status.\n* Management zone ID: `managementZoneId(\"123\", \"321\")`.\n* Event type: `eventType(\"event-type\")`. You can specify only one event type. You can fetch the list of possible event types with the [GET event types](https://dt-url.net/qc03u6w) call. \n* Correlation ID: `correlationId(\"id-1\", \"id-2\")`.\n* Happened during maintenance (true, false): `underMaintenance(true)`. \n* Notifications are suppressed (true, false): `suppressAlert(true)`. \n* Problem creation is suppressed (true, false): `suppressProblem(true)`. \n* Frequent event (true, false): `frequentEvent(true)`. \n* Event property: `property.<key>(\"value-1\", \"value-2\")`.\n\nTo set several criteria, separate them with commas (`,`). Only results matching **all** criteria are included in the response. \n\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entitySelector",
          "in" : "query",
          "description" : "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\nThe number of entities that can be selected is limited to 10000.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the list of events.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "events.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/metrics/{metricKey}" : {
      "get" : {
        "tags" : [ "Metrics" ],
        "summary" : "Gets the descriptor of the specified metric",
        "operationId" : "metric",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDescriptor"
                }
              },
              "text/csv; header=present; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDescriptor"
                }
              },
              "text/csv; header=absent; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDescriptor"
                }
              }
            }
          },
          "404" : {
            "description" : "A metric has not been found."
          },
          "406" : {
            "description" : "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "metrics.read" ]
      },
      "delete" : {
        "tags" : [ "Metrics" ],
        "summary" : "Deletes the specified metric",
        "description" : "Deletion cannot be undone! You can't delete a metric if it has data points ingested within the last two hours.",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "metricKey",
          "in" : "path",
          "description" : "The key of the required metric. \n\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Success. The deletion of the metric has been triggered."
          },
          "400" : {
            "description" : "Failed. The metric has been written within the last two hours."
          },
          "404" : {
            "description" : "Failed. The metric cannot be found or the key cannot be parsed."
          },
          "500" : {
            "description" : "Failed. The deletion of metric dimensions failed."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "metrics.write" ]
      }
    },
    "/metrics" : {
      "get" : {
        "tags" : [ "Metrics" ],
        "summary" : "Lists all available metrics",
        "description" : "You can narrow down the output by selecting metrics in the **metricSelector** field. \n\nYou can additionally limit the output by using pagination: \n\n1. Specify the number of results per page in the **pageSize** query parameter. \n\n2. Then use the cursor from the **nextPageKey** field of the response in the **nextPageKey** query parameter to obtain subsequent pages. All other query parameters must be omitted.",
        "operationId" : "allMetrics",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of metric schemata in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.\n\n If a value higher than 500 is used, only 500 results per page are returned.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "metricSelector",
          "in" : "query",
          "description" : "Selects metrics for the query by their keys.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can select a full set of related metrics by using a trailing asterisk (`*`) wildcard. For example, `builtin:host.*` selects all host-based metrics and `builtin:*` selects all Dynatrace-provided metrics. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax.\n\n Only `aggregation`, `merge`, `parents`, and `splitBy` transformations are supported by this endpoint.\n\n If the metric key contains any symbols you must quote (`\"`) the key. The following characters inside of a quoted metric key must be escaped with a tilde (`~`):\n\n* Quotes (`\"`)\n* Tildes (`~`) \n\nFor example, to query the metric with the key of **ext:selfmonitoring.jmx.Agents: Type \"APACHE\"** you must specify this selector: \n\n `\"ext:selfmonitoring.jmx.Agents: Type ~\"APACHE~\"\"` \n\n\n\n To find metrics based on a search term, rather than metricId, use the **text** query parameter instead of this one.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "text",
          "in" : "query",
          "description" : "Metric registry search term. Only show metrics that contain the term in their key, display name, or description. Use the `metricSelector` parameter instead of this one to select a complete metric hierarchy instead of doing a text-based search.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Defines the list of metric properties included in the response. \n\n`metricId` is **always** included in the result. The following additional properties are available: \n\n* `displayName`: The name of the metric in the user interface. Enabled by default. \n* `description`: A short description of the metric. Enabled by default. \n* `unit`: The unit of the metric. Enabled by default. \n* `tags`: The tags of the metric. \n+ `dduBillable`:  An indicator whether the usage of metric consumes [Davis data units](https://dt-url.net/ddu). Deprecated and always `false` for Dynatrace Platform Subscription. Superseded by `billable`. \n+ `billable`:  An indicator whether the usage of metric is billable. \n* `created`:  The timestamp (UTC milliseconds) when the metrics has been created. \n* `lastWritten`:  The timestamp (UTC milliseconds) when metric data points have been written for the last time. \n* `aggregationTypes`: The list of allowed aggregations for the metric. Note that it may be different after a [transformation](https://dt-url.net/metricSelector) is applied. \n* `defaultAggregation`: The default aggregation of the metric. It is used when no aggregation is specified or the `:auto` transformation is set. \n* `dimensionDefinitions`: The fine metric division (for example, process group and process ID for some process-related metric). \n* `transformations`: A list of [transformations](https://dt-url.net/metricSelector) that can be applied to the metric.\n* `entityType`: A list of entity types supported by the metric.\n* `minimumValue`: The minimum allowed value of the metric.\n* `maximumValue`: The maximum allowed value of the metric.\n* `rootCauseRelevant`: Whether (true or false) the metric is related to a root cause of a problem. A root-cause relevant metric represents a strong indicator for a faulty component.\n* `impactRelevant`: Whether (true or false) the metric is relevant to a problem's impact. An impact-relevant metric is highly dependent on other metrics and changes because an underlying root-cause metric has changed.\n* `metricValueType`: The type of the metric's value. You have these options:\n\t * `score`: A score metric is a metric where high values indicate a good situation, while low values indicate trouble. An example of such a metric is a success rate.\n\t * `error`: An error metric is a metric where high values indicate trouble, while low values indicate a good situation. An example of such a metric is an error count.\n* `latency`: The latency of the metric, in minutes. The latency is the expected reporting delay (for example, caused by constraints of cloud vendors or other third-party data sources) between the observation of a metric data point and its availability in Dynatrace. The allowed value range is from `1` to `60` minutes.\n* `metricSelector`: The underlying metric selector used by a func: metric.\n* `scalar`: Indicates whether the metric expression resolves to a scalar (`true`) or to a series (`false`). \nA scalar result always contains one data point. The amount of data points in a series result depends on the resolution you're using. \n* `resolutionInfSupported`: If `true`, resolution=Inf can be applied to the metric query. \n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`.\n\nTo specify several properties, join them with a comma (for example `fields=+aggregationTypes,-description`).\n\nIf you specify just one property, the response contains the metric key and the specified property. To return metric keys only, specify `metricId` here.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "writtenSince",
          "in" : "query",
          "description" : "Filters the resulted set of metrics to those that have data points within the specified timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "metadataSelector",
          "in" : "query",
          "description" : "The metadata scope of the query. Only metrics with specified properties are included to the response. \n\nYou can set one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used. If several values are specified, the **OR** logic applies. \n\n* `unit(\"unit-1\",\"unit-2\")` \n* `tags(\"tag-1\",\"tag-2\")` \n* `dimensionKey(\"dimkey-1\",\"dimkey-2\")`. The filtering applies only to dimensions that were written within the last 14 days. \n* `custom(\"true\")`. \"true\" to include only user-defined metrics metrics (without namespace or with `ext:`, `calc:`, `func:`, `appmon:`), \"false\" to filter them out. \n\n* `exported(\"true\")`. \"true\" to include only exported metrics, \"false\" to filter them out. \n\nTo set several criteria, separate them with a comma (`,`). For example, `tags(\"feature\",\"cloud\"),unit(\"Percent\"),dimensionKey(\"location\"),custom(\"true\")`. Only results matching **all** criteria are included in response. \n\nFor example, to list metrics that have the tags **feature** AND **cloud** with a unit of **Percent** OR **MegaByte** AND a dimension with a dimension key **location**, use this **metadataSelector**: `tags(\"feature\"),unit(\"Percent\",\"MegaByte\"),tags(\"cloud\"),dimensionKey(\"location\")`.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDescriptorCollection"
                }
              },
              "text/csv; header=present; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDescriptorCollection"
                }
              },
              "text/csv; header=absent; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDescriptorCollection"
                }
              }
            }
          },
          "400" : {
            "description" : "Syntax or validation error. **metricSelector** or **fields** have syntactic or semantic errors."
          },
          "404" : {
            "description" : "A metric has not been found."
          },
          "406" : {
            "description" : "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "metrics.read" ]
      }
    },
    "/metrics/query" : {
      "get" : {
        "tags" : [ "Metrics" ],
        "summary" : "Gets data points of the specified metrics",
        "description" : "The following limits apply: \n* The amount of aggregated data points in the response is limited to 1,000 \n* The amount of series in the response is limited to 1,000 \n   * The amount of data points per series is limited to 10,080 (minutes of one week) \n   * The overall amount of data points is limited to 100,000 \n\nThe **dataPointCountRatio** specifies the ratio of queried data points divided by the maximum number of data points per metric that are allowed in a single query.\nThe **dimensionCountRatio** specifies the ratio of queried dimension tuples divided by the maximum number of dimension tuples allowed in a single query.",
        "operationId" : "query",
        "parameters" : [ {
          "name" : "metricSelector",
          "in" : "query",
          "description" : "Selects metrics for the query by their keys. You can select up to 10 metrics for one query.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\n\n\n If the metric key contains any symbols you must quote (`\"`) the key. The following characters inside of a quoted metric key must be escaped with a tilde (`~`):\n\n* Quotes (`\"`)\n* Tildes (`~`) \n\nFor example, to query the metric with the key of **ext:selfmonitoring.jmx.Agents: Type \"APACHE\"** you must specify this selector: \n\n `\"ext:selfmonitoring.jmx.Agents: Type ~\"APACHE~\"\"` \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resolution",
          "in" : "query",
          "description" : "The desired resolution of data points. \n\nYou can use one of the following options: \n* The desired amount of data points. This is the default option. This is a reference number of points, which is not necessarily equal to the number of the returned data points. \n* The desired timespan between data points. This is a reference timespan, which is not necessarily equal to the returned timespan. To use this option, specify the unit of the timespan. \n\nValid units for the timespan are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `q`: quarters \n* `y`: years \n\nIf not set, the default is **120 data points**.\n\nFor example: \n\n* Get data points which are 10 minutes apart: `resolution=10m` \n* Get data points which are 3 weeks apart: `resolution=3w`",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entitySelector",
          "in" : "query",
          "description" : "Specifies the entity scope of the query. Only data points delivered by matched entities are included in response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\nUse the [`GET /metrics/{metricId}`](https://dt-url.net/6z23ifk) call to fetch the list of possible entity types for your metric. \n\nTo set a universal scope matching all entities, omit this parameter.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mzSelector",
          "in" : "query",
          "description" : "The management zone scope of the query. Only metrics data relating to the specified management zones are included to the response. \n\nYou can set one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used. If several values are specified, the **OR** logic applies. \n\n* `mzId(123,456)` \n* `mzName(\"name-1\",\"name-2\")` \nTo set several criteria, separate them with a comma (`,`). For example, `mzName(\"name-1\",\"name-2\"),mzId(1234)`. Only results matching **all** of the criteria are included in the response.For example, to list metrics that have the id **123** OR **234** AND the name **name-1** OR **name-2**, use this **mzSelector**: `mzId(123,234),mzName(\"name-1\",\"name-2\").",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricData"
                }
              },
              "text/csv; header=present; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricData"
                }
              },
              "text/csv; header=absent; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricData"
                }
              }
            }
          },
          "400" : {
            "description" : "Syntax or validation error. From and to parameters, entitySelector or resolution are incorrect individually or in their combined meaning."
          },
          "404" : {
            "description" : "A metric has not been found."
          },
          "406" : {
            "description" : "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "metrics.read" ]
      }
    },
    "/networkZones/{id}" : {
      "get" : {
        "tags" : [ "Network zones" ],
        "summary" : "Gets parameters of the specified network zone",
        "operationId" : "getSingleNetworkZone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required network zone.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkZone"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "networkZones.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      },
      "put" : {
        "tags" : [ "Network zones" ],
        "summary" : "Updates an existing network zone or creates a new one",
        "description" : "If the network zone with the specified ID does not exist, a new network zone is created. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase.",
        "operationId" : "createOrUpdateNetworkZone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the network zone.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkZone"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new network zone has been created. The response body contains the ID of the new network zone.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The network zone has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "networkZones.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      },
      "delete" : {
        "tags" : [ "Network zones" ],
        "summary" : "Deletes the specified network zone",
        "description" : "You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using). \n\n If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives.",
        "operationId" : "deleteNetworkZone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the network zone to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. See error message in the response body for details.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "networkZones.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/networkZones" : {
      "get" : {
        "tags" : [ "Network zones" ],
        "summary" : "Lists all existing network zones",
        "operationId" : "getAllNetworkZones",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkZoneList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "networkZones.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/networkZones/{id}/hostConnectionStatistics" : {
      "get" : {
        "tags" : [ "Network zones" ],
        "summary" : "Gets the statistics about hosts using the network zone",
        "operationId" : "getHostStats",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required network zone.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filters the resulting set of hosts: \n\n* `all`: All hosts using the zone. \n* `configuredButNotConnectedOnly`: Hosts from the network zone that use other zones. \n* `connectedAsAlternativeOnly`: Hosts that use the network zone as an alternative. \n* `connectedAsFailoverOnly`: Hosts from other zones that use the zone (not configured as an alternative) even though ActiveGates of higher priority are available. \n* `connectedAsFailoverWithoutOwnActiveGatesOnly`: Hosts from other zones that use the zone (not configured as an alternative) and **no** ActiveGates of higher priority are available. \n\nIf not set, `all` is used.",
          "schema" : {
            "type" : "string",
            "enum" : [ "all", "configuredButNotConnectedOnly", "connectedAsAlternativeOnly", "connectedAsFailoverOnly", "connectedAsFailoverWithoutOwnActiveGatesOnly" ],
            "default" : "all"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkZoneConnectionStatistics"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "networkZones.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/networkZoneSettings" : {
      "get" : {
        "tags" : [ "Network zones" ],
        "summary" : "Gets the global configuration of network zones",
        "operationId" : "getNetworkZoneSettings",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkZoneSettings"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "networkZones.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      },
      "put" : {
        "tags" : [ "Network zones" ],
        "summary" : "Updates the global configuration of network zones",
        "operationId" : "updateNetworkZoneSettings",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains global configuration of network zones.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkZoneSettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The global network zones configuration has been updated. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "networkZones.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/oneagents/remoteConfigurationManagement" : {
      "get" : {
        "tags" : [ "OneAgent - Remote configuration management" ],
        "summary" : "Lists finished OneAgent remote configuration management jobs",
        "description" : "The response includes finished jobs for the last 7 days.",
        "operationId" : "getRemoteIdentityOperations_1",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe for a remote configuration management job. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe for a remote configuration management job. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementJobList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "oneAgents.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      },
      "post" : {
        "tags" : [ "OneAgent - Remote configuration management" ],
        "summary" : "Creates a new remote configuration management job",
        "operationId" : "createRemoteIdentityOperationJob_1",
        "parameters" : [ {
          "name" : "restart",
          "in" : "query",
          "description" : "One Agents will be restarted (`true`) or not (`false`) after configuration. By default OneAgents will be restarted when network zone or host group are reconfigured - the restart is required to apply the changes.",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing remote configuration management job definition.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteConfigurationManagementOperationOneAgentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementJob"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementValidationResult"
                }
              }
            }
          },
          "409" : {
            "description" : "Other remote configuration management job is currently being executed"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "oneAgents.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/oneagents/remoteConfigurationManagement/preview" : {
      "post" : {
        "tags" : [ "OneAgent - Remote configuration management" ],
        "summary" : "Creates a preview for remote configuration management job - applicable only to network zone, host group and ActiveGate group",
        "operationId" : "createRemoteIdentityOperationPreview_1",
        "requestBody" : {
          "description" : "JSON body of the request, containing remote configuration management job definition.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteConfigurationManagementOperationOneAgentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementPreviewList"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementValidationResult"
                }
              }
            }
          },
          "422" : {
            "description" : "Endpoint was executed for not supported operation type"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "oneAgents.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/oneagents/remoteConfigurationManagement/current" : {
      "get" : {
        "tags" : [ "OneAgent - Remote configuration management" ],
        "summary" : "Gets remote configuration management job that is currently running",
        "description" : "The currently running remote configuration management job may be related to ActiveGates or OneAgents. There is a limit of one concurrent remote configuration management job, regardless of the entity type.",
        "operationId" : "getCurrentRemoteIdentityOperationJob_1",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementJob"
                }
              }
            }
          },
          "204" : {
            "description" : "No remote configuration management job is currently running "
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "oneAgents.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/oneagents/remoteConfigurationManagement/{id}" : {
      "get" : {
        "tags" : [ "OneAgent - Remote configuration management" ],
        "summary" : "Gets the specified remote configuration management job",
        "operationId" : "getRemoteIdentityOperationJob_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required remote configuration management job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementJob"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "oneAgents.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/oneagents/remoteConfigurationManagement/validator" : {
      "post" : {
        "tags" : [ "OneAgent - Remote configuration management" ],
        "summary" : "Validates the payload for the `POST /oneagents/remoteConfigurationManagement` request.",
        "operationId" : "validateRemoteIdentityOperation_1",
        "requestBody" : {
          "description" : "JSON body of the request, containing remote configuration management job definition.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteConfigurationManagementOperationOneAgentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfigurationManagementValidationResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "oneAgents.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/tags" : {
      "get" : {
        "tags" : [ "Monitored entities - Custom tags" ],
        "summary" : "Gets a list of custom tags applied to the specified entities",
        "description" : "Automatically applied tags and imported tags are not included.",
        "operationId" : "getTags",
        "parameters" : [ {
          "name" : "entitySelector",
          "in" : "query",
          "description" : "Specifies the entities where you want to read tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomEntityTags"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "entities.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      },
      "post" : {
        "tags" : [ "Monitored entities - Custom tags" ],
        "summary" : "Adds custom tags to the specified entities",
        "description" : "All existing tags remain unaffected.",
        "operationId" : "postTags",
        "parameters" : [ {
          "name" : "entitySelector",
          "in" : "query",
          "description" : "Specifies the entities where you want to update tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains tags to be added to the matching entities.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddEntityTags"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddedEntityTags"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "entities.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ],
        "x-allow-access-with-management-zone-permissions" : true
      },
      "delete" : {
        "tags" : [ "Monitored entities - Custom tags" ],
        "summary" : "Deletes the specified tag from the specified entities",
        "operationId" : "deleteTags",
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "The key of the tag to be deleted. \n\nIf **deleteAllWithKey** is `true`, then all tags with this key are deleted. Otherwise, only tags with exact match of key **and** value are deleted. \n\nFor value-only tags, specify the value here.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "The value of the tag to be deleted. The value is ignored if **deleteAllWithKey** is `true`. \n\nFor value-only tags, specify the value in the **key** parameter.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deleteAllWithKey",
          "in" : "query",
          "description" : "* If `true`, all tags with the specified key are deleted, regardless of the value. \n* If `false`, only tags with exact match of key **and** value are deleted. \n\nIf not set, `false` is used.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "entitySelector",
          "in" : "query",
          "description" : "Specifies the entities where you want to delete tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeletedEntityTags"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "entities.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/logs/ingest" : {
      "post" : {
        "tags" : [ "Logs" ],
        "summary" : "Pushes log records to Dynatrace",
        "description" : "Ingested logs are stored in the indexed log storage. \n\nThis endpoint requires an ActiveGate with the **Log Analytics Collector** module enabled. \n\nThe maximum payload size of a single request is **5 MB**. Requests with a greater payload are rejected, and the API returns a 413 response code.\n\nIf the ingested payload is a JSON array, the maximum array size is **50000**. Requests with a greater payload are rejected, and the API returns a 413 response code.\n\n<br />**Log events per minute (SaaS)**: \n\nGrail tenants: no limit, other tenants: 1M per minute by default. \n\nIf your log data stream within your cluster exceeds the limit, all log events above the limit are ignored. \n\n<br />**Log events per minute (Managed)**: \n\n1k/minute per cluster by default. \n\nIf your log data stream within your cluster exceeds the limit, all log events above the limit are ignored. \n\nIf you increase resources (RAM) in your nodes, you can increase the limit based on the cluster resources size using an API call or Cluster Management Console (CMC). \n\n<br />Refresh cluster limit using the API call \n\nSee [Update log events per cluster for Log Monitoring](https://dt-url.net/f123yeu). \n\n<br />Refresh cluster limit using Cluster Management Console (CMC) \n\n1. In the CMC, select **Environments** and the environment for which you wish to update the total log events per cluster. \n\n2. On the environment details page, in the **Cluster overload prevention settings** section, select the **Refresh cluster limit**. \n\n**High-cardinality attributes:** \n\nUnique log data attributes (high-cardinality attributes) such as `span_id` and `trace_id` generate unnecessarily excessive facet lists that may impact log viewer performance. Because of this, they aren't listed in log viewer facets. You can still use them in a log viewer advanced search query. \n\n",
        "operationId" : "storeLog",
        "requestBody" : {
          "description" : "The body of the request. Contains one or more log events to be ingested. \n\nThe endpoint accepts one of the following payload types, defined by the **Accept** header: \n\n* `text/plain`: supports only one log event. \n* `application/json`: supports multiple log events in a single payload.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/LogMessageJson"
              },
              "examples" : {
                "JSON array representing two events." : {
                  "summary" : "JSON format",
                  "description" : "JSON array representing two events.",
                  "value" : [ {
                    "content" : "Exception: Custom error log sent via Generic Log Ingest",
                    "log.source" : "/var/log/syslog",
                    "timestamp" : "2022-01-17T22:12:31.0000",
                    "severity" : "error",
                    "custom.attribute" : "attribute value"
                  }, {
                    "content" : "Exception: Custom error log sent via Generic Log Ingest",
                    "log.source" : "/var/log/syslog",
                    "timestamp" : "2022-01-17T22:12:35.0000"
                  }, {
                    "content" : "Exception: Custom error log sent via Generic Log Ingest",
                    "log.source" : "/var/log/syslog"
                  }, {
                    "content" : "Exception: Custom error log sent via Generic Log Ingest"
                  } ]
                }
              }
            },
            "text/plain; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/LogMessagePlain"
              },
              "examples" : {
                "Plain text message representing a single log event" : {
                  "summary" : "Plain text format",
                  "description" : "Plain text message representing a single log event",
                  "value" : "example log content"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Only a part of input events were ingested due to event invalidity. For details, check the response body.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessEnvelope"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "402" : {
            "description" : "Failed. You can't add more logs to the storage, because you are out of [Davis Data Units](https://dt-url.net/dduLog) (DDU). Purchase additional DDUs.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist. This may happen when no ActiveGate is available with the Log Analytics Collector module enabled.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "413" : {
            "description" : "Failed. Request payload size is too big. This may happen when the payload byte size exceeds the limit or when the ingested payload is a JSON array with the size exceeding the limit.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "429" : {
            "description" : "Failed. Too Many Requests. This may happen when ActiveGate is unable to process more requests at the moment or when log ingest is disabled.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "501" : {
            "description" : "Failed. The server either does not recognize the request method, or it lacks the ability to fulfil the request. May happen when indexed log storage is not enabled.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "503" : {
            "description" : "Failed. The server is currently unable to handle the request. This may happen when ActiveGate is overloaded.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "logs.ingest" ]
      }
    },
    "/otlp/v1/logs" : {
      "post" : {
        "tags" : [ "OpenTelemetry Protocol (OTLP) Logs Ingest" ],
        "summary" : "Implementation of the OTLP/HTTP protocol for logs ingest. | maturity=EARLY_ADOPTER",
        "description" : "This endpoint can be targeted by OpenTelemetry log exporters.",
        "operationId" : "ingestLog",
        "requestBody" : {
          "description" : "An ExportLogsServiceRequest message in binary protobuf format.",
          "content" : {
            "application/x-protobuf" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "byte"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has been received and will be processed."
          },
          "400" : {
            "description" : "The request could not be processed. This may happen if the message is malformed."
          },
          "413" : {
            "description" : "The OTLP message exceeded the payload size limit."
          },
          "500" : {
            "description" : "The request could not be processed due to an internal server error."
          },
          "503" : {
            "description" : "The service is currently unavailable."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "logs.ingest" ]
      }
    },
    "/metrics/ingest" : {
      "post" : {
        "tags" : [ "Metrics" ],
        "summary" : "Pushes metric data points to Dynatrace",
        "operationId" : "ingest",
        "requestBody" : {
          "description" : "Data points, provided in the [line protocol](https://dt-url.net/5d63ic1). Each line represents a single data point.",
          "content" : {
            "text/plain; charset=utf-8" : {
              "schema" : {
                "type" : "string"
              },
              "example" : "server.cpu.temperature,cpu.id=0 42"
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "The provided metric data points are accepted and will be processed in the background.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Some data points are invalid. Valid data points are accepted and will be processed in the background.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "metrics.ingest" ]
      }
    },
    "/otlp/v1/traces" : {
      "post" : {
        "tags" : [ "OpenTelemetry Protocol (OTLP) Trace Ingest" ],
        "summary" : "Implementation of the OTLP/HTTP protocol for trace ingest.",
        "description" : "This endpoint can be targeted by OpenTelemetry exporters. Ingested traces are forwarded to the server.",
        "operationId" : "ingestTrace",
        "requestBody" : {
          "description" : "An ExportTraceServiceRequest message in binary protobuf format.",
          "content" : {
            "application/x-protobuf" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "byte"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has been received and will be processed."
          },
          "400" : {
            "description" : "The request could not be processed. This may happen if the message is malformed."
          },
          "500" : {
            "description" : "The request could not be processed due to an internal server error."
          },
          "503" : {
            "description" : "The service is currently unavailable. This may happen if the module is paused."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "openTelemetryTrace.ingest" ]
      }
    },
    "/otlp/v1/metrics" : {
      "post" : {
        "tags" : [ "OpenTelemetry Protocol (OTLP) Metric Ingest" ],
        "summary" : "Implementation of the OTLP/HTTP protocol for metric ingest.",
        "description" : "This endpoint can be targeted by OpenTelemetry metric exporters.",
        "operationId" : "ingestMetric",
        "requestBody" : {
          "description" : "An ExportMetricServiceRequest message in binary protobuf format.",
          "content" : {
            "application/x-protobuf" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "byte"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has been received and will be processed."
          },
          "400" : {
            "description" : "The request could not be processed. This may happen if the message is malformed."
          },
          "413" : {
            "description" : "The OTLP message exceeded the payload size limit."
          },
          "500" : {
            "description" : "The request could not be processed due to an internal server error."
          },
          "503" : {
            "description" : "The service is currently unavailable. This may happen if the module is paused."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "metrics.ingest" ]
      }
    },
    "/activeGateTokens" : {
      "get" : {
        "tags" : [ "Access Tokens - ActiveGate tokens" ],
        "summary" : "Lists all available ActiveGate tokens",
        "description" : "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "listTokens",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of ActiveGate tokens in a single response payload. \n\nThe maximal allowed page size is 3000 and the minimal size is 100. \n\nIf not set, 100 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the list of ActiveGate tokens.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateTokenList"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGateTokenManagement.read" ]
      },
      "post" : {
        "tags" : [ "Access Tokens - ActiveGate tokens" ],
        "summary" : "Creates a new ActiveGate token",
        "description" : "The newly created token will be owned by the same user who owns the token used for authentication of the call.",
        "operationId" : "createToken",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new ActiveGate token.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActiveGateTokenCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The token has been created. The body of the response contains the token secret.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateTokenCreated"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGateTokenManagement.create", "activeGateTokenManagement.write" ]
      }
    },
    "/activeGateTokens/{activeGateTokenIdentifier}" : {
      "get" : {
        "tags" : [ "Access Tokens - ActiveGate tokens" ],
        "summary" : "Gets metadata of an ActiveGate token",
        "description" : "The token secret is **not** exposed.",
        "operationId" : "getToken",
        "parameters" : [ {
          "name" : "activeGateTokenIdentifier",
          "in" : "path",
          "description" : "The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/rn00tjg) of the token.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the metadata of the tokens.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateToken"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGateTokenManagement.read" ]
      },
      "delete" : {
        "tags" : [ "Access Tokens - ActiveGate tokens" ],
        "summary" : "Deletes an ActiveGate token",
        "operationId" : "revokeToken",
        "parameters" : [ {
          "name" : "activeGateTokenIdentifier",
          "in" : "path",
          "description" : "The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/rn00tjg) of the token to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "activeGateTokenManagement.write" ]
      }
    },
    "/apiTokens" : {
      "get" : {
        "tags" : [ "Access Tokens - API tokens" ],
        "summary" : "Lists all available API tokens",
        "description" : "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "listApiTokens",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of API tokens in a single response payload. \n\nThe maximal allowed page size is 10000 and the minimal allowed page size is 100. \n\nIf not set, 200 is used.",
          "schema" : {
            "maximum" : 10000,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "apiTokenSelector",
          "in" : "query",
          "description" : "Filters the resulting sets of tokens. Only tokens matching the specified criteria are included into response. \n\nYou can set one or more of the following criteria: \n\n* Owner: `owner(\"value\")`. The user that owns the token. Case-sensitive.\n* Personal access token: `personalAccessToken(false)`. Set to `true` to include only personal access tokens or to `false` to include only API tokens.\n* Token scope: `scope(\"scope1\",\"scope2\")`. If several values are specified, the **OR** logic applies. \n\nTo set multiple criteria, separate them with commas (`,`). Only results matching **all** criteria are included into response.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Specifies the fields to be included in the response.\n\nThe following fields are included by default: \n\n* `id` \n* `name` \n* `enabled` \n* `owner` \n* `creationDate` \n\nTo remove fields from the response, specify them with the minus (`-`) operator as a comma-separated list (for example, `-creationDate,-owner`). \n\nYou can include additional fields: \n\n* `personalAccessToken` \n* `expirationDate` \n* `lastUsedDate` \n* `lastUsedIpAddress` \n* `modifiedDate` \n* `scopes` \n\n* `additionalMetadata` \n\nTo add fields to the response, specify them with the plus (`+`) operator as a comma-separated list (for example, `+expirationDate,+scopes`). You can combine adding and removing of fields (for example, `+scopes,-creationDate`). \n\nAlternatively, you can define the desired set of fields in the response. Specify the required fields as a comma-separated list, without operators (for example, `creationDate,expirationDate,owner`). The ID is always included in the response. \n\nThe **fields** string must be URL-encoded.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Filters tokens based on the last usage time. \nThe start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "Filters tokens based on the last usage time. \nThe end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "The sort order of the token list. \n\nYou can sort by the following properties with a sign prefix for the sort order: \n\n * `name`: token name (`+` a...z or `-` z...a) \n * `lastUsedDate` last used (`+` never used tokens first `-` most recently used tokens first) \n * `creationDate` (`+` oldest tokens first `-` newest tokens first) \n * `expirationDate` (`+` tokens that expire soon first `-` unlimited tokens first) \n * `modifiedDate` last modified (`+` never modified tokens first `-` most recently modified tokens first) \n\nIf no prefix is set, + is used. \n\nIf not set, tokens are sorted by creation date with newest first.",
          "schema" : {
            "type" : "string",
            "default" : "-creationDate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiTokenList"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "apiTokens.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      },
      "post" : {
        "tags" : [ "Access Tokens - API tokens" ],
        "summary" : "Creates a new API token",
        "description" : "The newly created token will be owned by the same user who owns the token used for authentication of the call. \n\n Creating personal access tokens requires the `environment:roles:viewer` permission. Creating access tokens requires the `environment:roles:manage-settings` permission.",
        "operationId" : "createApiToken",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new API token.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiTokenCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The token has been created. The body of the response contains the token secret.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiTokenCreated"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "apiTokens.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/apiTokens/{id}" : {
      "get" : {
        "tags" : [ "Access Tokens - API tokens" ],
        "summary" : "Gets API token metadata by token ID",
        "description" : "The token secret is **not** exposed.",
        "operationId" : "getApiToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the token.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiToken"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "apiTokens.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      },
      "put" : {
        "tags" : [ "Access Tokens - API tokens" ],
        "summary" : "Updates an API token",
        "operationId" : "updateApiToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the API token.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiTokenUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "apiTokens.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      },
      "delete" : {
        "tags" : [ "Access Tokens - API tokens" ],
        "summary" : "Deletes an API token",
        "operationId" : "deleteApiToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. You can't delete the token you're using for authentication of the request.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "apiTokens.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/apiTokens/lookup" : {
      "post" : {
        "tags" : [ "Access Tokens - API tokens" ],
        "summary" : "Gets API token metadata by token secret",
        "operationId" : "lookupApiToken",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the required token.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiTokenSecret"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiToken"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/auditlogs/{id}" : {
      "get" : {
        "tags" : [ "Audit Logs" ],
        "summary" : "Gets the specified entry of the audit log | maturity=EARLY_ADOPTER",
        "operationId" : "getLog",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required log entry.",
          "required" : true,
          "schema" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuditLogEntry"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. Invalid ID format.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "auditLogs.read" ]
      }
    },
    "/auditlogs" : {
      "get" : {
        "tags" : [ "Audit Logs" ],
        "summary" : "Gets the audit log of your Dynatrace environment | maturity=EARLY_ADOPTER",
        "description" : "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "getLogs",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of log entries in a single response payload. \n\nThe maximal allowed page size is 5000. \n\nIf not set, 1000 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filters the audit log. You can use the following criteria: \n* User: `user(\"userIdentification\")`. The `EQUALS` operator applies. \n* Event type: `eventType(\"value\")`. The `EQUALS` operator applies. \n* Category of a logged operation: `category(\"value\")`. The `EQUALS` operator applies. \n* Entity ID: `entityId(\"id\")`. The `CONTAINS` operator applies. \n\nFor each criterion, you can specify multiple alternatives with comma-separated values. In this case, the OR logic applies. For example, `eventType(\"CREATE\",\"UPDATE\")` means eventType can be \"CREATE\" or \"UPDATE\". \n\nYou can specify multiple comma-separated criteria, such as `eventType(\"CREATE\",\"UPDATE\"),category(\"CONFIG\")`. Only results matching **all** criteria are included in response. \n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes: \n* Tilde `~` \n* Quote `\"`",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "The sorting of audit log entries: \n* `timestamp`: Oldest first. \n* `-timestamp`: Newest first. \n\nIf not set, the newest first sorting is applied.",
          "schema" : {
            "type" : "string",
            "default" : "-timestamp"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuditLog"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "auditLogs.read" ]
      }
    },
    "/bizevents/ingest" : {
      "post" : {
        "tags" : [ "Business Events" ],
        "summary" : "Ingests a business event",
        "description" : "The ingestion of business events consumes [Davis Data Units](https://dt-url.net/ddu) (DDUs) from the business events pool.",
        "operationId" : "ingest_1",
        "requestBody" : {
          "description" : "The Business Event",
          "content" : {
            "application/cloudevent+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloudEvent"
              },
              "example" : {
                "specversion" : "1.0",
                "id" : "1",
                "source" : "custom.source",
                "type" : "com.mycompany.shop.checkout",
                "dtcontext" : "dt.session_id=\"234234234324235345345\",dt.entity.rum_application=\"APPLICATION-53453458340758\",host.name=\"123.123.123.123\"",
                "dataschema" : "http://dynatrace.com/schema/bizevents/generic/1.0",
                "traceparent" : "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-00",
                "data" : {
                  "id" : "OR-838475",
                  "paymentType" : "paypal",
                  "plannedDeliveryDate" : "01.01.2021",
                  "total" : 234.0
                }
              }
            },
            "application/cloudevent-batch+json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CloudEvent"
                }
              },
              "example" : [ {
                "specversion" : "1.0",
                "id" : "1",
                "source" : "custom.provider",
                "type" : "com.easytravel.funnel.product-view",
                "data" : "just a string"
              }, {
                "specversion" : "1.0",
                "id" : "2",
                "source" : "custom.provider",
                "type" : "com.easytravel.frontend.booking-process-triggered",
                "data_base64" : "SGkgdGhlcmUsIEkgYW0geW91ciBteXN0aWNhbCwgdW5rbm93biBjb250ZW50"
              } ]
            },
            "application/json; charset=utf-8" : {
              "schema" : {
                "type" : "object",
                "description" : "Can be either a Json-Object or an Array of Json-Objects.\nFollowing properties have special semantics:\n- time - Timestamp in millis, will be set if missing\n- event.id - Will be auto-generated if missing\n- event.provider - Defaults to 'unknown' if missing\n- event.type - Defaults to 'unknown' if missing\n- event.kind - Always overridden to 'BIZ_EVENT'\n\nAny other keys will be transferred as event properties."
              },
              "example" : {
                "id" : "1",
                "paymentType" : "paypal",
                "plannedDeliveryDate" : "01.01.2021",
                "event.provider" : "custom.provider",
                "total" : 234.0,
                "customer" : {
                  "firstName" : "John",
                  "lastName" : "Doe"
                },
                "orderItemsProductIDs" : [ "PR-102002002", "QZ-123232" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "The provided business events are all accepted and will be processed.",
            "content" : {
              "application/json; charset=utf-8" : {
                "example" : { }
              }
            }
          },
          "400" : {
            "description" : "Some business events are invalid. Valid business events are accepted and will be processed.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BizEventIngestResult"
                }
              }
            }
          }
        },
        "x-only-visible-in-saas" : true
      }
    },
    "/attacks/{id}" : {
      "get" : {
        "tags" : [ "Attacks" ],
        "summary" : "Gets the specified attack | maturity=EARLY_ADOPTER",
        "operationId" : "getAttack",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the attack.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "A list of additional attack properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `attackTarget`: The targeted host/database of an attack.\n* `request`: The request that was sent from the attacker.\n* `entrypoint`: The entry point used by an attacker to start a specific attack.\n* `vulnerability`: The vulnerability utilized by the attack.\n* `securityProblem`: The related security problem.\n* `attacker`: The attacker of an attack.\n* `managementZones`: The related management zones.\n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+attackTarget,+securityProblem`).\n",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Attack"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "attacks.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems", "environment:roles:view-security-problems" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/attacks" : {
      "get" : {
        "tags" : [ "Attacks" ],
        "summary" : "Lists all attacks | maturity=EARLY_ADOPTER",
        "operationId" : "getAttacks",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of attacks in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attackSelector",
          "in" : "query",
          "description" : "Defines the scope of the query. Only attacks matching the specified criteria are included in the response. You can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* State: `state(\"value\")`. The state of the attack. Possible values are `EXPLOITED`, `BLOCKED`, and `ALLOWLISTED`.\n* Attack Type: `attackType(\"value\")`. The type of the attack. Find the possible values in the description of the **attackType** field of the response.\n* Country Code: `countryCode(\"value\")`. The country code of the attacker. Supported values include all ISO-3166-1 alpha-2 country codes (2-letter). Supplying empty filter value `countryCode()` will return attacks, where location is not available.\n* Request path contains: `requestPathContains(\"value\")`. Filters for a substring in the request path. The `CONTAINS` operator is used. A maximum of 48 characters are allowed.\n* Process group name contains: `processGroupNameContains(\"value\")`. Filters for a substring in the targeted process group's name. The `CONTAINS` operator is used.\n* Vulnerability ID: `vulnerabilityId(\"123456789\")`. The exact ID of the vulnerability.\n* Source IPs: `sourceIps(\"93.184.216.34\", \"63.124.6.12\")`. The exact IPv4/IPv6 addresses of the attacker.\n* Management zone ID: `managementZoneIds(\"mzId-1\", \"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\", \"name-2\")`. Values are case sensitive.\n* Technology: `technology(\"technology-1\", \"technology-2\")`. Find the possible values in the description of the **technology** field of the response. The `EQUALS` operator is used.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching (**all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Specifies one or more fields for sorting the attack list. Multiple fields can be concatenated using a comma (`,`) as a separator (e.g. `+state,-timestamp`).\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n* `displayId`: The attack's display ID.\n* `displayName`: The attack's display name.\n* `attackType`: The type of the attack (e.g. SQL_INJECTION, JNDI_INJECTION, etc.).\n* `state`: The state of the attack. (`+` low severity state first `-` high severity state first)\n* `sourceIp`: The IP address of the attacker. Sorts by the numerical IP value.\n* `requestPath`: The request path where the attack was started.\n* `timestamp`: When the attack was executed. (`+` old attacks first or `-` new attacks first)\nIf no prefix is set, `+` is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "A list of additional attack properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `attackTarget`: The targeted host/database of an attack.\n* `request`: The request that was sent from the attacker.\n* `entrypoint`: The entry point used by an attacker to start a specific attack.\n* `vulnerability`: The vulnerability utilized by the attack.\n* `securityProblem`: The related security problem.\n* `attacker`: The attacker of an attack.\n* `managementZones`: The related management zones.\n* `affectedEntities`: The affected entities of an attack.\n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+attackTarget,+securityProblem`).\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttackList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "attacks.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems", "environment:roles:view-security-problems" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/davis/securityAdvices" : {
      "get" : {
        "tags" : [ "Davis security advisor" ],
        "summary" : "Provides advice for security problems.",
        "description" : "You can narrow down the output by providing the management zone and pagination. If you specify a management zone, only problems originating from that zone are included to the request.",
        "operationId" : "getAdviceForSecurityProblems",
        "parameters" : [ {
          "name" : "managementZoneFilter",
          "in" : "query",
          "description" : "To specify management zones, use one of the options listed below. For each option you can specify multiple comma-separated values. If several values are specified, the **OR** logic applies. All values are case-sensitive and must be quoted. \n\n* Management zone ID: ids(\"mzId-1\", \"mzId-2\"). \n* Management zone names: names(\"mz-1\", \"mz-2\"). \n\nYou can specify several comma-separated criteria (for example, `names(\"myMz\"),ids(\"9130632296508575249\")`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of security advices in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 5 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DavisSecurityAdviceList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "securityProblems.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems", "environment:roles:view-security-problems" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/securityProblems/{id}/remediationItems/mute" : {
      "post" : {
        "tags" : [ "Security problems" ],
        "summary" : "Mutes several remediation items",
        "operationId" : "bulkMuteRemediationItems",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required third-party security problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the muting information.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemediationItemsBulkMute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The remediation item(s) have been muted.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemediationItemsBulkMuteResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "securityProblems.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/securityProblems/mute" : {
      "post" : {
        "tags" : [ "Security problems" ],
        "summary" : "Mutes several security problems",
        "operationId" : "bulkMuteSecurityProblems",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the muting information.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityProblemsBulkMute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The security problem(s) have been muted.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecurityProblemsBulkMuteResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "securityProblems.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems" ]
      }
    },
    "/securityProblems/{id}/remediationItems/unmute" : {
      "post" : {
        "tags" : [ "Security problems" ],
        "summary" : "Un-mutes several remediation items",
        "operationId" : "bulkUnmuteRemediationItems",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required third-party security problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the un-muting information.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemediationItemsBulkUnmute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The remediation item(s) have been un-muted. ",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemediationItemsBulkUnmuteResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "securityProblems.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/securityProblems/unmute" : {
      "post" : {
        "tags" : [ "Security problems" ],
        "summary" : "Un-mutes several security problems",
        "operationId" : "bulkUnmuteSecurityProblems",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the un-muting information.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityProblemsBulkUnmute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The security problem(s) have been un-muted.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecurityProblemsBulkUnmuteResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "securityProblems.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems" ]
      }
    },
    "/securityProblems/{id}/events" : {
      "get" : {
        "tags" : [ "Security problems" ],
        "summary" : "Lists all events of a security problem",
        "operationId" : "getEventsForSecurityProblem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required security problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the list of security problem events.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecurityProblemEventsList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "securityProblems.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems", "environment:roles:view-security-problems" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/securityProblems/{id}/remediationItems/{remediationItemId}" : {
      "get" : {
        "tags" : [ "Security problems" ],
        "summary" : "Gets parameters of a remediation item of a security problem | maturity=EARLY_ADOPTER",
        "operationId" : "getRemediationItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required third-party security problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationItemId",
          "in" : "path",
          "description" : "The ID of the remediation item.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains details of a single remediation item of a security problem.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemediationDetailsItem"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "securityProblems.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems", "environment:roles:view-security-problems" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/securityProblems/{id}/remediationItems" : {
      "get" : {
        "tags" : [ "Security problems" ],
        "summary" : "Lists remediation items of a third-party security problem",
        "operationId" : "getRemediationItems",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required third-party security problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationItemSelector",
          "in" : "query",
          "description" : "Defines the scope of the query. Only remediable entities matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Vulnerability state: `vulnerabilityState(\"value\")`. Find the possible values in the description of the **vulnerabilityState** field of the response. If not set, all entities are returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or `FALSE`.\n* Reachable data asset assessment: `assessment.dataAssets(\"value\")` Possible values are `REACHABLE`, and `NOT_DETECTED`.\n* Network exposure assessment: `assessment.exposure(\"value\")` Possible values are `PUBLIC_NETWORK`, and `NOT_DETECTED`.\n* Vulnerable function usage assessment: `assessment.vulnerableFunctionUsage(\"value\")` Possible values are `IN_USE`, and `NOT_IN_USE`.\n* Vulnerable function in use contains: `assessment.vulnerableFunctionInUseContains(\"value\")`. Possible values are `class::function`, `class::` and `function`. The `CONTAINS` operator is used. Only vulnerable functions in use are considered.\n* Assessment accuracy: `assessment.accuracy(\"value\")` Possible values are `FULL` and `REDUCED`.\n* Entity name contains: `entityNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the list of remediation items of a problem.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemediationItemList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "securityProblems.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems", "environment:roles:view-security-problems" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/securityProblems/{id}/remediationItems/{remediationItemId}/remediationProgressEntities" : {
      "get" : {
        "tags" : [ "Security problems" ],
        "summary" : "Lists remediation progress entities | maturity=EARLY_ADOPTER",
        "operationId" : "getRemediationProgressEntities",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required third-party security problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationItemId",
          "in" : "path",
          "description" : "The ID of the remediation item.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationProgressEntitySelector",
          "in" : "query",
          "description" : "Defines the scope of the query. Only remediation progress entities matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* State: `state(\"value\")`. Possible values the **state** field are `AFFECTED` and `UNAFFECTED`. If not set, all entities are returned.\n* Vulnerable function usage assessment: `assessment.vulnerableFunctionUsage(\"value\")` Possible values are `IN_USE`, and `NOT_IN_USE`.\n* Vulnerable function in use contains: `assessment.vulnerableFunctionInUseContains(\"value\")`. Possible values are `class::function`, `class::` and `function`. The `CONTAINS` operator is used. Only vulnerable functions in use are considered.\n* Entity name contains: `entityNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains a list of remediation progress entities of a remediation item of a security problem. The number of entities returned is limited.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemediationProgressEntityList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "securityProblems.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems", "environment:roles:view-security-problems" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/securityProblems/{id}" : {
      "get" : {
        "tags" : [ "Security problems" ],
        "summary" : "Gets parameters of a security problem",
        "operationId" : "getSecurityProblem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required security problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "A list of additional security problem properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n* `codeLevelVulnerabilityDetails`: Details of the code-level vulnerability.\n* `globalCounts`: Globally calculated statistics about the security problem. No management zone information is taken into account.\n* `filteredCounts`: Statistics about the security problem, filtered by the management zone and timeframe start ('from') query parameters. \n* `description`: The description of the vulnerability.\n* `events`: The security problem's last 10 events within the last 365 days, sorted from newest to oldest.\n* `vulnerableComponents`: A list of vulnerable components of the security problem within the provided filter range. \n* `affectedEntities`: A list of affected entities of the security problem within the provided filter range. \n* `exposedEntities`: A list of exposed entities of the security problem within the provided filter range. \n* `reachableDataAssets`: A list of data assets reachable by affected entities of the security problem within the provided filter range. \n* `relatedEntities`: A list of related entities of the security problem within the provided filter range. \n* `relatedContainerImages`: A list of related container images of the security problem within the provided filter range. \n* `relatedAttacks`: A list of attacks detected on the exposed security problem. \n* `entryPoints`: A list of entry points and a flag which indicates whether this list was truncated or not.\n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+riskAssessment,+managementZones`).\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Based on the timeframe start the affected-, related- and vulnerable entities are being calculated.\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the default timeframe start of 24 hours in the past is used (`now-24h`).\n\nThe timeframe start must not be older than 365 days.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains parameters of the security problem.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecurityProblemDetails"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "securityProblems.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems", "environment:roles:view-security-problems" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/securityProblems" : {
      "get" : {
        "tags" : [ "Security problems" ],
        "summary" : "Lists all security problems",
        "operationId" : "getSecurityProblems",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of security problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "securityProblemSelector",
          "in" : "query",
          "description" : "Defines the scope of the query. Only security problems matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Status: `status(\"value\")`. Find the possible values in the description of the **status** field of the response. If not set, all security problems are returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or `FALSE`.\n* Risk level: `riskLevel(\"value\")`. The Davis risk level. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum risk score: `minRiskScore(\"5.5\")`. The Davis minimum risk score. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum risk score: `maxRiskScore(\"5.5\")`. The Davis maximum risk score. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* Base risk level: `baseRiskLevel(\"value\")`. The Base risk level from the CVSS. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum base risk score: `minBaseRiskScore(\"5.5\")`. The minimum base risk score from the CVSS. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum base risk score: `maxBaseRiskScore(\"5.5\")`. The maximum base risk score from the CVSS. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* External vulnerability ID contains: `externalVulnerabilityIdContains(\"id-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* External vulnerability ID: `externalVulnerabilityId(\"id-1\", \"id-2\")`. \n* CVE ID: `cveId(\"id\")`.\n* Risk assessment `riskAssessment(\"value-1\", \"value-2\")` Possible values are `EXPOSED`, `SENSITIVE`, `EXPLOIT`, `VULNERABLE_FUNCTION_IN_USE` and `ACCURACY_REDUCED`.\n* Related host ID: `relatedHostIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related host name: `relatedHostNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related host name contains: `relatedHostNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Related Kubernetes cluster ID: `relatedKubernetesClusterIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes cluster name: `relatedKubernetesClusterNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes cluster name contains: `relatedKubernetesClusterNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Related Kubernetes workload ID: `relatedKubernetesWorkloadIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes workload name: `relatedKubernetesWorkloadNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes workload name contains: `relatedKubernetesWorkloadNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Management zone ID: `managementZoneIds(\"mzId-1\", \"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Affected process group instance ID: `affectedPgiIds(\"pgiId-1\", \"pgiId-2\")`. Specify Dynatrace entity IDs here.\n* Affected process group ID: `affectedPgIds(\"pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs here.\n* Affected process group name: `affectedPgNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Affected process group name contains: `affectedPgNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n* Vulnerable component ID: `vulnerableComponentIds(\"componentId-1\", \"componentId-2\")`. Specify component IDs here.\n* Vulnerable component name: `vulnerableComponentNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Vulnerable component name contains: `vulnerableComponentNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n* Host tags: `hostTags(\"hostTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Process group tags: `pgTags(\"pgTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Process group instance tags: `pgiTags(\"pgiTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Tags: `tags(\"tag-1\")`. The `CONTAINS` operator is used. This selector picks hosts, process groups, and process group instances at the same time. Maximum value length is 48 characters.\n* Display ID: `displayIds(\"S-1234\", \"S-5678\")`. The `EQUALS` operator is used.\n* Security problem ID: `securityProblemIds(\"12544152654387159360\", \"5904857564184044850\")`. The `EQUALS` operator is used.\n* Technology: `technology(\"technology-1\", \"technology-2\")`. Find the possible values in the description of the **technology** field of the response. The `EQUALS` operator is used.\n* Vulnerability type: `vulnerabilityType(\"type-1\", \"type-2\")`. Possible values are `THIRD_PARTY`, `CODE_LEVEL`, `RUNTIME`.\n\nRisk score and risk category are mutually exclusive (cannot be used at the same time).\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Specifies one or more fields for sorting the security problem list. Multiple fields can be concatenated using a comma (`,`) as a separator (e.g. `+status,-timestamp`).\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n* `status`: The security problem status (`+` open first or `-` resolved first) \n* `muted`: The security problem mute state (`+` unmuted first or `-` muted first) \n* `technology`: The security problem technology \n* `firstSeenTimestamp`: The timestamp of the first occurrence of the security problem (`+` new problems first or `-` old problems first) \n* `lastUpdatedTimestamp`: The timestamp of the last update of the security problem (`+` recently updated problems first or `-`  earlier updated problems first)\n* `securityProblemId`: The auto-generated ID of the security problem (`+` lower number first or `-` higher number first) \n* `externalVulnerabilityId`: The ID of the external vulnerability (`+` lower number first or `-` higher number first) \n* `displayId`: The display ID (`+` lower number first or `-` higher number first) \n* `riskAssessment.riskScore`: The Davis security score (`+` lower score first or `-` higher score first) \n* `riskAssessment.riskLevel`: The Davis security level (`+` lower level first or `-` higher level first) \n* `riskAssessment.exposure`: Whether the problem is exposed to the internet \n* `riskAssessment.dataAssets`: Whether data assets are affected \n* `riskAssessment.vulnerableFunctionUsage`: Whether vulnerable functions are used \n* `riskAssessment.assessmentAccuracy`: The assessments accuracy (`+` less accuracy first or `-` more accuracy first) \n* `globalCounts.affectedNodes`: Number of affected nodes (`+` lower number first or `-` higher number first) \n* `globalCounts.affectedProcessGroupInstances`: Number of affected process group instances (`+` lower number first or `-` higher number first) \n* `globalCounts.affectedProcessGroups`: Number of affected process groups (`+` lower number first or `-` higher number first) \n* `globalCounts.exposedProcessGroups`: Number of exposed process groups (`+` lower number first or `-` higher number first) \n* `globalCounts.reachableDataAssets`: Number of reachable data assets (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedApplications`: Number of related applications (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedAttacks`: Number of attacks on the security problem (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedHosts`: Number of related hosts (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedKubernetesClusters`: Number of related Kubernetes cluster (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedKubernetesWorkloads`: Number of related Kubernetes workloads (`+` lower number first or `-` higher number first) \n* `globalCounts.relatedServices`: Number of related services (`+` lower number first or `-` higher number first) \n* `globalCounts.vulnerableComponents`: Number of vulnerable components (`+` lower number first or `-` higher number first) \n\nIf no prefix is set, `+` is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "A list of additional security problem properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n* `codeLevelVulnerabilityDetails`: Details of the code-level vulnerability.\n* `globalCounts`: Globally calculated statistics about the security problem. No management zone information is taken into account.\n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+riskAssessment,+managementZones`).\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.\n\nThe end of the timeframe must not be older than 365 days.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the list of security problems.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecurityProblemList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "securityProblems.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems", "environment:roles:view-security-problems" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/securityProblems/{id}/vulnerableFunctions" : {
      "get" : {
        "tags" : [ "Security problems" ],
        "summary" : "Lists all vulnerable functions and their usage for a third-party security problem",
        "operationId" : "getVulnerableFunctions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required third-party security problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vulnerableFunctionsSelector",
          "in" : "query",
          "description" : "Defines the scope of the query. Only vulnerable functions matching the specified criteria are included in the response.\n\nYou can add the following criteria. Values are *not* case sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Management zone ID: `managementZoneIds(\"mzId-1\", \"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\", \"name-2\")`. Values are case sensitive.\n* Process group ID: `processGroupIds(\"pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs here.\n* Process group name: `processGroupNames(\"name-1\", \"name-2\")`. Values are case sensitive.\n* Process group name contains: `processGroupNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupBy",
          "in" : "query",
          "description" : "Defines additional grouping types in which vulnerable functions should be displayed.\n\nYou can add one of the following grouping types.\n\n* Process group: `PROCESS_GROUP`",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the list of vulnerable functions.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VulnerableFunctionsContainer"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "securityProblems.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems", "environment:roles:view-security-problems" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/securityProblems/{id}/mute" : {
      "post" : {
        "tags" : [ "Security problems" ],
        "summary" : "Mutes a security problem",
        "operationId" : "muteSecurityProblem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required security problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the muting information.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityProblemMute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The security problem has been muted."
          },
          "204" : {
            "description" : "Not executed. The security problem is already muted."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "securityProblems.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems" ]
      }
    },
    "/securityProblems/{id}/remediationItems/{remediationItemId}/muteState" : {
      "put" : {
        "tags" : [ "Security problems" ],
        "summary" : "Sets the mute state of a remediation item | maturity=EARLY_ADOPTER",
        "operationId" : "setRemediationItemMuteState",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required third-party security problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationItemId",
          "in" : "path",
          "description" : "The ID of the remediation item.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the mute state information to be applied.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemediationItemMuteStateChange"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The requested mute state has been applied to the remediation item."
          },
          "204" : {
            "description" : "Not executed. The remediation item was previously put into the requested mute state by the same user with the same reason and comment."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "securityProblems.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/securityProblems/{id}/unmute" : {
      "post" : {
        "tags" : [ "Security problems" ],
        "summary" : "Un-mutes a security problem",
        "operationId" : "unmuteSecurityProblem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required security problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the un-muting information.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityProblemUnmute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The security problem has been un-muted."
          },
          "204" : {
            "description" : "Not executed. The security problem is already un-muted."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "securityProblems.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-security-problems" ]
      }
    },
    "/credentials" : {
      "get" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Lists all sets of credentials for synthetic monitors stored in your environment.",
        "description" : "The credentials set itself (username/certificate and password) is not included in the response.",
        "operationId" : "listCredentials",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Filters the result by the specified credentials type.",
          "schema" : {
            "type" : "string",
            "enum" : [ "CERTIFICATE", "USERNAME_PASSWORD", "TOKEN" ]
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Filters the result by the name. When in quotation marks, whole phrase is taken. Case insensitive.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user",
          "in" : "query",
          "description" : "Filters credentials accessible to the user (owned by the user or the ones that are accessible for all).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "description" : "Filters credentials with specified scope.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of credentials in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CredentialsList"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "credentialVault.read" ]
      },
      "post" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Creates a new credentials set.",
        "description" : "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server.",
        "operationId" : "createCredentials",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new credentials set.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Credentials"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new credentials set has been created. The response contains the ID of the set.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CredentialsId"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "credentialVault.write" ]
      }
    },
    "/credentials/{id}" : {
      "get" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Gets the metadata of the specified credentials set.",
        "description" : "The credentials set itself (e.g. username/certificate and password) is not included in the response.",
        "operationId" : "getCredentials",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required credentials set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the metadata of the credentials set.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CredentialsResponseElement"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "credentialVault.read" ]
      },
      "put" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Updates the specified credentials set.",
        "description" : "The body must not provide an ID. The ID should be provided in the path.",
        "operationId" : "updateCredentials",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the credentials set to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the credentials set.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Credentials"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new credentials set has been created. The response contains the ID of the set.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CredentialsId"
                }
              }
            }
          },
          "204" : {
            "description" : "Success. The credentials set has been updated. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "credentialVault.write" ]
      },
      "delete" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Deletes the specified credentials set",
        "description" : "Provide credential ID in the path.",
        "operationId" : "removeCredentials",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the credentials set to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The credentials set has been deleted. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "500" : {
            "description" : "Failed. Could not delete the credential."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "credentialVault.write" ]
      }
    },
    "/credentials/{id}/details" : {
      "get" : {
        "tags" : [ "Credential vault" ],
        "summary" : "Gets the details of the specified credentials set.",
        "description" : "The credentials set including username/certificate, password or token is included in the response.",
        "operationId" : "getCredentialsDetails",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required credentials set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the details of the credentials set.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AbstractCredentialsResponseElement"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid. E.g. Requested credentials with unsupported scope. Only APP_ENGINE scope is supported.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "403" : {
            "description" : "Failed. Requested credentials belong to another user.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "credentialVault.read" ]
      }
    },
    "/extensions/{extensionName}/environmentConfiguration" : {
      "get" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Gets the active environment configuration version of the specified extension 2.0",
        "operationId" : "getActiveEnvironmentConfiguration",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionEnvironmentConfigurationVersion"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensionEnvironment.read", "extensions.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      },
      "put" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Updates the active environment configuration version of the extension 2.0",
        "operationId" : "updateExtensionEnvironmentConfiguration",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The version of the requested environment configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtensionEnvironmentConfigurationVersion"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success. Environment configuration updated.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionEnvironmentConfigurationVersion"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensionEnvironment.write", "extensions.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      },
      "post" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Activates the environment configuration from the specified version of the extension 2.0",
        "operationId" : "activateExtensionEnvironmentConfiguration",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The version of the requested environment configuration.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtensionEnvironmentConfigurationVersion"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success. Environment configuration created.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionEnvironmentConfigurationVersion"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensionEnvironment.write", "extensions.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      },
      "delete" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Deactivates the environment configuration of the specified extension 2.0",
        "operationId" : "deleteEnvironmentConfiguration",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Environment configuration deactivated.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionEnvironmentConfigurationVersion"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensionEnvironment.write", "extensions.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/extensions/{extensionName}/monitoringConfigurations" : {
      "get" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Lists all the monitoring configurations of the specified extension 2.0",
        "operationId" : "extensionMonitoringConfigurations",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "Filters the resulting set of configurations by extension 2.0 version.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "active",
          "in" : "query",
          "description" : "Filters the resulting set of configurations by the active state.",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionMonitoringConfigurationsList"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensionConfigurations.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      },
      "post" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Creates new monitoring configuration for the specified extension 2.0",
        "operationId" : "createMonitoringConfiguration",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing monitoring configuration parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MonitoringConfigurationDto"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MonitoringConfigurationResponse"
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Multi-Status, if not all requests resulted in the same status",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "anyOf" : [ {
                      "$ref" : "#/components/schemas/MonitoringConfigurationResponse"
                    }, {
                      "$ref" : "#/components/schemas/ErrorEnvelope"
                    } ]
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensionConfigurations.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/extensions/{extensionName}/{extensionVersion}/schema" : {
      "get" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Gets the configuration schema of the specified version of the extension 2.0",
        "operationId" : "extensionConfigurationSchema",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "extensionVersion",
          "in" : "path",
          "description" : "The version of the requested extension 2.0",
          "required" : true,
          "schema" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchemaDefinitionRestDto"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensionConfigurations.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/extensions/{extensionName}/{extensionVersion}" : {
      "get" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Gets details of the specified version of the extension 2.0",
        "operationId" : "extensionDetails",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "extensionVersion",
          "in" : "path",
          "description" : "The version of the requested extension 2.0",
          "required" : true,
          "schema" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string"
          }
        }, {
          "name" : "Accept",
          "in" : "header",
          "description" : "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extension"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extension"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensions.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      },
      "delete" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Deletes the specified version of the extension 2.0",
        "operationId" : "removeExtension",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "extensionVersion",
          "in" : "path",
          "description" : "The version of the requested extension 2.0",
          "required" : true,
          "schema" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The extension 2.0 version has been deleted.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extension"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensions.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/extensions/{extensionName}/environmentConfiguration/assets" : {
      "get" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Gets the information about assets in an active extension 2.0",
        "operationId" : "getEnvironmentConfigurationAssetsInfo",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionAssetsDto"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensionEnvironment.read", "extensions.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/extensions/{extensionName}/environmentConfiguration/events" : {
      "get" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "List of the latest extension environment configuration events",
        "operationId" : "getEnvironmentConfigurationEvents",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "content",
          "in" : "query",
          "description" : "Content of the event",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status of the event",
          "schema" : {
            "type" : "string",
            "enum" : [ "ERROR", "INFO", "NONE", "WARN" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of the latest extension environment configuration events",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionEventsList"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensionEnvironment.read", "extensions.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/extensions/{extensionName}/monitoringConfigurations/{configurationId}/events" : {
      "get" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Gets the list of the events linked to specific monitoring configuration",
        "operationId" : "getExtensionMonitoringConfigurationEvents",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configurationId",
          "in" : "path",
          "description" : "The ID of the requested monitoring configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dt.entity.host",
          "in" : "query",
          "description" : "Host that uses this monitoring configuration.\n\nExample: `HOST-ABCDEF0123456789`",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dt.active_gate.id",
          "in" : "query",
          "description" : "Hexadecimal ID of Active Gate that uses this monitoring configuration.\n\nExample: `0x1a2b3c4d`",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dt.extension.ds",
          "in" : "query",
          "description" : "Data source that uses this monitoring configuration.\n\nExample: `snmp`",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "content",
          "in" : "query",
          "description" : "Content of the event",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status of the event",
          "schema" : {
            "type" : "string",
            "enum" : [ "ERROR", "INFO", "NONE", "WARN" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionEventsList"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensionConfigurations.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/extensions/{extensionName}/monitoringConfigurations/{configurationId}/status" : {
      "get" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Gets the most recent status of the execution of given monitoring configuration",
        "operationId" : "getExtensionMonitoringConfigurationStatus",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configurationId",
          "in" : "path",
          "description" : "The ID of the requested monitoring configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionStatusDto"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensionConfigurations.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/extensions/schemas/{schemaVersion}/{fileName}" : {
      "get" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Gets the extension 2.0 schema file in the specified version",
        "operationId" : "getSchemaFile",
        "parameters" : [ {
          "name" : "schemaVersion",
          "in" : "path",
          "description" : "The version of the schema.",
          "required" : true,
          "schema" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string"
          }
        }, {
          "name" : "fileName",
          "in" : "path",
          "description" : "The name of the schema file.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonNode"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensions.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/extensions/{extensionName}" : {
      "get" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Lists all versions of the extension 2.0",
        "operationId" : "listExtensionVersions",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionList"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensions.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/extensions" : {
      "get" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Lists all the extensions 2.0 available in your environment",
        "operationId" : "listExtensions",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Filters the resulting set of extensions 2.0 by name. You can specify a partial name. In that case, the CONTAINS operator is used.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensions.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      },
      "post" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Uploads or verifies a new extension 2.0",
        "operationId" : "uploadExtension",
        "parameters" : [ {
          "name" : "validateOnly",
          "in" : "query",
          "description" : "Only run validation but do not persist the extension even if validation was successful.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "Extension 2.0 zip file to upload.",
          "content" : {
            "application/octet-stream" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "string",
                "format" : "binary",
                "deprecated" : true
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The extension is valid",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionUploadResponseDto"
                }
              }
            }
          },
          "201" : {
            "description" : "Success. The extension 2.0 has been uploaded.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionUploadResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input file is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "409" : {
            "description" : "Upload not possible yet, please try again in a few seconds.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensions.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/extensions/schemas/{schemaVersion}" : {
      "get" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Lists all the files available for the specified extension 2.0 schema version",
        "operationId" : "listSchemaFiles",
        "parameters" : [ {
          "name" : "schemaVersion",
          "in" : "path",
          "description" : "The version of the schema.",
          "required" : true,
          "schema" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string"
          }
        }, {
          "name" : "Accept",
          "in" : "header",
          "description" : "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchemaFiles"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchemaFiles"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "406" : {
            "description" : "Not acceptable",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensions.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/extensions/schemas" : {
      "get" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Lists all the extension 2.0 schemas versions available in your environment",
        "operationId" : "listSchemas",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchemasList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensions.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/extensions/{extensionName}/monitoringConfigurations/{configurationId}" : {
      "get" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Gets the details of the specified monitoring configuration",
        "operationId" : "monitoringConfigurationDetails",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configurationId",
          "in" : "path",
          "description" : "The ID of the requested monitoring configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionMonitoringConfiguration"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensionConfigurations.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      },
      "put" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Updates the specified monitoring configuration",
        "operationId" : "updateMonitoringConfiguration",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configurationId",
          "in" : "path",
          "description" : "The ID of the requested monitoring configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "JSON body of the request, containing monitoring configuration parameters.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MonitoringConfigurationUpdateDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonitoringConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensionConfigurations.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      },
      "delete" : {
        "tags" : [ "Extensions 2.0" ],
        "summary" : "Deletes the specified monitoring configuration",
        "operationId" : "removeMonitoringConfiguration",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the requested extension 2.0.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configurationId",
          "in" : "path",
          "description" : "The ID of the requested monitoring configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Response doesn't have a body."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "extensionConfigurations.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ]
      }
    },
    "/problems/{problemId}/close" : {
      "post" : {
        "tags" : [ "Problems" ],
        "summary" : "Closes the specified problem and adds a closing comment on it",
        "operationId" : "closeProblem",
        "parameters" : [ {
          "name" : "problemId",
          "in" : "path",
          "description" : "The ID of the required problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the closing comment on the problem.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProblemCloseRequestDtoImpl"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemCloseResult"
                }
              }
            }
          },
          "204" : {
            "description" : "The problem is closed already the request hasn't been executed."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "problems.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/problems/{problemId}/comments" : {
      "get" : {
        "tags" : [ "Problems" ],
        "summary" : "Gets all comments on the specified problem",
        "operationId" : "getComments",
        "parameters" : [ {
          "name" : "problemId",
          "in" : "path",
          "description" : "The ID of the required problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of comments in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 10 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentsList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "problems.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      },
      "post" : {
        "tags" : [ "Problems" ],
        "summary" : "Adds a new comment on the specified problem",
        "operationId" : "createComment",
        "parameters" : [ {
          "name" : "problemId",
          "in" : "path",
          "description" : "The ID of the required problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the comment to be added.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CommentRequestDtoImpl"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The comment has been added."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "problems.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/problems/{problemId}/comments/{commentId}" : {
      "get" : {
        "tags" : [ "Problems" ],
        "summary" : "Gets the specified comment on a problem",
        "operationId" : "getComment",
        "parameters" : [ {
          "name" : "problemId",
          "in" : "path",
          "description" : "The ID of the required problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commentId",
          "in" : "path",
          "description" : "The ID of the required comment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "problems.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      },
      "put" : {
        "tags" : [ "Problems" ],
        "summary" : "Updates the specified comment on a problem",
        "operationId" : "updateComment",
        "parameters" : [ {
          "name" : "problemId",
          "in" : "path",
          "description" : "The ID of the required problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commentId",
          "in" : "path",
          "description" : "The ID of the required comment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the updated comment.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CommentRequestDtoImpl"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The comment has been updated."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "problems.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      },
      "delete" : {
        "tags" : [ "Problems" ],
        "summary" : "Deletes the specified comment from a problem",
        "operationId" : "deleteComment",
        "parameters" : [ {
          "name" : "problemId",
          "in" : "path",
          "description" : "The ID of the required problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commentId",
          "in" : "path",
          "description" : "The ID of the required comment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The comment has been deleted."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "problems.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/problems/{problemId}" : {
      "get" : {
        "tags" : [ "Problems" ],
        "summary" : "Gets the properties of the specified problem",
        "operationId" : "getProblem",
        "parameters" : [ {
          "name" : "problemId",
          "in" : "path",
          "description" : "The ID of the required problem.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`).",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "problems.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/problems" : {
      "get" : {
        "tags" : [ "Problems" ],
        "summary" : "Lists problems observed within the specified timeframe",
        "operationId" : "getProblems",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`).\n\n The field is valid only for the current page of results. You must set it for each page you're requesting.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "problemSelector",
          "in" : "query",
          "description" : "Defines the scope of the query. Only problems matching the specified criteria are included into response. \n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies. All values must be quoted. \n* Status: `status(\"open\")` or `status(\"closed\")`. You can specify only one status. \n* Severity level: `severityLevel(\"level-1\",\"level-2\")`. Find the possible values in the description of the **severityLevel** field of the response.\n* Impact level: `impactLevel(\"level-11\",\"level-2\")` Find the possible values in the description of the **impactLevel** field of the response.\n* Root cause entity: `rootCauseEntity(\"id-1\", \"id-2\")`. \n* Management zone ID: `managementZoneIds(\"mZId-1\", \"mzId-2\")`. \n* Management zone name: `managementZones(\"value-1\",\"value-2\")`. \n* Impacted entities: `impactedEntities(\"id-1\", \"id-2\")`. \n* Affected entities: `affectedEntities(\"id-1\", \"id-2\")`. \n* Type of affected entities: `affectedEntityTypes(\"value-1\",\"value-2\")`. \n* Problem ID: `problemId(\"id-1\", \"id-2\")`. \n* Alerting profile ID: `problemFilterIds(\"id-1\", \"id-2\")`. \n* Alerting profile name (contains, case-insensitive): `problemFilterNames(\"value-1\",\"value-2\")`. \n* Alerting profile name (exact match, case-insensitive): `problemFilterNames.equals(\"value-1\",\"value-2\")`. \n* Entity tags: `entityTags(\"[context]key:value\",\"key:value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value tag`. All tag values are case-sensitive.\n* Display ID of the problem: `displayId(\"id-1\", \"id-2\")`. \n* Under maintenance: `underMaintenance(true|false)`. Shows (true) or hides (false) all problems created during maintenance mode.\n* Text search: `text(\"value\")`. Text search on the following fields: problem title, event titles, displayId and the id of affected and impacted entities. The text search is case insensitive, partial matching and based on a relevance score. Therefore the `relevance` sort option should be used to get the most relevant problems first. The special characters `~` and `\"` need to be escaped using a `~` (e.g. double quote search `text(\"~\"\")`). The search value is limited to 30 characters.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response. \n\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entitySelector",
          "in" : "query",
          "description" : "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\nThe maximum number of entities that may be selected is limited to 10000.\n\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Specifies a set of comma-separated (`,`) fields for sorting in the problem list.\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n * `status`: problem status (`+` open problems first or `-` closed problems first)\n * `startTime`: problem start time (`+` old problems first or `-` new problems first) \n * `relevance`: problem relevance (`+` least relevant problems first or `-` most relevant problems first) - can be used only in combination with text search \n\nIf no prefix is set, `+` is used. \n\nYou can specify several levels of sorting. For example, `+status,-startTime` sorts problems by status, open problems first. Within the status, problems are sorted by start time, oldest first.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problems"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "problems.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/hub/assets/images/{encodedUrl}" : {
      "get" : {
        "tags" : [ "Hub items" ],
        "summary" : "Retrieves the image associated with the given url.\nCan only obtain images used in hub items.",
        "operationId" : "getImage",
        "parameters" : [ {
          "name" : "encodedUrl",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "hub.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/hub/categories" : {
      "get" : {
        "tags" : [ "Hub items" ],
        "summary" : "Lists all the available category groupings of items",
        "operationId" : "listCategories",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryList"
                }
              }
            }
          },
          "503" : {
            "description" : "Unavailable",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "hub.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/hub/extensions2/{extensionName}/actions/addToEnvironment" : {
      "post" : {
        "tags" : [ "Hub items" ],
        "summary" : "Registers the given extension version in the environment (using the recommended version if no other release is registered)",
        "operationId" : "addToEnvironment",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "Fully qualified name of the extension",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "extensionVersion",
          "in" : "query",
          "description" : "Version of the extension. Fallback to the evaluated recommended version when the version is not provided",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegisteredExtensionResultDto"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "503" : {
            "description" : "Unavailable",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "hub.install" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/hub/extensions2/{extensionName}" : {
      "get" : {
        "tags" : [ "Hub items" ],
        "summary" : "The details of the given extension",
        "operationId" : "getExtensionDetails",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "Fully qualified name of the extension",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ItemDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "503" : {
            "description" : "Unavailable",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "hub.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/hub/extensions2/{extensionName}/actions/update" : {
      "post" : {
        "tags" : [ "Hub items" ],
        "summary" : "Updates the given extension to the latest compatible published version",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "Fully qualified name of the extension",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "extensionVersion",
          "in" : "query",
          "description" : "Version of the extension. Fallback to the evaluated recommended version when the version is not provided",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegisteredExtensionResultDto"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "503" : {
            "description" : "Unavailable",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "hub.install" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/hub/extensions2/{extensionName}/releases/{version}/releaseNotes" : {
      "put" : {
        "tags" : [ "Hub items" ],
        "summary" : "Sets or updates the release notes of the specified extension release",
        "operationId" : "updateReleaseNotes",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "Fully qualified name of the extension",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the extension release",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the markdown for release notes",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtensionReleaseNotes"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Extension release notes updated"
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "503" : {
            "description" : "Unavailable",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "hub.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/hub/extensions2/{extensionName}/metadata" : {
      "put" : {
        "tags" : [ "Hub items" ],
        "summary" : "Create/Replace metadata for an extension that does not have Dynatrace distributed metadata.",
        "operationId" : "uploadMetadataForExtension",
        "parameters" : [ {
          "name" : "extensionName",
          "in" : "path",
          "description" : "Fully qualified name of the extension",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "logo" : {
                    "type" : "string",
                    "description" : "Logo of the extension",
                    "format" : "binary"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "If left empty or blank, the extension name will be used as name"
                  },
                  "description" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Extension metadata uploaded"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "hub.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/hub/extensions1/{extension1FQN}/releases/{version}" : {
      "get" : {
        "tags" : [ "Hub items" ],
        "summary" : "Artifact of the given version of an item",
        "operationId" : "getArtifact",
        "parameters" : [ {
          "name" : "extension1FQN",
          "in" : "path",
          "description" : "Fully qualified name of the extension1/plugin",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the release of the extension1/plugin",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok - download file",
            "content" : {
              "application/zip" : { }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/zip" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "503" : {
            "description" : "Unavailable",
            "content" : {
              "application/zip" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "hub.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/hub/extensions1/{extension1FQN}" : {
      "get" : {
        "tags" : [ "Hub items" ],
        "summary" : "The details of the given extension version 1",
        "operationId" : "getDetails",
        "parameters" : [ {
          "name" : "extension1FQN",
          "in" : "path",
          "description" : "Fully qualified name of the extension1/plugin",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ItemDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "503" : {
            "description" : "Unavailable",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "hub.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/hub/technologies/{slug}" : {
      "get" : {
        "tags" : [ "Hub items" ],
        "summary" : "The details of the given technology",
        "operationId" : "getTechnologyDetails",
        "parameters" : [ {
          "name" : "slug",
          "in" : "path",
          "description" : "Slug of the technology to be fetched",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ItemDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "503" : {
            "description" : "Unavailable",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "hub.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/hub/items" : {
      "get" : {
        "tags" : [ "Hub items" ],
        "summary" : "Lists all the available items in your environment",
        "operationId" : "listItems",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of hub items in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "itemType",
          "in" : "query",
          "description" : "If provided, will filter out results based on the given item type.",
          "schema" : {
            "type" : "string",
            "enum" : [ "EXTENSION1", "EXTENSION2", "TECHNOLOGY" ]
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Filter the results for items matching the query string within id, name, author, description or any tag.\n- Case insensitive\n- Spaces in the query string will lead to an intersection of the results of each term",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "installed",
          "in" : "query",
          "description" : "If provided, will restrict the result to Extensions 2.0 that have the respective installed state.\n- Only applies if itemType filter is not set or EXTENSION2",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "categoryId",
          "in" : "query",
          "description" : "If provided, will filter items that belong to the given category.\n- This overrides the itemType or installed filters\n- For a list of category ids refer to /categories\n- Will return the items in the order of the category",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "If provided, will skip the desired number of results, allowing for pagination in combination with page size",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ItemList"
                }
              }
            }
          },
          "503" : {
            "description" : "Unavailable",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "hub.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ]
      }
    },
    "/jsMappingFiles/{minifiedJsFileUrl}/{fileType}" : {
      "put" : {
        "tags" : [ "JavaScript mapping files" ],
        "summary" : "Uploads new or updates existing JavaScript mapping file | maturity=EARLY_ADOPTER",
        "operationId" : "uploadJavaScriptMappingFile",
        "parameters" : [ {
          "name" : "minifiedJsFileUrl",
          "in" : "path",
          "description" : "The URL of the minified JavaScript file.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileType",
          "in" : "path",
          "description" : "The type of the JavaScript mapping file.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "MINIFIED", "SOURCE", "SOURCEMAP" ]
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "JavaScript mapping file to upload.",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The file has been uploaded and stored. Existing file replaced."
          },
          "201" : {
            "description" : "Success. The file has been uploaded and stored."
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "413" : {
            "description" : "Failed. The symbol file storage quota is exhausted.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "javaScriptMappingFiles.write" ],
        "x-supports-personal-access-token" : true
      },
      "delete" : {
        "tags" : [ "JavaScript mapping files" ],
        "summary" : "Deletes the specified JavaScript mapping file | maturity=EARLY_ADOPTER",
        "operationId" : "deleteJavaScriptMappingFile",
        "parameters" : [ {
          "name" : "minifiedJsFileUrl",
          "in" : "path",
          "description" : "The URL of the minified JavaScript file.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileType",
          "in" : "path",
          "description" : "The type of the JavaScript mapping file.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "MINIFIED", "SOURCE", "SOURCEMAP" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. File deleted."
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "javaScriptMappingFiles.write" ],
        "x-supports-personal-access-token" : true
      }
    },
    "/jsMappingFiles" : {
      "get" : {
        "tags" : [ "JavaScript mapping files" ],
        "summary" : "Lists metadata of JavaScript mapping files | maturity=EARLY_ADOPTER",
        "operationId" : "getJavaScriptMappingFilesMetadata",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of JavaScript mapping files in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "minifiedJsFileUrl",
          "in" : "query",
          "description" : "Filters the resulting set of JavaScript mapping files by the minified JavaScript file URL. Only equals are taken into account.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileType",
          "in" : "query",
          "description" : "Filters the resulting set of JavaScript mapping files by file type.",
          "schema" : {
            "type" : "string",
            "enum" : [ "MINIFIED", "SOURCE", "SOURCEMAP" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JavaScriptMappingFileListDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "javaScriptMappingFiles.read" ],
        "x-supports-personal-access-token" : true
      }
    },
    "/jsMappingFiles/{minifiedJsFileUrl}/{fileType}/metadata" : {
      "put" : {
        "tags" : [ "JavaScript mapping files" ],
        "summary" : "Updates metadata of the specified JavaScript mapping file | maturity=EARLY_ADOPTER",
        "operationId" : "updateJavaScriptMappingFileMetadata",
        "parameters" : [ {
          "name" : "minifiedJsFileUrl",
          "in" : "path",
          "description" : "The URL of the minified JavaScript file.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileType",
          "in" : "path",
          "description" : "The type of the JavaScript mapping file.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "MINIFIED", "SOURCE", "SOURCEMAP" ]
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated metadata of the file.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JavaScriptMappingFileMetadataDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. Metadata updated.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JavaScriptMappingFileDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "javaScriptMappingFiles.write" ],
        "x-supports-personal-access-token" : true
      }
    },
    "/logs/export" : {
      "get" : {
        "tags" : [ "Logs" ],
        "summary" : "Exports log records | maturity=EARLY_ADOPTER",
        "description" : "Returns the first *X* records (specified in the **pageSize** query parameter).\n\n Unlike the **search** API, this API does not split the result into slices and has no limit for the total number of records. Log records are sorted by the criteria specified in the **sort** query parameter.\n\n In order to fetch large amount of records (exceeding the **pageSize** value), one should repeat the **export** call with **nextPageKey** param.\n\nDisabled on *Log Management and Analytics, powered by Grail*.",
        "operationId" : "exportLogRecords",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of results per result page.",
          "schema" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "default" : 1000
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f).",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Defines the ordering of the log records.\n\nEach field has a sign prefix (+/-) for sorting order. If no sign prefix is set, then the `+` option will be applied. \n\nCurrently, ordering is available only for the timestamp (+timestamp for the oldest records first, or -timestamp for the newest records first). \n\nWhen millisecond resolution provided by the timestamp is not enough, log records are sorted based on the order in which they appear in the log source (remote process writing to REST API endpoint or remote process from which logs are collected).",
          "schema" : {
            "pattern" : "^[+-]?[a-z]+$",
            "type" : "string",
            "default" : "-timestamp"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportedLogRecordList"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "501" : {
            "description" : "Failed. The server either does not recognize the request method, or it lacks the ability to fulfill the request. May happen when Grail log storage is enabled.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "logs.read" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/logs/aggregate" : {
      "get" : {
        "tags" : [ "Logs" ],
        "summary" : "Gets aggregated log records | maturity=EARLY_ADOPTER",
        "description" : "Returns the aggregated number of occurrences of log values divided into time slots. \n\nIt is possible that the timeframe covered by results exceeds the specified timeframe. In that case the request returns fewer time slots than specified in the **timeBuckets** query parameter.\n\nIf *Log Management and Analytics, powered by Grail* is enabled, then an OAuth token is required with *storage:logs:read* and *storage:buckets:read* scopes.",
        "operationId" : "getLogHistogramData",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f).",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "timeBuckets",
          "in" : "query",
          "description" : "The number of time slots in the result. \n\nThe query timeframe is divided equally into the specified number of slots. \n\nThe minimum length of a slot is 1 ms. \n\nIf not set, 1 is used.",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "maxGroupValues",
          "in" : "query",
          "description" : "The maximum number of values in each group. \n\nYou can get up to 100 values per group. \n\nIf not set, 10 is used.",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "groupBy",
          "in" : "query",
          "description" : "The groupings to be included in the response. \n\nYou can specify several groups in the following format: `groupBy=status&groupBy=log.source`. \n\nIf not set, all possible groups are returned. You can use this option to check for possible grouping values. \n\nUnique log data attributes (high-cardinality attributes) for example, `span_id` or `trace_id` cannot be used for grouping.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AggregatedLog"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "logs.read" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/logs/search" : {
      "get" : {
        "tags" : [ "Logs" ],
        "summary" : "Reads log records | maturity=EARLY_ADOPTER",
        "description" : "Returns the first *X* records (specified in the **limit** query parameter). Log records are sorted by the criteria specified in the **sort** query parameter. \n\nIf the query is too large to be processed in a single request, it is divided into slices. In that case the first response contains the **nextSliceKey** cursor for the second slice. Use it in the **nextSliceKey** query parameter to obtain the second slice, which contains **nextSliceKey** cursor for the third slice, and so on. \n\nResults can be distributed unevenly between slices and some slices might be empty.\n\nIf *Log Management and Analytics, powered by Grail* is enabled, then an OAuth token is required with *storage:logs:read* and *storage:buckets:read* scopes.",
        "operationId" : "getLogRecords",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The desired amount of log records. \n\nThe maximal allowed limit is 1000. \n\nIf not set, 1000 is used.",
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1000
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f).",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Defines the ordering of the log records.\n\nEach field has a sign prefix (+/-) for sorting order. If no sign prefix is set, then the `+` option will be applied. \n\nCurrently, ordering is available only for the timestamp (+timestamp for the oldest records first, or -timestamp for the newest records first). \n\nWhen millisecond resolution provided by the timestamp is not enough, log records are sorted based on the order in which they appear in the log source (remote process writing to REST API endpoint or remote process from which logs are collected).",
          "schema" : {
            "pattern" : "^[+-]?[a-z]+$",
            "type" : "string",
            "default" : "-timestamp"
          }
        }, {
          "name" : "nextSliceKey",
          "in" : "query",
          "description" : "The cursor for the next slice of results. You can find it in the **nextSliceKey** field of the previous response. \n\nThe first slice is always returned if you don't specify this parameter. \n\nIf this parameter is set, all other query parameters are ignored.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogRecordsList"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "logs.read" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/monitoringstate" : {
      "get" : {
        "tags" : [ "Monitored entities - Monitoring state" ],
        "summary" : "Lists monitoring states of entities",
        "description" : "Only process group instances are supported.",
        "operationId" : "getStates",
        "parameters" : [ {
          "name" : "entitySelector",
          "in" : "query",
          "description" : "Specifies the process group instances where you're querying the state. Use the `PROCESS_GROUP_INSTANCE` entity type. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`). Otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an argument and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. This criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in the response. \n\nThe maximum string length is 2,000 characters. \n\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonitoredStates"
                }
              }
            }
          },
          "503" : {
            "description" : "Unavailable",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "entities.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/releases" : {
      "get" : {
        "tags" : [ "Releases" ],
        "summary" : "Returns all releases",
        "operationId" : "getReleases",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of Releases in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "demo",
          "in" : "query",
          "description" : "Get your Releases (`false`) or a set of demo Releases (`true`).",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "releasesSelector",
          "in" : "query",
          "description" : "Defines the scope of the query. Only Releases matching the provided criteria are included in the response.\n\nYou can add one or several of the criteria listed below.\n* Management zone: type(PROCESS_GROUP_INSTANCE),mzName(\"ManagementZone-A\"). Filters for all releases in the given management zone. The filter is case-sensitive.\n* Monitoring state: monitoringState(\"Active\") or monitoringState(\"Inactive\"). You can specify only one monitoring state. \n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"). You can specify only one health state.\n* Security vulnerability: affectedBySecurityProblem(\"Detected\") or affectedBySecurityProblem(\"Not detected\"). You can specify only one security vulnerability state.\n* Name: entityName(\"name\"). Filters for all releases that contain the given value in their name. The filter is case-insensitive.\n* Entity ID: entityId(\"id\").\n* Product: releasesProduct(\"product\"). Filters for all releases that contain the given value in their product. The filter is case-insensitive.\n* Stage: releasesStage(\"stage\"). Filters for all releases that contain the given value in their stage. The filter is case-insensitive.\n* Version: releasesVersion(\"version\"). Filters for all releases that contain the given value in their version. The filter is case-insensitive.\n\nTo set several criteria, separate them with comma (,). Only results matching all criteria are included in the response.\ne.g., .../api/v2/releases?releasesSelector=name(\"Server\"),monitoringState(\"Active\"),healthState(\"HEALTHY\"),releasesVersion(\"1.0.7\").\n\nThe special characters ~ and \" need to be escaped using a ~ (e.g. double quote search entityName(\"~\"\").",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Specifies the field that is used for sorting the releases list.\nThe field has a sign prefix (+/-) which corresponds to the sorting order ('+' for ascending and '-' for descending). If no sign prefix is set, then the default ascending sorting order will be applied. You can sort by the following properties:\n* 'product': Product name\n* 'name': Release name\n* 'stage': Stage name\n* 'version': Version\n* 'instances': Instances\n* 'traffic': Traffic\n\nIf not set, the ascending order sorting for name is applied.",
          "schema" : {
            "type" : "string",
            "default" : "name"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Releases"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "releases.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/rum/cities/{countryCode}/{regionCode}" : {
      "get" : {
        "tags" : [ "Geographic regions" ],
        "summary" : "Lists all cities of a country's region",
        "operationId" : "getCities",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "path",
          "description" : "The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionCode",
          "in" : "path",
          "description" : "The code of the required region. \n\n To fetch the list of available region codes, use the [GET regions of the country](https://dt-url.net/az230x0) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the list of region's cities.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryWithRegionsWithCities"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "geographicRegions.read" ],
        "x-supports-personal-access-token" : true
      }
    },
    "/rum/countries" : {
      "get" : {
        "tags" : [ "Geographic regions" ],
        "summary" : "Lists all countries",
        "operationId" : "getCountries",
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the list of countries.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "geographicRegions.read" ],
        "x-supports-personal-access-token" : true
      }
    },
    "/rum/regions" : {
      "get" : {
        "tags" : [ "Geographic regions" ],
        "summary" : "Lists all countries along with their regions",
        "operationId" : "getRegions",
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the list of countries with regional divisions.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryListWithRegions"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "geographicRegions.read" ],
        "x-supports-personal-access-token" : true
      }
    },
    "/rum/cities/{countryCode}" : {
      "get" : {
        "tags" : [ "Geographic regions" ],
        "summary" : "Lists all cities of a country",
        "operationId" : "getRegionsAndCities",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "path",
          "description" : "The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the list of country's cities.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryWithRegionsWithCities"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "geographicRegions.read" ],
        "x-supports-personal-access-token" : true
      }
    },
    "/rum/regions/{countryCode}" : {
      "get" : {
        "tags" : [ "Geographic regions" ],
        "summary" : "Lists all regions of a country",
        "operationId" : "getRegionsOfCountry",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "path",
          "description" : "The ISO code of the required country. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the list of country's regions.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryWithRegions"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "geographicRegions.read" ],
        "x-supports-personal-access-token" : true
      }
    },
    "/settings/objects/{objectId}" : {
      "get" : {
        "tags" : [ "Settings - Objects" ],
        "summary" : "Gets the specified settings object",
        "operationId" : "getSettingsObjectByObjectId",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The ID of the required settings object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObject"
                }
              }
            }
          },
          "403" : {
            "description" : "Failed. Forbidden.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "No object available for the given objectId",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "settings.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings", "settings:objects:read" ],
        "x-allow-access-with-management-zone-permissions" : true
      },
      "put" : {
        "tags" : [ "Settings - Objects" ],
        "summary" : "Updates an existing settings object",
        "description" : "To update a property of the `secret` type you need to pass the new value unmasked. To keep the current value, send the current masked secret. You can obtain it via [GET an object](https://dt-url.net/kj036oj) endpoint. \n\nSome schemas don't allow passing of the masked secret. In that case you need to send the unmasked secret with every update of the object.",
        "operationId" : "putSettingsObjectByObjectId",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The ID of the required settings object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the settings object.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SettingsObjectUpdate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObjectResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Failed. Forbidden.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObjectResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Failed. Conflicting resource.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObjectResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. Schema validation failed.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObjectResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "settings.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings", "settings:objects:write" ],
        "x-allow-access-with-management-zone-permissions" : true
      },
      "delete" : {
        "tags" : [ "Settings - Objects" ],
        "summary" : "Deletes the specified settings object",
        "operationId" : "deleteSettingsObjectByObjectId",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The ID of the required settings object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "updateToken",
          "in" : "query",
          "description" : "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Response doesn't have a body."
          },
          "403" : {
            "description" : "Failed. Forbidden.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObjectResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Failed. Conflicting resource.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObjectResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. Schema validation failed.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObjectResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "settings.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings", "settings:objects:write" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/settings/effectiveValues" : {
      "get" : {
        "tags" : [ "Settings - Objects" ],
        "summary" : "Lists effective settings values",
        "description" : "Lists effective settings values for selected schemas at a selected scope (or entity). This operation evaluates the hierarchy of persisted objects (see [/settings/objects](#/Settings%20-%20Objects/getSettingsObjects))\n\nIt will always return a result for a schema/scope combination, even if the schema would not be relevant to the given scope/entity.\n\nIf no object along the hierarchy is persisted, the default value as defined in the schema will be returned.",
        "operationId" : "getEffectiveSettingsValues",
        "parameters" : [ {
          "name" : "schemaIds",
          "in" : "query",
          "description" : "A list of comma-separated schema IDs to which the requested objects belong. \n\nOnly considered on load of the first page, when the **nextPageKey** is not set.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "description" : "The scope that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scope. For example, `environment` will not match objects that target a host within environment. For more details, please see [Dynatrace Documentation](https://dt-url.net/ky03459). \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `origin,value`).\n\nSupported fields: `summary`, `searchSummary`, `created`, `modified`, `createdBy`, `modifiedBy`, `author`, `origin`, `schemaId`, `schemaVersion`, `value`, `externalId`.",
          "schema" : {
            "type" : "string",
            "default" : "origin,value"
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EffectiveSettingsValuesList"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The specified schema or scope is not found.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "settings.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings", "settings:objects:read" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/settings/objects" : {
      "get" : {
        "tags" : [ "Settings - Objects" ],
        "summary" : "Lists persisted settings objects",
        "description" : "Lists persisted settings objects for selected schemas at selected scopes (or entities).\n\nIf nothing is persisted or if all persisted settings objects are not accessible due to missing permissions, no items will be returned.\n\nTo query the effective values (including schema defaults) please see [/settings/effectiveValues](#/Settings%20-%20Objects/getEffectiveSettingsValues).",
        "operationId" : "getSettingsObjects",
        "parameters" : [ {
          "name" : "schemaIds",
          "in" : "query",
          "description" : "A list of comma-separated schema IDs to which the requested objects belong. \n\nTo load the first page, when the **nextPageKey** is not set, either this parameter or **scopes** is required. \n\nTo load all objects belonging to the given schema IDs leave the **scopes** parameter empty.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scopes",
          "in" : "query",
          "description" : "A list of comma-separated scopes, that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scopes. For example, `environment` will not match objects that target a host within environment. For more details, please see [Dynatrace Documentation](https://dt-url.net/ky03459). \n\nTo load the first page, when the **nextPageKey** is not set, either this parameter or **schemaIds** is required. \n\nTo load all objects belonging to the given scopes leave the **schemaIds** parameter empty.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalIds",
          "in" : "query",
          "description" : "A list of comma-separated external IDs that the requested objects have. \n\nEach external ID has a maximum length of 500 characters.\n\nOnly considered on load of the first page, when the **nextPageKey** is not set.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `objectId,value`).\n\nSupported fields: `objectId`, `summary`, `searchSummary`, `created`, `modified`, `createdBy`, `modifiedBy`, `author`, `updateToken`, `scope`, `modificationInfo`, `schemaId`, `schemaVersion`, `value`, `externalId`.",
          "schema" : {
            "type" : "string",
            "default" : "objectId,value"
          }
        }, {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Accessible objects returned.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectsList"
                }
              }
            }
          },
          "403" : {
            "description" : "Failed. Forbidden.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The specified schema or scope is not found.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "settings.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings", "settings:objects:read" ],
        "x-allow-access-with-management-zone-permissions" : true
      },
      "post" : {
        "tags" : [ "Settings - Objects" ],
        "summary" : "Creates a new settings object",
        "description" : "You can upload several objects at once. In that case each object returns its own response code. Check the response body for details.",
        "operationId" : "postSettingsObjects",
        "parameters" : [ {
          "name" : "validateOnly",
          "in" : "query",
          "description" : "If `true`, the request runs only validation of the submitted settings objects, without saving them.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the settings objects.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/SettingsObjectCreate"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SettingsObjectResponse"
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Multi-status: different objects in the payload resulted in different statuses.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SettingsObjectResponse"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Failed. Forbidden.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SettingsObjectResponse"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Failed. Conflicting resource.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SettingsObjectResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. Schema validation failed.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SettingsObjectResponse"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "settings.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings", "settings:objects:write" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/settings/schemas" : {
      "get" : {
        "tags" : [ "Settings - Schemas" ],
        "summary" : "Lists available settings schemas",
        "operationId" : "getAvailableSchemaDefinitions",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchemaList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "settings.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings", "settings:schemas:read" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/settings/schemas/{schemaId}" : {
      "get" : {
        "tags" : [ "Settings - Schemas" ],
        "summary" : "Gets parameters of the specified settings schema",
        "operationId" : "getSchemaDefinition",
        "parameters" : [ {
          "name" : "schemaId",
          "in" : "path",
          "description" : "The ID of the required schema.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaVersion",
          "in" : "query",
          "description" : "The version of the required schema. \n\n If not set, the most recent version is returned.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchemaDefinitionRestDto"
                }
              }
            }
          },
          "403" : {
            "description" : "Failed. Forbidden.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The specified schema doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "settings.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings", "settings:schemas:read" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/slo/{id}/alert" : {
      "post" : {
        "tags" : [ "Service-level objectives" ],
        "summary" : "Creates an alert of the provided alert type for an SLO",
        "operationId" : "createAlert",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeFrame",
          "in" : "query",
          "description" : "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used.",
          "schema" : {
            "type" : "string",
            "enum" : [ "CURRENT", "GTF" ],
            "default" : "CURRENT"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required SLO.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the parameters of the new SLO alert.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AbstractSloAlertDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new alert has been created. The response contains the parameters of the new alert. The **location** response header contains the ID of the new alert.",
            "headers" : {
              "location" : {
                "description" : "The location of the new resource created by this request.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "412" : {
            "description" : "Precondition for creating an SLO alert not fulfilled. The SLO func metric cannot be created or is not created by the SLO.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "slo.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/slo" : {
      "get" : {
        "tags" : [ "Service-level objectives" ],
        "summary" : "Lists all available SLOs along with calculated values",
        "description" : "By default the values are calculated for the SLO's own timeframe. You can use a custom timeframe: \n\n1. Set the **timeFrame** parameter to `GTF`. \n2. Provide the timeframe in **from** and **to** parameters.",
        "operationId" : "getSlo",
        "parameters" : [ {
          "name" : "nextPageKey",
          "in" : "query",
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The amount of SLOs in a single response payload. \n\nThe maximal allowed page size is 10000. \n\nIf not set, 10 is used.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sloSelector",
          "in" : "query",
          "description" : "The scope of the query. Only SLOs matching the provided criteria are included in the response. \n\nYou can add one or several of the criteria listed below.\n* SLO ID: `id(\"id-1\",\"id-2\")`.\n* Name: `name(\"name\")`. Filters for an SLO with the given name. The filter is case-sensitive.\n* Health state: `healthState(\"HEALTHY\")` or `healthState(\"UNHEALTHY\")`. Filters for SLOs that have no related open problems (`HEALTHY`) or SLOs that have related open problems (`UNHEALTHY`). You can specify only one health state.\n* Text: `text(\"value\")`. Filters for all SLOs that contain the given value in their name or description. The filter is case-insensitive.\n* Problem: `problemDisplayName(\"value\")`. Filters for all SLOs that are related to a given problem display name (e.g. P-12345).\n* Management zone name: `managementZone(\"MZ-A\")`. Filters for all SLOs that are related to the given management zone name.\n* Management zone ID: `managementZoneID(\"123\")`. Filters for all SLOs that are related to the given management zone ID.\n\nTo set several criteria, separate them with comma (`,`). Only SLOs matching all criteria are included in the response. Examples:\n* .../api/v2/slo?sloSelector=name(\"Service Availability\")\n* .../api/v2/slo?sloSelector=id(\"id\")\n* .../api/v2/slo?sloSelector=text(\"Description\"),healthState(\"HEALTHY\").\n\nThe special characters `~` and `\"` need to be escaped using a `~` (e.g. double quote search `text(\"~\"\")`).",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "The sorting of SLO entries: \n* `name`: Names in ascending order. \n* `-name`: Names in descending order. \n\nIf not set, the ascending order is used.",
          "schema" : {
            "type" : "string",
            "default" : "name"
          }
        }, {
          "name" : "timeFrame",
          "in" : "query",
          "description" : "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used.",
          "schema" : {
            "type" : "string",
            "enum" : [ "CURRENT", "GTF" ],
            "default" : "CURRENT"
          }
        }, {
          "name" : "demo",
          "in" : "query",
          "description" : "Get your SLOs (`false`) or a set of demo SLOs (`true`).",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "evaluate",
          "in" : "query",
          "description" : "Get your SLOs without them being evaluated (`false`) or with evaluations (`true`) with maximum `pageSize` of 25.",
          "schema" : {
            "type" : "string",
            "enum" : [ "true", "false" ],
            "default" : "false"
          }
        }, {
          "name" : "enabledSlos",
          "in" : "query",
          "description" : "Get your enabled SLOs (`true`), disabled ones (`false`) or both enabled and disabled ones (`all`).",
          "schema" : {
            "type" : "string",
            "enum" : [ "true", "false", "all" ],
            "default" : "true"
          }
        }, {
          "name" : "showGlobalSlos",
          "in" : "query",
          "description" : "Get your global SLOs (`true`) regardless of the selected filter or filter them out (`false`).",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the parameters and calculated values of the requested SLO.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SLOs"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "slo.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      },
      "post" : {
        "tags" : [ "Service-level objectives" ],
        "summary" : "Creates a new SLO",
        "operationId" : "createSlo",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the parameters of the new SLO.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SloConfigItemDtoImpl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new SLO has been created. Response doesn't have a body. The **location** response header contains the ID of the new SLO.",
            "headers" : {
              "location" : {
                "description" : "The location of the new resource created by this request.",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "409" : {
            "description" : "Failed. Conflicting resource.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "slo.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/slo/{id}" : {
      "get" : {
        "tags" : [ "Service-level objectives" ],
        "summary" : "Gets parameters and calculated values of a specific SLO",
        "description" : "If **from** and **to** parameters are provided, the SLO is calculated for that timeframe; otherwise the SLO's own timeframe is used.",
        "operationId" : "getSloById",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required SLO.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "timeFrame",
          "in" : "query",
          "description" : "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used.",
          "schema" : {
            "type" : "string",
            "enum" : [ "CURRENT", "GTF" ],
            "default" : "CURRENT"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the parameters and calculated values of the requested SLO.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SLO"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "slo.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      },
      "put" : {
        "tags" : [ "Service-level objectives" ],
        "summary" : "Updates an existing SLO",
        "operationId" : "updateSloById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required SLO.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the updated parameters of the SLO.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SloConfigItemDtoImpl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Failed. The input is invalid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist."
          },
          "500" : {
            "description" : "Internal server error.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "slo.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ],
        "x-allow-access-with-management-zone-permissions" : true
      },
      "delete" : {
        "tags" : [ "Service-level objectives" ],
        "summary" : "Deletes an SLO",
        "operationId" : "deleteSlo",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the required SLO.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The SLO has been deleted. Response doesn't have a body."
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "409" : {
            "description" : "Failed. Conflicting resource.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "slo.write" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:manage-settings" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/synthetic/config" : {
      "get" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Gets set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
        "operationId" : "getConfiguration",
        "responses" : {
          "200" : {
            "description" : "Success. The response contains synthetic related parameters defined for whole tenant.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticConfigDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "syntheticLocations.read" ]
      },
      "put" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Updates set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
        "operationId" : "updateConfiguration",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticConfigDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The set of synthetic related parameters has been updated. Response doesn't have a body.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticConfigDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "syntheticLocations.write" ]
      }
    },
    "/synthetic/execution/{monitorId}/{resultType}" : {
      "get" : {
        "tags" : [ "Synthetic - HTTP monitor executions" ],
        "summary" : "Gets detailed information about the last execution of the specified HTTP monitor",
        "operationId" : "getExecutionResult",
        "parameters" : [ {
          "name" : "monitorId",
          "in" : "path",
          "description" : "Identifier of the HTTP monitor for which last execution result is returned.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resultType",
          "in" : "path",
          "description" : "Defines the result type of the last HTTP monitor's execution.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILED" ]
          }
        }, {
          "name" : "locationId",
          "in" : "query",
          "description" : "Filters the results to those executed by specified Synthetic location. Specify the ID of the location.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains detailed data.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonitorExecutionResults"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "DataExport", "ExternalSyntheticIntegration", "ReadSyntheticData" ]
      }
    },
    "/synthetic/locations" : {
      "get" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Lists all synthetic locations (both public and private) available for your environment",
        "operationId" : "getLocations",
        "parameters" : [ {
          "name" : "cloudPlatform",
          "in" : "query",
          "description" : "Filters the resulting set of locations to those which are hosted on a specific cloud platform.",
          "schema" : {
            "type" : "string",
            "enum" : [ "AWS", "AZURE", "ALIBABA", "GOOGLE_CLOUD", "OTHER" ]
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Filters the resulting set of locations to those of a specific type.",
          "schema" : {
            "type" : "string",
            "enum" : [ "PUBLIC", "PRIVATE" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticLocations"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "syntheticLocations.read" ]
      },
      "post" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Creates a new private synthetic location",
        "operationId" : "addLocation",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains parameters of the new private synthetic location.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateSyntheticLocation"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The private location has been created. The response contains the ID of the new location.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticLocationIdsDto"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "syntheticLocations.write" ]
      }
    },
    "/synthetic/locations/{locationId}" : {
      "get" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Gets properties of the specified location",
        "operationId" : "getLocation",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required location.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains parameters of the synthetic location.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticLocation"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "syntheticLocations.read" ]
      },
      "put" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Updates the specified synthetic location",
        "description" : "For public locations you can only change the location status.",
        "operationId" : "updateLocation",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the synthetic location to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON body of the request. Contains updated parameters of the location.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticLocationUpdate"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. The location has been updated. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "syntheticLocations.write" ]
      },
      "delete" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Deletes the specified private synthetic location",
        "operationId" : "removeLocation",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the private synthetic location to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The location has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "syntheticLocations.write" ]
      }
    },
    "/synthetic/locations/commands/apply" : {
      "get" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Gets list of commands to deploy synthetic location in Kubernetes/Openshift cluster | maturity=EARLY_ADOPTER",
        "operationId" : "getLocationDemploymentApplyCommands",
        "parameters" : [ {
          "name" : "platform",
          "in" : "query",
          "description" : "Container platform, currently supported are: KUBERNETES and OPENSHIFT. Default value is KUBERNETES.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namespace",
          "in" : "query",
          "description" : "Namespace",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filename",
          "in" : "query",
          "description" : "Filename",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the list of commands that needs to be executed to deploy a synthetic location.",
            "content" : {
              "text/plain" : { }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "syntheticLocations.read" ]
      }
    },
    "/synthetic/locations/{locationId}/commands/delete" : {
      "get" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Gets list of commands to delete synthetic location in Kubernetes/Openshift cluster | maturity=EARLY_ADOPTER",
        "operationId" : "getLocationDemploymentDeleteCommands",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required location.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platform",
          "in" : "query",
          "description" : "Container platform, currently supported are: KUBERNETES and OPENSHIFT. Default value is KUBERNETES.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namespace",
          "in" : "query",
          "description" : "Namespace",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filename",
          "in" : "query",
          "description" : "Filename",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the list of commands that needs to be executed to delete a synthetic location.",
            "content" : {
              "text/plain" : { }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "syntheticLocations.read" ]
      }
    },
    "/synthetic/locations/{locationId}/yaml" : {
      "get" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Gets yaml file content to deploy location in Kubernetes/Openshift cluster | maturity=EARLY_ADOPTER",
        "operationId" : "getLocationDemploymentYaml",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "The Dynatrace entity ID of the required location.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "platform",
          "in" : "query",
          "description" : "Container platform, currently supported are: KUBERNETES and OPENSHIFT. Default value is KUBERNETES.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activeGateName",
          "in" : "query",
          "description" : "Active gate name",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namespace",
          "in" : "query",
          "description" : "Namespace",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the content of deployment yaml file.",
            "content" : {
              "application/yaml" : { }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "syntheticLocations.read" ]
      }
    },
    "/synthetic/locations/status" : {
      "get" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Checks the status of public synthetic locations",
        "operationId" : "getLocationsStatus",
        "responses" : {
          "200" : {
            "description" : "Success. The response contains the public locations status.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticPublicLocationsStatus"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "syntheticLocations.read" ]
      },
      "put" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Changes the status of public synthetic locations",
        "operationId" : "updateLocationsStatus",
        "requestBody" : {
          "description" : "The new status of public synthetic locations.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticPublicLocationsStatus"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success. Locations status has been updated."
          },
          "409" : {
            "description" : "Conflict. Public locations couldn't be disabled because there are monitors assigned to them."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "syntheticLocations.write" ]
      }
    },
    "/synthetic/nodes/{nodeId}" : {
      "get" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Lists properties of the specified synthetic node",
        "operationId" : "getNode",
        "parameters" : [ {
          "name" : "nodeId",
          "in" : "path",
          "description" : "The ID of the required synthetic node.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Node"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "syntheticLocations.read" ]
      }
    },
    "/synthetic/nodes" : {
      "get" : {
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "summary" : "Lists all synthetic nodes available in your environment",
        "operationId" : "getNodes",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Nodes"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "syntheticLocations.read" ]
      }
    },
    "/synthetic/executions/batch" : {
      "post" : {
        "tags" : [ "Synthetic - On-demand monitor executions" ],
        "summary" : "Triggers on-demand executions for synthetic monitors",
        "operationId" : "execute",
        "requestBody" : {
          "description" : "The JSON body of the request. Contains the parameters of the triggered on-demand execution.",
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticOnDemandExecutionRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success. The monitor's execution response details",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticOnDemandExecutionResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "syntheticExecutions.write", "ExternalSyntheticIntegration" ]
      }
    },
    "/synthetic/executions/batch/{batchId}" : {
      "get" : {
        "tags" : [ "Synthetic - On-demand monitor executions" ],
        "summary" : "Gets summary information and the list of failed executions for the given batch ID",
        "operationId" : "getBatch",
        "parameters" : [ {
          "name" : "batchId",
          "in" : "path",
          "description" : "The batch identifier of the executions.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticOnDemandBatchStatus"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "syntheticExecutions.read", "ExternalSyntheticIntegration", "ReadSyntheticData" ]
      }
    },
    "/synthetic/executions/{executionId}" : {
      "get" : {
        "tags" : [ "Synthetic - On-demand monitor executions" ],
        "summary" : "Gets basic results of the specified on-demand execution",
        "operationId" : "getExecution",
        "parameters" : [ {
          "name" : "executionId",
          "in" : "path",
          "description" : "The identifier of the on-demand execution.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains basic information about the on-demand execution.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticOnDemandExecution"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "syntheticExecutions.read", "ExternalSyntheticIntegration", "ReadSyntheticData" ]
      }
    },
    "/synthetic/executions/{executionId}/fullReport" : {
      "get" : {
        "tags" : [ "Synthetic - On-demand monitor executions" ],
        "summary" : "Gets detailed results of the specified on-demand execution",
        "operationId" : "getExecutionFullReport",
        "parameters" : [ {
          "name" : "executionId",
          "in" : "path",
          "description" : "The identifier of the on-demand execution.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response contains detailed information about the on-demand execution.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticOnDemandExecution"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "syntheticExecutions.read", "ExternalSyntheticIntegration", "ReadSyntheticData" ]
      }
    },
    "/synthetic/executions" : {
      "get" : {
        "tags" : [ "Synthetic - On-demand monitor executions" ],
        "summary" : "Gets the list of all on-demand executions of synthetic monitors",
        "operationId" : "getExecutions",
        "parameters" : [ {
          "name" : "executionStage",
          "in" : "query",
          "description" : "Filters the resulting set of executions by their stage.",
          "schema" : {
            "type" : "string",
            "enum" : [ "TRIGGERED", "EXECUTED", "DATA_RETRIEVED" ]
          }
        }, {
          "name" : "schedulingFrom",
          "in" : "query",
          "description" : "The start of the requested timeframe for scheduling timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schedulingTo",
          "in" : "query",
          "description" : "The end of the requested timeframe for scheduling timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "executionFrom",
          "in" : "query",
          "description" : "The start of the requested timeframe for execution timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "executionTo",
          "in" : "query",
          "description" : "The end of the requested timeframe for execution timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataDeliveryFrom",
          "in" : "query",
          "description" : "The start of the requested timeframe for data delivering timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataDeliveryTo",
          "in" : "query",
          "description" : "The end of the requested timeframe for data delivering timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "batchId",
          "in" : "query",
          "description" : "Filters the resulting set of the executions by batch. Specify the ID of the batch.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "monitorId",
          "in" : "query",
          "description" : "Filters the resulting set of the executions by monitor synthetic monitor. Specify the ID of the monitor.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locationId",
          "in" : "query",
          "description" : "Filters the resulting set of the executions by Synthetic location. Specify the ID of the location.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "query",
          "description" : "Filters the resulting set of executions by scheduled user.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "source",
          "in" : "query",
          "description" : "Filters the resulting set of the executions by the source of the triggering request.",
          "schema" : {
            "type" : "string",
            "enum" : [ "API", "UI" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticOnDemandExecutions"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "syntheticExecutions.read", "ExternalSyntheticIntegration", "ReadSyntheticData" ]
      }
    },
    "/tenantTokenRotation/cancel" : {
      "post" : {
        "tags" : [ "Access tokens - Tenant tokens" ],
        "summary" : "Cancels tenant token rotation",
        "description" : "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
        "operationId" : "cancelRotation",
        "responses" : {
          "200" : {
            "description" : "Success. Rotation process has been cancelled. The current tenant token remains valid.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TenantTokenConfig"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. There is no ongoing rotation process.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "tenantTokenRotation.write" ]
      }
    },
    "/tenantTokenRotation/finish" : {
      "post" : {
        "tags" : [ "Access tokens - Tenant tokens" ],
        "summary" : "Finishes tenant token rotation",
        "description" : "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
        "operationId" : "finishRotation",
        "responses" : {
          "200" : {
            "description" : "Success. The rotation process is completed. The **active** field of the response contains the new tenant token.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TenantTokenConfig"
                }
              }
            }
          },
          "400" : {
            "description" : "No ongoing rotation process.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "tenantTokenRotation.write" ]
      }
    },
    "/tenantTokenRotation/start" : {
      "post" : {
        "tags" : [ "Access tokens - Tenant tokens" ],
        "summary" : "Starts tenant token rotation",
        "description" : "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
        "operationId" : "startRotation",
        "responses" : {
          "200" : {
            "description" : "Success. The new tenant token is created and will replace the old one. The **active** field of the response contains the new tenant token.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TenantTokenConfig"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed. Another rotation process is already in progress.",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "tenantTokenRotation.write" ]
      }
    },
    "/units/{unitId}/convert" : {
      "get" : {
        "tags" : [ "Metrics - Units" ],
        "summary" : "Converts a value from a source unit into a target unit",
        "description" : "If no target unit is set, the request finds an appropriate target unit automatically, taking into account the preferred number format (if specified).",
        "operationId" : "convert",
        "parameters" : [ {
          "name" : "unitId",
          "in" : "path",
          "description" : "The ID of the source unit.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "The value to be converted.",
          "required" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "targetUnit",
          "in" : "query",
          "description" : "The ID of the target unit. \n\nIf not set, the request finds an appropriate target unit automatically, based on the specified number format.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "numberFormat",
          "in" : "query",
          "description" : "The preferred number format of the target value. You can specify the following formats: \n\n* `binary` \n* `decimal` \n\n`Only used if the target unit if not set.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnitConversionResult"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found. The requested resource is not found or the query is incorrect."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "metrics.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/units/{unitId}" : {
      "get" : {
        "tags" : [ "Metrics - Units" ],
        "summary" : "Gets the properties of the specified unit",
        "operationId" : "unit",
        "parameters" : [ {
          "name" : "unitId",
          "in" : "path",
          "description" : "The ID of the required unit.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unit"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found. The requested resource is not found or the query is incorrect."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "metrics.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    },
    "/units" : {
      "get" : {
        "tags" : [ "Metrics - Units" ],
        "summary" : "Lists all available units",
        "description" : "You can narrow down the output by providing filter criteria in the **unitSelector** field.\n\n",
        "operationId" : "allUnits",
        "parameters" : [ {
          "name" : "unitSelector",
          "in" : "query",
          "description" : "Selects units to be included to the response. Available criteria: \n* Compatibility: `compatibleTo(\"unit\",\"display-format\")`. Returns units that can be converted to the specified unit. The optional display format (`binary` or `decimal`) argument is supported by bit- and byte-based units and returns only units for the specified format.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Defines the list of properties to be included in the response. The ID of the unit is **always** included. The following additional properties are available: \n\n* `displayName`: The display name of the unit. \n* `symbol`: The symbol of the unit. \n* `description`: A short description of the unit.\n\nBy default, the ID, the display name, and the symbol are included. \n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`.\n\nTo specify several properties, join them with a comma (for example `fields=+description,-symbol`).\n\nIf you specify just one property, the response contains the unitId and the specified property. To return unit IDs only, specify `unitId` here.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnitList"
                }
              }
            }
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "x-token-scopes" : [ "metrics.read" ],
        "x-supports-personal-access-token" : true,
        "x-permissions" : [ "environment:roles:viewer" ],
        "x-allow-access-with-management-zone-permissions" : true
      }
    }
  },
  "components" : {
    "schemas" : {
      "ActiveGateAutoUpdateConfig" : {
        "required" : [ "setting" ],
        "type" : "object",
        "properties" : {
          "setting" : {
            "type" : "string",
            "description" : "The state of the ActiveGate auto-update: enabled, disabled, or inherited. \n\nIf set to `INHERITED`, the setting is inherited from the global configuration set on the environment or Managed cluster level.",
            "example" : "INHERITED",
            "enum" : [ "DISABLED", "ENABLED", "INHERITED" ]
          },
          "effectiveSetting" : {
            "type" : "string",
            "description" : "The actual state of the ActiveGate auto-update. \n\nApplicable only if the **setting** parameter is set to `INHERITED`. In that case, the value is taken from the parent setting. Otherwise, it's just a duplicate of the **setting** value.",
            "readOnly" : true,
            "example" : "ENABLED",
            "enum" : [ "ENABLED", "DISABLED" ]
          }
        },
        "description" : "Configuration of the ActiveGate auto-updates.",
        "readOnly" : true
      },
      "ConstraintViolation" : {
        "type" : "object",
        "properties" : {
          "parameterLocation" : {
            "type" : "string",
            "enum" : [ "HEADER", "PATH", "PAYLOAD_BODY", "QUERY" ]
          },
          "location" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          }
        },
        "description" : "A list of constraint violations"
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "constraintViolations" : {
            "type" : "array",
            "description" : "A list of constraint violations",
            "items" : {
              "$ref" : "#/components/schemas/ConstraintViolation"
            }
          },
          "code" : {
            "type" : "integer",
            "description" : "The HTTP status code",
            "format" : "int32"
          },
          "message" : {
            "type" : "string",
            "description" : "The error message"
          }
        }
      },
      "ErrorEnvelope" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/Error"
          }
        }
      },
      "ActiveGateGlobalAutoUpdateConfig" : {
        "required" : [ "globalSetting" ],
        "type" : "object",
        "properties" : {
          "globalSetting" : {
            "type" : "string",
            "description" : "The state of auto-updates for all ActiveGates connected to the environment or Managed cluster. \n\nThis setting is inherited by all ActiveGates that have the `INHERITED` setting.",
            "enum" : [ "ENABLED", "DISABLED" ]
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          }
        },
        "description" : "Global configuration of ActiveGates auto-update."
      },
      "ConfigurationMetadata" : {
        "type" : "object",
        "properties" : {
          "configurationVersions" : {
            "type" : "array",
            "description" : "A sorted list of the version numbers of the configuration.",
            "example" : [ 4, 2 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "currentConfigurationVersions" : {
            "type" : "array",
            "description" : "A sorted list of version numbers of the configuration.",
            "example" : [ "1.0.4", "1.23" ],
            "items" : {
              "type" : "string"
            }
          },
          "clusterVersion" : {
            "type" : "string",
            "description" : "Dynatrace version.",
            "example" : "1.192.1"
          }
        },
        "description" : "Metadata useful for debugging",
        "readOnly" : true
      },
      "UpdateJob" : {
        "required" : [ "targetVersion" ],
        "type" : "object",
        "properties" : {
          "agType" : {
            "type" : "string",
            "description" : "The type of the ActiveGate.",
            "readOnly" : true,
            "example" : "ENVIRONMENT",
            "enum" : [ "CLUSTER", "ENVIRONMENT", "ENVIRONMENT_MULTI" ]
          },
          "startVersion" : {
            "type" : "string",
            "description" : "The initial version of the ActiveGate.",
            "readOnly" : true,
            "example" : "1.185.0.20200201-120000"
          },
          "environments" : {
            "type" : "array",
            "description" : "A list of environments (specified by IDs) the ActiveGate can connect to.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "jobId" : {
            "type" : "string",
            "description" : "The ID of the update job.",
            "readOnly" : true,
            "example" : "-3524498778810258605"
          },
          "jobState" : {
            "type" : "string",
            "description" : "The status of the update job.",
            "readOnly" : true,
            "example" : "SUCCEED",
            "enum" : [ "FAILED", "IN_PROGRESS", "PENDING", "ROLLBACK", "SCHEDULED", "SKIPPED", "SUCCEED" ]
          },
          "updateMethod" : {
            "type" : "string",
            "description" : "The method of updating the ActiveGate or its component.",
            "readOnly" : true,
            "example" : "AUTOMATIC",
            "enum" : [ "AUTOMATIC", "MANUAL_INSTALLATION", "ON_DEMAND" ]
          },
          "updateType" : {
            "type" : "string",
            "description" : "The component to be updated.",
            "readOnly" : true,
            "example" : "ACTIVE_GATE",
            "enum" : [ "ACTIVE_GATE", "REMOTE_PLUGIN_AGENT", "SYNTHETIC", "Z_REMOTE" ]
          },
          "cancelable" : {
            "type" : "boolean",
            "description" : "The job can (`true`) or can't (`false`) be cancelled at the moment.",
            "readOnly" : true,
            "example" : false
          },
          "error" : {
            "type" : "string",
            "description" : "The information about update error.",
            "readOnly" : true
          },
          "targetVersion" : {
            "type" : "string",
            "description" : "The target version of the update. \n\nSpecify the version in the `<major>.<minor>.<revision>.<timestamp>` format. \n\nTo update to the latest available version, use the `latest` value.",
            "example" : "1.190.0.20200301-130000"
          },
          "duration" : {
            "type" : "integer",
            "description" : "The duration of the update, in milliseconds.",
            "format" : "int64",
            "readOnly" : true,
            "example" : 3608000
          },
          "timestamp" : {
            "type" : "integer",
            "description" : "The timestamp of the update job completion. \n\n The `null` value means the job is still running.",
            "format" : "int64",
            "readOnly" : true,
            "example" : 1582031917814
          }
        },
        "description" : "Configuration of the ActiveGate update job."
      },
      "UpdateJobList" : {
        "type" : "object",
        "properties" : {
          "updateJobs" : {
            "type" : "array",
            "description" : "A list of update jobs of the ActiveGate.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/UpdateJob"
            }
          },
          "agId" : {
            "type" : "string",
            "description" : "The ID of the ActiveGate.",
            "readOnly" : true,
            "example" : "0x3efdd092"
          }
        },
        "description" : "A list of update jobs of the ActiveGate."
      },
      "UpdateJobsAll" : {
        "type" : "object",
        "properties" : {
          "allUpdateJobs" : {
            "type" : "array",
            "description" : "A list of ActiveGates with update jobs.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/UpdateJobList"
            }
          }
        },
        "description" : "A list of ActiveGates with update jobs."
      },
      "ActiveGate" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the ActiveGate.",
            "readOnly" : true,
            "example" : "0x3efdd091"
          },
          "networkAddresses" : {
            "type" : "array",
            "description" : "A list of network addresses of the ActiveGate.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "loadBalancerAddresses" : {
            "type" : "array",
            "description" : "A list of Load Balancer addresses of the ActiveGate.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type that the ActiveGate is running on.",
            "readOnly" : true,
            "example" : "WINDOWS",
            "enum" : [ "LINUX", "WINDOWS" ]
          },
          "osArchitecture" : {
            "type" : "string",
            "description" : "The OS architecture that the ActiveGate is running on.",
            "readOnly" : true,
            "example" : "X86",
            "enum" : [ "S390", "X86" ]
          },
          "osBitness" : {
            "type" : "string",
            "description" : "The OS bitness that the ActiveGate is running on.",
            "readOnly" : true,
            "example" : "64",
            "enum" : [ "64" ]
          },
          "autoUpdateStatus" : {
            "type" : "string",
            "description" : "The current status of auto-updates of the ActiveGate.",
            "readOnly" : true,
            "example" : "OUTDATED",
            "enum" : [ "INCOMPATIBLE", "OUTDATED", "SCHEDULED", "SUPPRESSED", "UNKNOWN", "UP2DATE", "UPDATE_IN_PROGRESS", "UPDATE_PENDING", "UPDATE_PROBLEM" ]
          },
          "offlineSince" : {
            "type" : "integer",
            "description" : "The timestamp since when the ActiveGate is offline. \n\n The `null` value means the ActiveGate is online.",
            "format" : "int64",
            "readOnly" : true,
            "example" : 1582031917814
          },
          "version" : {
            "type" : "string",
            "description" : "The current version of the ActiveGate in the `<major>.<minor>.<revision>.<timestamp>` format.",
            "readOnly" : true,
            "example" : "1.185.0.20200201-120000"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the ActiveGate.",
            "readOnly" : true,
            "example" : "ENVIRONMENT",
            "enum" : [ "CLUSTER", "ENVIRONMENT", "ENVIRONMENT_MULTI" ]
          },
          "hostname" : {
            "type" : "string",
            "description" : "The name of the host the ActiveGate is running on.",
            "readOnly" : true,
            "example" : "exampleHostname"
          },
          "mainEnvironment" : {
            "type" : "string",
            "description" : "The ID of the main environment for a multi-environment ActiveGate.",
            "readOnly" : true,
            "example" : "d1bf4a7e-666b-43af-9f45-718g98372e2f"
          },
          "environments" : {
            "type" : "array",
            "description" : "A list of environments (specified by IDs) the ActiveGate can connect to.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "autoUpdateSettings" : {
            "$ref" : "#/components/schemas/ActiveGateAutoUpdateConfig"
          },
          "networkZone" : {
            "type" : "string",
            "description" : "The network zone of the ActiveGate.",
            "readOnly" : true,
            "example" : "exampleNetworkZone"
          },
          "group" : {
            "type" : "string",
            "description" : "The group of the ActiveGate.",
            "readOnly" : true,
            "example" : "default"
          },
          "modules" : {
            "type" : "array",
            "description" : "A list of modules of the ActiveGate.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActiveGateModule"
            }
          },
          "containerized" : {
            "type" : "boolean",
            "description" : "ActiveGate is deployed in container (`true`) or not (`false`).",
            "readOnly" : true
          },
          "connectedHosts" : {
            "$ref" : "#/components/schemas/ActiveGateConnectedHosts"
          },
          "activeGateTokens" : {
            "type" : "array",
            "description" : "A list of the ActiveGate tokens.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActiveGateTokenInfoDto"
            }
          }
        },
        "description" : "Parameters of the ActiveGate."
      },
      "ActiveGateConnectedHosts" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "integer",
            "description" : "The number of hosts currently connected to the ActiveGate",
            "format" : "int32",
            "readOnly" : true,
            "example" : 150
          }
        },
        "description" : "Information about hosts currently connected to the ActiveGate",
        "readOnly" : true
      },
      "ActiveGateList" : {
        "type" : "object",
        "properties" : {
          "activeGates" : {
            "type" : "array",
            "description" : "A list of ActiveGates.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActiveGate"
            }
          }
        },
        "description" : "A list of ActiveGates."
      },
      "ActiveGateModule" : {
        "type" : "object",
        "properties" : {
          "misconfigured" : {
            "type" : "boolean",
            "description" : "The module is misconfigured (`true`) or not (`false`).",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the ActiveGate module.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type of ActiveGate module.",
            "readOnly" : true,
            "example" : "KUBERNETES",
            "enum" : [ "AWS", "AZURE", "BEACON_FORWARDER", "CLOUD_FOUNDRY", "DB_INSIGHT", "EXTENSIONS_V1", "EXTENSIONS_V2", "KUBERNETES", "LOGS", "MEMORY_DUMPS", "METRIC_API", "ONE_AGENT_ROUTING", "OTLP_INGEST", "REST_API", "SYNTHETIC", "VMWARE", "Z_OS" ]
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "The attributes of the ActiveGate module.",
              "readOnly" : true
            },
            "description" : "The attributes of the ActiveGate module.",
            "readOnly" : true
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The module is enabled (`true`) or disabled (`false`).",
            "readOnly" : true
          }
        },
        "description" : "Information about ActiveGate module"
      },
      "ActiveGateTokenInfoDto" : {
        "type" : "object",
        "properties" : {
          "environmentId" : {
            "type" : "string",
            "description" : "The environment ID to which the token belongs. \n\nOnly available if more than one environment is supported.",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/rn00tjg) of the token.",
            "readOnly" : true,
            "example" : "dt0g02.4KWZO5EF"
          },
          "state" : {
            "type" : "string",
            "description" : "State of the ActiveGate token.",
            "readOnly" : true,
            "enum" : [ "ABSENT", "EXPIRING", "INVALID", "UNKNOWN", "UNSUPPORTED", "VALID" ]
          }
        },
        "description" : "Information about ActiveGate token."
      },
      "RemoteConfigurationManagementJob" : {
        "type" : "object",
        "properties" : {
          "timeoutTime" : {
            "type" : "string",
            "description" : "Date (in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z') when the running remote configuration management job will time-out. This field is present only for running jobs.",
            "example" : "2020-11-05T08:15:30.144Z"
          },
          "processedEntitiesCount" : {
            "type" : "integer",
            "description" : "Number of entities that were already processed at the time the response was created.",
            "format" : "int32",
            "example" : 1
          },
          "totalEntitiesCount" : {
            "type" : "integer",
            "description" : "Total number of entities to process.",
            "format" : "int32",
            "example" : 1
          },
          "operations" : {
            "type" : "array",
            "description" : "A list of executed remote configuration management jobs.",
            "items" : {
              "$ref" : "#/components/schemas/RemoteConfigurationManagementOperation"
            }
          },
          "entityType" : {
            "type" : "string",
            "description" : "Type of entities modified by remote configuration management.",
            "example" : "ACTIVE_GATE or ONE_AGENT",
            "enum" : [ "ACTIVE_GATE", "ONE_AGENT" ]
          },
          "endTime" : {
            "type" : "string",
            "description" : "Date (in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z') when the remote configuration management job was finished. This field is present only for finished jobs.",
            "example" : "2020-11-05T08:15:30.144Z"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the remote configuration management job.",
            "example" : "7974003406714390819"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Date (in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z') when the remote configuration management job was started.",
            "example" : "2020-11-05T08:15:30.144Z"
          }
        },
        "description" : "Remote configuration management job."
      },
      "RemoteConfigurationManagementOperation" : {
        "required" : [ "attribute", "operation" ],
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "description" : "The operation performed on given attribute.",
            "example" : "set",
            "enum" : [ "clear", "set" ]
          },
          "attribute" : {
            "type" : "string",
            "description" : "The attribute which is affected by the operation.",
            "example" : "networkZone",
            "enum" : [ "group", "hostGroup", "hostProperty", "hostTag", "networkZone" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value which should be assigned to given attribute.",
            "example" : "exampleNetworkZoneName"
          }
        },
        "description" : "Definition of a single remote configuration management operation."
      },
      "RemoteConfigurationManagementEntityValidationError" : {
        "type" : "object",
        "properties" : {
          "reasons" : {
            "type" : "array",
            "description" : "The reason of entity validation failure.",
            "example" : [ "RUNNING_IN_CONTAINER" ],
            "items" : {
              "type" : "string",
              "enum" : [ "CLOUD_NATIVE_NOT_SUPPORTED", "NOT_ALLOWED_WITH_CLUSTER_ACTIVE_GATE", "NOT_CONNECTED", "RUNNING_IN_CONTAINER", "STANDALONE_NOT_SUPPORTED", "VERSION_NOT_SUPPORTED" ]
            }
          },
          "entity" : {
            "type" : "string",
            "description" : "The ID of the entity for which validation failed.",
            "example" : "entityId"
          }
        },
        "description" : "Entity validation error for remote configuration management."
      },
      "RemoteConfigurationManagementOperationValidationError" : {
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "description" : "The operation performed on given attribute.",
            "example" : "set",
            "enum" : [ "clear", "set" ]
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason of validation failure.",
            "example" : "Value must not start with a period"
          },
          "attribute" : {
            "type" : "string",
            "description" : "The attribute which is affected by the operation.",
            "example" : "networkZone",
            "enum" : [ "group", "hostGroup", "hostProperty", "hostTag", "networkZone" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value which should be assigned to given attribute.",
            "example" : ".exampleInvalidNetworkZoneName"
          }
        },
        "description" : "Validation error of remote configuration management operation definition."
      },
      "RemoteConfigurationManagementValidationResult" : {
        "type" : "object",
        "properties" : {
          "invalidOperations" : {
            "type" : "array",
            "description" : "A list of validation errors for operations.",
            "items" : {
              "$ref" : "#/components/schemas/RemoteConfigurationManagementOperationValidationError"
            }
          },
          "invalidEntities" : {
            "type" : "array",
            "description" : "A list of validation errors for entities.",
            "items" : {
              "$ref" : "#/components/schemas/RemoteConfigurationManagementEntityValidationError"
            }
          }
        },
        "description" : "The result of remote configuration management validation."
      },
      "RemoteConfigurationManagementOperationActiveGateRequest" : {
        "required" : [ "entities", "operations" ],
        "type" : "object",
        "properties" : {
          "entities" : {
            "type" : "array",
            "description" : "A list of entities IDs for which remote configuration management is to be executed.",
            "example" : [ "0x2b7c0b02", "0x4928065d" ],
            "items" : {
              "type" : "string"
            }
          },
          "operations" : {
            "type" : "array",
            "description" : "A list of remote configuration management operations to be executed.",
            "items" : {
              "$ref" : "#/components/schemas/RemoteConfigurationManagementOperation"
            }
          }
        },
        "description" : "Remote configuration management operation creation request."
      },
      "RemoteConfigurationManagementJobPreview" : {
        "type" : "object",
        "properties" : {
          "targetEntitiesCount" : {
            "type" : "integer",
            "description" : "The number of entities that will be configured as defined by remote configuration management after it is completed.",
            "format" : "int32",
            "example" : 2
          },
          "alreadyConfiguredEntitiesCount" : {
            "type" : "integer",
            "description" : "The number of entities that are currently configured as defined by remote configuration management operation.",
            "format" : "int32",
            "example" : 1
          },
          "operation" : {
            "type" : "string",
            "description" : "The operation performed on given attribute.",
            "example" : "set",
            "enum" : [ "clear", "set" ]
          },
          "attribute" : {
            "type" : "string",
            "description" : "The attribute which is affected by the operation.",
            "example" : "networkZone",
            "enum" : [ "group", "hostGroup", "hostProperty", "hostTag", "networkZone" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The value which should be assigned to given attribute.",
            "example" : "exampleNetworkZoneName"
          }
        },
        "description" : "A preview of remote configuration management job."
      },
      "RemoteConfigurationManagementPreviewList" : {
        "type" : "object",
        "properties" : {
          "previews" : {
            "type" : "array",
            "description" : "A list of remote configuration management jobs previews.",
            "items" : {
              "$ref" : "#/components/schemas/RemoteConfigurationManagementJobPreview"
            }
          }
        },
        "description" : "A list of remote configuration management jobs previews."
      },
      "RemoteConfigurationManagementJobList" : {
        "type" : "object",
        "properties" : {
          "jobs" : {
            "type" : "array",
            "description" : "A list of remote configuration management jobs.",
            "items" : {
              "$ref" : "#/components/schemas/RemoteConfigurationManagementJobSummary"
            }
          }
        },
        "description" : "A list of remote configuration management jobs."
      },
      "RemoteConfigurationManagementJobSummary" : {
        "type" : "object",
        "properties" : {
          "entityType" : {
            "type" : "string",
            "description" : "Type of entities modified by remote configuration management.",
            "example" : "ACTIVE_GATE or ONE_AGENT",
            "enum" : [ "ACTIVE_GATE", "ONE_AGENT" ]
          },
          "endTime" : {
            "type" : "string",
            "description" : "Date (in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z') when the remote configuration management job was finished. This field is present only for finished jobs.",
            "example" : "2020-11-05T08:15:30.144Z"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the remote configuration management job.",
            "example" : "7974003406714390819"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Date (in ISO 8601 format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z') when the remote configuration management job was started.",
            "example" : "2020-11-05T08:15:30.144Z"
          }
        },
        "description" : "Remote configuration management job with basic data."
      },
      "ActiveGateTokenEnforcement" : {
        "type" : "object",
        "properties" : {
          "manualEnforced" : {
            "type" : "boolean",
            "description" : "If `true`, ActiveGate tokens are manually enforced by user."
          },
          "autoEnforced" : {
            "type" : "boolean",
            "description" : "If `true`, ActiveGate tokens are enforced automatically."
          },
          "autoEnforcementEstimation" : {
            "$ref" : "#/components/schemas/Duration"
          }
        },
        "description" : "The status of ActiveGate tokens enforcement."
      },
      "Duration" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "integer",
            "description" : "The amount of time.",
            "format" : "int64"
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of time. \n\n If not set, millisecond is used.",
            "enum" : [ "DAYS", "HOURS", "MILLIS", "MINUTES", "SECONDS" ]
          }
        },
        "description" : "Defines a period of time."
      },
      "EntitiesList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "entities" : {
            "type" : "array",
            "description" : "A list of monitored entities.",
            "items" : {
              "$ref" : "#/components/schemas/Entity"
            }
          }
        },
        "description" : "A list of monitored entities along with their properties."
      },
      "Entity" : {
        "type" : "object",
        "properties" : {
          "lastSeenTms" : {
            "type" : "integer",
            "description" : "The timestamp at which the entity was last seen, in UTC milliseconds.",
            "format" : "int64"
          },
          "firstSeenTms" : {
            "type" : "integer",
            "description" : "The timestamp at which the entity was first seen, in UTC milliseconds.",
            "format" : "int64"
          },
          "entityId" : {
            "type" : "string",
            "description" : "The ID of the entity."
          },
          "managementZones" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A set of management zones to which the entity belongs.",
            "items" : {
              "$ref" : "#/components/schemas/ManagementZone"
            }
          },
          "toRelationships" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "A list of relationships where the entity occupies the TO position.",
              "items" : {
                "$ref" : "#/components/schemas/EntityId"
              }
            },
            "description" : "A list of relationships where the entity occupies the TO position."
          },
          "fromRelationships" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "A list of relationships where the entity occupies the FROM position.",
              "items" : {
                "$ref" : "#/components/schemas/EntityId"
              }
            },
            "description" : "A list of relationships where the entity occupies the FROM position."
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A set of tags assigned to the entity.",
            "items" : {
              "$ref" : "#/components/schemas/METag"
            }
          },
          "icon" : {
            "$ref" : "#/components/schemas/EntityIcon"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The name of the entity, displayed in the UI."
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "description" : "A list of additional properties of the entity."
            },
            "description" : "A list of additional properties of the entity."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the entity."
          }
        },
        "description" : "The properties of a monitored entity.",
        "example" : {
          "entityId" : "HOST-06F288EE2A930951",
          "type" : "HOST",
          "displayName" : "my host",
          "icon" : {
            "primaryIconType" : "linux",
            "secondaryIconType" : "microsoft-azure-signet",
            "customIconPath" : "host"
          },
          "firstSeenTms" : 1574697667547,
          "lastSeenTms" : 1588242361417,
          "properties" : {
            "bitness" : 64,
            "monitoringMode" : "FULL_STACK",
            "osType" : "LINUX",
            "osArchitecture" : "X86",
            "networkZoneId" : "aws.us.east01",
            "cpuCores" : 8
          },
          "tags" : [ {
            "context" : "CONTEXTLESS",
            "key" : "architecture",
            "value" : "x86",
            "stringRepresentation" : "architecture:x86"
          }, {
            "context" : "ENVIRONMENT",
            "key" : "Infrastructure",
            "value" : "Linux",
            "stringRepresentation" : "[ENVIRONMENT]Infrastructure:Linux"
          } ],
          "managementZones" : [ {
            "id" : "6239538939987181652",
            "name" : "main app"
          } ],
          "fromRelationships" : {
            "isInstanceOf" : [ {
              "id" : "HOST_GROUP-0E489369D663A4BF",
              "type" : "HOST_GROUP"
            } ]
          },
          "toRelationships" : {
            "isDiskOf" : [ {
              "id" : "DISK-0393340DCA3853B0",
              "type" : "DISK"
            } ]
          }
        }
      },
      "EntityIcon" : {
        "type" : "object",
        "properties" : {
          "customIconPath" : {
            "type" : "string",
            "description" : "The user-defined icon of the entity. \n\nSpecify the [barista](https://dt-url.net/u403suy) ID of the icon or a URL of your own icon."
          },
          "secondaryIconType" : {
            "type" : "string",
            "description" : "The secondary icon of the entity. \n\nSpecified by the [barista](https://dt-url.net/u403suy) ID of the icon.",
            "readOnly" : true
          },
          "primaryIconType" : {
            "type" : "string",
            "description" : "The primary icon of the entity. \n\nSpecified by the [barista](https://dt-url.net/u403suy) ID of the icon.",
            "readOnly" : true
          }
        },
        "description" : "The icon of a monitored entity."
      },
      "EntityId" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the entity."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the entity."
          }
        },
        "description" : "A short representation of a monitored entity."
      },
      "METag" : {
        "type" : "object",
        "properties" : {
          "stringRepresentation" : {
            "type" : "string",
            "description" : "The string representation of the tag."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the tag."
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the tag."
          },
          "context" : {
            "type" : "string",
            "description" : "The origin of the tag, such as AWS or Cloud Foundry. \n\n Custom tags use the `CONTEXTLESS` value."
          }
        },
        "description" : "The tag of a monitored entity."
      },
      "ManagementZone" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the management zone."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the management zone."
          }
        },
        "description" : "A short representation of a management zone."
      },
      "EntityType" : {
        "type" : "object",
        "properties" : {
          "entityLimitExceeded" : {
            "type" : "boolean",
            "description" : "Whether the entity creation limit for the given type has been exceeded"
          },
          "dimensionKey" : {
            "type" : "string",
            "description" : "The dimension key used within metrics for this monitored entity."
          },
          "managementZones" : {
            "type" : "string",
            "description" : "The placeholder for the list of management zones of an actual entity."
          },
          "toRelationships" : {
            "type" : "array",
            "description" : "A list of possible relationships where the monitored entity type occupies the TO position.",
            "items" : {
              "$ref" : "#/components/schemas/FromPosition"
            }
          },
          "fromRelationships" : {
            "type" : "array",
            "description" : "A list of possible relationships where the monitored entity type occupies the FROM position",
            "items" : {
              "$ref" : "#/components/schemas/ToPosition"
            }
          },
          "tags" : {
            "type" : "string",
            "description" : "The placeholder for the list of tags of an actual entity."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the monitored entity."
          },
          "properties" : {
            "type" : "array",
            "description" : "A list of additional properties of the monitored entity type.",
            "items" : {
              "$ref" : "#/components/schemas/EntityTypePropertyDto"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the monitored entity."
          }
        },
        "description" : "A list of properties of the monitored entity type.",
        "example" : {
          "type" : "HOST",
          "entityLimitExceeded" : "false",
          "properties" : [ {
            "id" : "BITNESS",
            "type" : "Enum"
          }, {
            "id" : "CPU_CORES",
            "type" : "Number"
          } ],
          "tags" : "placeholder for tags",
          "managementZones" : "placeholder for management zones",
          "fromRelationships" : [ {
            "id" : "RUNS_ON_RESOURCE",
            "toTypes" : [ "CUSTOM_DEVICE" ]
          }, {
            "id" : "IS_NETWORK_CLIENT_OF_HOST",
            "toTypes" : [ "HOST", "CUSTOM_DEVICE" ]
          } ],
          "toRelationships" : [ {
            "id" : "IS_DISK_OF",
            "fromTypes" : [ "DISK" ]
          }, {
            "id" : "IS_SITE_OF",
            "fromTypes" : [ "VMWARE_DATACENTER", "GEOLOC_SITE" ]
          } ]
        }
      },
      "EntityTypePropertyDto" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The display-name of the property.",
            "example" : "cpu cores"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the property.",
            "example" : "cpuCores"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the property.",
            "example" : "Number"
          }
        },
        "description" : "The property of a monitored entity."
      },
      "FromPosition" : {
        "type" : "object",
        "properties" : {
          "fromTypes" : {
            "type" : "array",
            "description" : "A list of monitored entity types that can occupy the FROM position.",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the relationship."
          }
        },
        "description" : "The FROM position of a relationship."
      },
      "ToPosition" : {
        "type" : "object",
        "properties" : {
          "toTypes" : {
            "type" : "array",
            "description" : "A list of monitored entity types that can occupy the TO position.",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the relationship."
          }
        },
        "description" : "The TO position of a relationship."
      },
      "EntityTypeList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "types" : {
            "type" : "array",
            "description" : "The list of meta information for all available entity-types",
            "items" : {
              "$ref" : "#/components/schemas/EntityType"
            }
          }
        },
        "description" : "A list of properties of all available entity types."
      },
      "CustomDeviceCreationResult" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the custom device."
          },
          "groupId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the custom device group."
          }
        },
        "description" : "The short representation of a newly created custom device."
      },
      "CustomDeviceCreation" : {
        "required" : [ "customDeviceId", "displayName" ],
        "type" : "object",
        "properties" : {
          "customDeviceId" : {
            "maxLength" : 512,
            "minLength" : 0,
            "type" : "string",
            "description" : "The internal ID of the custom device. \n\n If you use the ID of an existing device, the respective parameters will be updated."
          },
          "displayName" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "description" : "The name of the custom device to be displayed in the user interface."
          },
          "group" : {
            "maxLength" : 512,
            "minLength" : 0,
            "type" : "string",
            "description" : "User defined group ID of entity. \n\nThe group ID helps to keep a consistent picture of device-group relations. One of many cases where a proper group is important is service detection: you can define which custom devices should lead to the same service by defining the same group ID for them. \n\nIf you set a group ID, it will be hashed into the Dynatrace entity ID of the custom device. In that case the custom device can only be part of one custom device group. \n\nIf you don't set the group ID, Dynatrace will create it based on the ID or type of the custom device. Also, the group will not be hashed into the device ID which means the device may switch groups."
          },
          "ipAddresses" : {
            "maxItems" : 100,
            "minItems" : 0,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of IP addresses that belong to the custom device. \n\nThese addresses are used to automatically discover the horizontal communication relationship between this component and all other observed components within Smartscape. Once a connection is discovered, it is automatically mapped and shown within Smartscape. \n\nIf you send a value (including an empty value), the existing values will be overwritten. \n\nIf you send `null` or omit this field, the existing values will be kept.",
            "items" : {
              "type" : "string"
            }
          },
          "listenPorts" : {
            "maxItems" : 100,
            "minItems" : 0,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of ports the custom devices listens to. \n\nThese ports are used to discover the horizontal communication relationship between this component and all other observed components within Smartscape. \n\nOnce a connection is discovered, it is automatically mapped and shown within Smartscape. \n\nIf ports are specified, you should also add at least one IP address or a DNS name for the custom device. \n\nIf you send a value, the existing values will be overwritten. \n\nIf you send `null`, or an empty value, or omit this field, the existing values will be kept.",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "type" : {
            "maxLength" : 128,
            "minLength" : 0,
            "type" : "string",
            "description" : "The technology type definition of the custom device. \n\nIt must be the same technology type of the metric you're reporting. \n\nIf you send a value, the existing value will be overwritten. \n\nIf you send `null`, empty or omit this field, the existing value will be kept."
          },
          "faviconUrl" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string",
            "description" : "The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file."
          },
          "configUrl" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string",
            "description" : "The URL of a configuration web page for the custom device, such as a login page for a firewall or router."
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "The list of key-value pair properties that will be shown beneath the infographics of your custom device."
            },
            "description" : "The list of key-value pair properties that will be shown beneath the infographics of your custom device."
          },
          "dnsNames" : {
            "maxItems" : 20,
            "minItems" : 0,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of DNS names related to the custom device. \n\nThese names are used to automatically discover the horizontal communication relationship between this component and all other observed components within Smartscape. Once a connection is discovered, it is automatically mapped and shown within Smartscape. \n\nIf you send a value, the existing values will be overwritten. \n\nIf you send `null` or an empty value; or omit this field, the existing values will be kept.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Configuration of a custom device.",
        "example" : {
          "customDeviceId" : "customDeviceId",
          "displayName" : "coffeeMachine",
          "group" : "myCustomDeviceGroup",
          "ipAddresses" : [ "10.0.0.1" ],
          "listenPorts" : [ 80 ],
          "faviconUrl" : "https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png",
          "configUrl" : "http://coffee-machine.dynatrace.internal.com/coffeemachine/manage",
          "type" : "coffee machine",
          "properties" : { },
          "dnsNames" : [ "coffee-machine.dynatrace.internal.com" ]
        }
      },
      "EventIngestResult" : {
        "type" : "object",
        "properties" : {
          "correlationId" : {
            "type" : "string",
            "description" : "The correlation ID of the created event."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the ingestion.",
            "enum" : [ "INVALID_ENTITY_TYPE", "INVALID_METADATA", "INVALID_TIMESTAMPS", "OK" ]
          }
        },
        "description" : "The result of a created event report."
      },
      "EventIngestResults" : {
        "type" : "object",
        "properties" : {
          "reportCount" : {
            "type" : "integer",
            "description" : "The number of created event reports.",
            "format" : "int32"
          },
          "eventIngestResults" : {
            "type" : "array",
            "description" : "The result of each created event report.",
            "items" : {
              "$ref" : "#/components/schemas/EventIngestResult"
            }
          }
        },
        "description" : "The results of an event ingest."
      },
      "EventIngest" : {
        "required" : [ "eventType", "title" ],
        "type" : "object",
        "properties" : {
          "eventType" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "AVAILABILITY_EVENT", "CUSTOM_ALERT", "CUSTOM_ANNOTATION", "CUSTOM_CONFIGURATION", "CUSTOM_DEPLOYMENT", "CUSTOM_INFO", "ERROR_EVENT", "MARKED_FOR_TERMINATION", "PERFORMANCE_EVENT", "RESOURCE_CONTENTION_EVENT" ]
          },
          "title" : {
            "type" : "string",
            "description" : "The title of the event."
          },
          "startTime" : {
            "type" : "integer",
            "description" : "The start time of the event, in UTC milliseconds.\n\nIf not set, the current timestamp is used.\n\nDepending on the event type, the start time must not lie in the future more than 5 minutes for trigger events and 7 days for info events.",
            "format" : "int64"
          },
          "endTime" : {
            "type" : "integer",
            "description" : "The end time of the event, in UTC milliseconds.\n\nIf not set, the start time plus timeout is used.",
            "format" : "int64"
          },
          "timeout" : {
            "type" : "integer",
            "description" : "The timeout of the event, in minutes.\n\nIf not set, 15 is used.\n\nThe timeout will automatically be capped to a maximum of 360 minutes (6 hours).\n\nProblem-opening events can be refreshed and therefore kept open by sending the same payload again.",
            "format" : "int32"
          },
          "entitySelector" : {
            "type" : "string",
            "description" : "The [entity selector](https://dt-url.net/apientityselector), defining a set of Dynatrace entities to be associated with the event.\n\nOnly entities that have been active within the last 24 hours can be selected. \n\n If not set, the event is associated with the environment (`dt.entity.environment`) entity."
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "A map of event properties.\n\nKeys with prefix `dt.*` are generally disallowed, with the exceptions of `dt.event.*`, `dt.davis.*` and `dt.entity.*`. These reserved keys may be used to set event properties with predefined semantics within the Dynatrace product.\n`dt.entity.*` keys may be used to provide additional information on an event, but will not lead to the event being tied to the specified entities.\nAll other keys are interpreted as user-defined event properties.\n\nValues of Dynatrace-reserved properties must fulfill the requirements of the respective property."
            },
            "description" : "A map of event properties.\n\nKeys with prefix `dt.*` are generally disallowed, with the exceptions of `dt.event.*`, `dt.davis.*` and `dt.entity.*`. These reserved keys may be used to set event properties with predefined semantics within the Dynatrace product.\n`dt.entity.*` keys may be used to provide additional information on an event, but will not lead to the event being tied to the specified entities.\nAll other keys are interpreted as user-defined event properties.\n\nValues of Dynatrace-reserved properties must fulfill the requirements of the respective property."
          }
        },
        "description" : "The configuration of an event to be ingested."
      },
      "EntityStub" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "$ref" : "#/components/schemas/EntityId"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the entity. \n\n Not included in the response in case no entity with the relevant ID was found."
          }
        },
        "description" : "A short representation of a monitored entity."
      },
      "Event" : {
        "type" : "object",
        "properties" : {
          "frequentEvent" : {
            "type" : "boolean",
            "description" : "If `true`, the event happens [frequently](https://dt-url.net/4da3kdg). \n\n A frequent event doesn't raise a problem."
          },
          "suppressAlert" : {
            "type" : "boolean",
            "description" : "The alerting status during a [maintenance](https://dt-url.net/b2123rg0): \n\n * `false`: Alerting works as usual. \n* `true`: Alerting is disabled."
          },
          "underMaintenance" : {
            "type" : "boolean",
            "description" : "If `true`, the event happened while the monitored system was under maintenance."
          },
          "suppressProblem" : {
            "type" : "boolean",
            "description" : "The problem detection status during a [maintenance](https://dt-url.net/b2123rg0): \n\n * `false`: Problem detection works as usual. \n* `true`: Problem detection is disabled."
          },
          "entityTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of tags of the related entity.",
            "items" : {
              "$ref" : "#/components/schemas/METag"
            }
          },
          "entityId" : {
            "$ref" : "#/components/schemas/EntityStub"
          },
          "managementZones" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of all management zones that the event belongs to.",
            "items" : {
              "$ref" : "#/components/schemas/ManagementZone"
            }
          },
          "eventId" : {
            "type" : "string",
            "description" : "The ID of the event.",
            "example" : "4293884258445543163_1564039524182"
          },
          "eventType" : {
            "type" : "string",
            "description" : "The type of the event.",
            "example" : "LOW_DISK_SPACE"
          },
          "endTime" : {
            "type" : "integer",
            "description" : "The timestamp when the event was closed, in UTC milliseconds. \n\n Has the value of `null` if the event is still active.",
            "format" : "int64",
            "example" : 1564039524182
          },
          "title" : {
            "type" : "string",
            "description" : "The title of the event.",
            "example" : "High CPU load on host X"
          },
          "correlationId" : {
            "type" : "string",
            "description" : "The correlation ID of the event. ",
            "example" : "933613657e1c8fcf"
          },
          "properties" : {
            "type" : "array",
            "description" : "A list of event properties.",
            "items" : {
              "$ref" : "#/components/schemas/EventProperty"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the event.",
            "example" : "OPEN",
            "enum" : [ "CLOSED", "OPEN" ]
          },
          "startTime" : {
            "type" : "integer",
            "description" : "The timestamp when the event was raised, in UTC milliseconds.",
            "format" : "int64",
            "example" : 1564039524182
          }
        },
        "description" : "Configuration of an event."
      },
      "EventProperty" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The value of the event property."
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the event property."
          }
        },
        "description" : "A property of an event."
      },
      "EventPropertiesList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "eventProperties" : {
            "type" : "array",
            "description" : "A list of event properties.",
            "items" : {
              "$ref" : "#/components/schemas/EventPropertyDetails"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          }
        },
        "description" : "A list of event properties."
      },
      "EventPropertyDetails" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the event property.",
            "example" : "Custom description"
          },
          "writable" : {
            "type" : "boolean",
            "description" : "The property can (`true`) or cannot (`false`) be set during event ingestion."
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the event property.",
            "example" : "dt.event.description"
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the event property."
          }
        },
        "description" : "Configuration of an event property."
      },
      "EventType" : {
        "type" : "object",
        "properties" : {
          "severityLevel" : {
            "type" : "string",
            "description" : "The severity level associated with the event type.",
            "example" : "PERFORMANCE",
            "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "INFO", "MONITORING_UNAVAILABLE", "PERFORMANCE", "RESOURCE_CONTENTION" ]
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the event type.",
            "example" : "High CPU"
          },
          "type" : {
            "type" : "string",
            "description" : "The event type.",
            "example" : "OSI_HIGH_CPU"
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the event type."
          }
        },
        "description" : "Configuration of an event type."
      },
      "EventTypeList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "eventTypeInfos" : {
            "type" : "array",
            "description" : "A list of event types.",
            "items" : {
              "$ref" : "#/components/schemas/EventType"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          }
        },
        "description" : "A list of event types."
      },
      "EventList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "warnings" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of warnings.",
            "items" : {
              "type" : "string"
            }
          },
          "events" : {
            "type" : "array",
            "description" : "A list of events.",
            "items" : {
              "$ref" : "#/components/schemas/Event"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          }
        },
        "description" : "A list of events."
      },
      "MetricDefaultAggregation" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "parameter" : {
            "type" : "number",
            "description" : "The percentile to be delivered. Valid values are between `0` and `100`. \n\nApplicable only to the `percentile` aggregation type.",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of default aggregation.",
            "enum" : [ "auto", "avg", "count", "max", "median", "min", "percentile", "sum", "value" ]
          }
        },
        "description" : "The default aggregation of a metric."
      },
      "MetricDescriptor" : {
        "required" : [ "metricId" ],
        "type" : "object",
        "properties" : {
          "dduBillable" : {
            "type" : "boolean",
            "description" : "If `true` the usage of metric consumes [Davis data units](https://dt-url.net/ddu). Deprecated and always `false` for Dynatrace Platform Subscription. Superseded by `isBillable`.\n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field."
          },
          "billable" : {
            "type" : "boolean",
            "description" : "If `true`the usage of metric is billable.\n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field."
          },
          "lastWritten" : {
            "type" : "integer",
            "description" : "The timestamp when the metric was last written. \n\nHas the value of `null` for metric expressions or if the data has never been written.",
            "format" : "int64"
          },
          "impactRelevant" : {
            "type" : "boolean",
            "description" : "The metric is (`true`) or is not (`false`) impact relevant. \n\n An impact-relevant metric is highly dependent on other metrics and changes because an underlying root-cause metric has changed.\n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field."
          },
          "minimumValue" : {
            "type" : "number",
            "description" : "The minimum allowed value of the metric.\n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field.",
            "format" : "double"
          },
          "maximumValue" : {
            "type" : "number",
            "description" : "The maximum allowed value of the metric.\n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field.",
            "format" : "double"
          },
          "latency" : {
            "type" : "integer",
            "description" : "The latency of the metric, in minutes. \n\n The latency is the expected reporting delay (for example, caused by constraints of cloud vendors or other third-party data sources) between the observation of a metric data point and its availability in Dynatrace. \n\nThe allowed value range is from 1 to 60 minutes.\n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field.",
            "format" : "int64"
          },
          "resolutionInfSupported" : {
            "type" : "boolean",
            "description" : "If 'true', resolution=Inf can be applied to the metric query."
          },
          "unitDisplayFormat" : {
            "type" : "string",
            "description" : "The raw value is stored in bits or bytes. The user interface can display it in these numeral systems:\n\nBinary: 1 MiB = 1024 KiB = 1,048,576 bytes\n\nDecimal: 1 MB = 1000 kB = 1,000,000 bytes\n\nIf not set, the decimal system is used.\n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field.",
            "enum" : [ "binary", "decimal" ]
          },
          "dimensionCardinalities" : {
            "type" : "array",
            "description" : "The cardinalities of MINT metric dimensions.",
            "items" : {
              "$ref" : "#/components/schemas/MetricDimensionCardinality"
            }
          },
          "defaultAggregation" : {
            "$ref" : "#/components/schemas/MetricDefaultAggregation"
          },
          "rootCauseRelevant" : {
            "type" : "boolean",
            "description" : "The metric is (`true`) or is not (`false`) root cause relevant. \n\n A root-cause relevant metric represents a strong indicator for a faulty component.\n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field."
          },
          "dimensionDefinitions" : {
            "type" : "array",
            "description" : "The fine metric division (for example, process group and process ID for some process-related metric). \n\nFor [ingested metrics](https://dt-url.net/5d63ic1), dimensions that doesn't have have any data within the last 15 days are omitted. ",
            "items" : {
              "$ref" : "#/components/schemas/MetricDimensionDefinition"
            }
          },
          "entityType" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "List of admissible primary entity types for this metric. Can be used for the `type` predicate in the `entitySelector`.",
            "items" : {
              "type" : "string"
            }
          },
          "metricId" : {
            "type" : "string",
            "description" : "The fully qualified key of the metric. \n\nIf a transformation has been used it is reflected in the metric key."
          },
          "metricSelector" : {
            "type" : "string",
            "description" : "The metric selector that is used when querying a func: metric."
          },
          "scalar" : {
            "type" : "boolean",
            "description" : "Indicates whether the metric expression resolves to a scalar (`true`) or to a series (`false`). \nA scalar result always contains one data point. The amount of data points in a series result depends on the resolution you're using."
          },
          "aggregationTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The list of allowed aggregations for this metric.",
            "items" : {
              "type" : "string",
              "enum" : [ "auto", "avg", "count", "max", "median", "min", "percentile", "sum", "value" ]
            }
          },
          "metricValueType" : {
            "$ref" : "#/components/schemas/MetricValueType"
          },
          "created" : {
            "type" : "integer",
            "description" : "The timestamp of metric creation. \n\nBuilt-in metrics and metric expressions have the value of `null`.",
            "format" : "int64"
          },
          "transformations" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Transform operators that could be appended to the current transformation list.",
            "items" : {
              "type" : "string",
              "enum" : [ "asGauge", "default", "delta", "evaluateModel", "filter", "fold", "last", "lastReal", "limit", "merge", "names", "parents", "partition", "rate", "rollup", "setUnit", "smooth", "sort", "splitBy", "timeshift", "toUnit" ]
            }
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of the metric."
          },
          "warnings" : {
            "type" : "array",
            "description" : "A list of potential warnings that affect this ID. For example deprecated feature usage etc.",
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The tags applied to the metric. \n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field.",
            "items" : {
              "type" : "string",
              "description" : "The tags applied to the metric. \n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field."
            }
          },
          "displayName" : {
            "type" : "string",
            "description" : "The name of the metric in the user interface."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the metric."
          }
        },
        "description" : "The descriptor of a metric.",
        "example" : {
          "metricId" : "builtin:host.cpu.user:splitBy(\"dt.entity.host\"):max:fold",
          "displayName" : "CPU user",
          "description" : "Percentage of user-space CPU time currently utilized, per host.",
          "unit" : "Percent",
          "dduBillable" : false,
          "created" : 1597400123451,
          "lastWritten" : 1597400717783,
          "entityType" : [ "HOST" ],
          "aggregationTypes" : [ "auto", "value" ],
          "transformations" : [ "filter", "fold", "limit", "merge", "names", "parents", "timeshift", "rate", "sort", "last", "splitBy" ],
          "defaultAggregation" : {
            "type" : "value"
          },
          "dimensionDefinitions" : [ {
            "key" : "dt.entity.host",
            "name" : "Host",
            "displayName" : "Host",
            "index" : 0,
            "type" : "ENTITY"
          } ],
          "tags" : [ ],
          "metricValueType" : {
            "type" : "unknown"
          },
          "dimensionCardinalities" : [ {
            "key" : "dt.entity.host",
            "estimate" : 20,
            "relative" : 0.2
          } ],
          "latency" : 1,
          "scalar" : false
        }
      },
      "MetricDimensionCardinality" : {
        "required" : [ "estimate", "key", "relative" ],
        "type" : "object",
        "properties" : {
          "relative" : {
            "type" : "number",
            "description" : "The relative cardinality of the dimension expressed as percentage",
            "format" : "double"
          },
          "estimate" : {
            "type" : "integer",
            "description" : "The cardinality estimate of the dimension.",
            "format" : "int64"
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the dimension. \n\n It must be unique within the metric."
          }
        },
        "description" : "The dimension cardinalities of a metric."
      },
      "MetricDimensionDefinition" : {
        "required" : [ "displayName", "index", "key", "name", "type" ],
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the dimension."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the dimension."
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the dimension. \n\n It must be unique within the metric."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the dimension.",
            "enum" : [ "ENTITY", "NUMBER", "OTHER", "STRING", "VOID" ]
          },
          "index" : {
            "type" : "integer",
            "description" : "The unique 0-based index of the dimension. \n\n Appending transformations such as :names or :parents may change the indexes of dimensions. `null` is used for the dimensions of a metric with flexible dimensions, which can be referenced with their dimension key, but do not have an intrinsic order that could be used for the index.",
            "format" : "int32"
          }
        },
        "description" : "The dimension of a metric."
      },
      "MetricValueType" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The metric value type",
            "enum" : [ "error", "score", "unknown" ]
          }
        },
        "description" : "The value type for the metric."
      },
      "MetricDescriptorCollection" : {
        "required" : [ "metrics", "totalCount" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "The estimated number of metrics in the result.",
            "format" : "int64"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "nullable" : true
          },
          "warnings" : {
            "type" : "array",
            "description" : "A list of potential warnings about the query. For example deprecated feature usage etc.",
            "items" : {
              "type" : "string"
            }
          },
          "metrics" : {
            "type" : "array",
            "description" : "A list of metric along with their descriptors",
            "items" : {
              "$ref" : "#/components/schemas/MetricDescriptor"
            }
          }
        },
        "description" : "A list of metrics along with their descriptors.",
        "example" : {
          "totalCount" : 3,
          "nextPageKey" : "ABCDEFABCDEFABCDEF_",
          "metrics" : [ {
            "metricId" : "builtin:host.cpu.user:splitBy(\"dt.entity.host\"):max:fold",
            "displayName" : "CPU user",
            "description" : "Percentage of user-space CPU time currently utilized, per host.",
            "unit" : "Percent",
            "dduBillable" : false,
            "created" : 1597400123451,
            "lastWritten" : 1597400717783,
            "entityType" : [ "HOST" ],
            "aggregationTypes" : [ "auto", "value" ],
            "transformations" : [ "filter", "fold", "limit", "merge", "names", "parents", "timeshift", "rate", "sort", "last", "splitBy" ],
            "defaultAggregation" : {
              "type" : "value"
            },
            "dimensionDefinitions" : [ {
              "key" : "dt.entity.host",
              "name" : "Host",
              "displayName" : "Host",
              "index" : 0,
              "type" : "ENTITY"
            } ],
            "tags" : [ ],
            "metricValueType" : {
              "type" : "unknown"
            }
          }, {
            "metricId" : "builtin:host.cpu.user:splitBy()",
            "displayName" : "CPU user",
            "description" : "Percentage of user-space CPU time currently utilized, per host.",
            "unit" : "Percent",
            "dduBillable" : false,
            "created" : 1597400123451,
            "lastWritten" : 1597400717783,
            "entityType" : [ "HOST" ],
            "aggregationTypes" : [ "auto", "value" ],
            "transformations" : [ "filter", "fold", "limit", "merge", "names", "parents", "timeshift", "rate", "sort", "last", "splitBy" ],
            "defaultAggregation" : {
              "type" : "value"
            },
            "dimensionDefinitions" : [ {
              "key" : "dt.entity.host",
              "name" : "Host",
              "displayName" : "Host",
              "index" : 0,
              "type" : "ENTITY"
            } ],
            "tags" : [ ],
            "metricValueType" : {
              "type" : "unknown"
            }
          } ]
        }
      },
      "AppliedFilter" : {
        "required" : [ "appliedTo" ],
        "type" : "object",
        "properties" : {
          "appliedTo" : {
            "type" : "array",
            "description" : "The keys of all metrics that this filter has been applied to. \n\nCan contain multiple metrics for complex expressions and always at least one key.",
            "items" : {
              "type" : "string",
              "description" : "The keys of all metrics that this filter has been applied to. \n\nCan contain multiple metrics for complex expressions and always at least one key."
            }
          },
          "filter" : {
            "$ref" : "#/components/schemas/Filter"
          }
        },
        "description" : "Optional filters that took effect."
      },
      "Filter" : {
        "type" : "object",
        "properties" : {
          "referenceInvocation" : {
            "$ref" : "#/components/schemas/Invocation"
          },
          "targetDimension" : {
            "type" : "string",
            "description" : "If the type applies to a dimension, then holds the target dimension."
          },
          "targetDimensions" : {
            "type" : "array",
            "description" : "If the type applies to n dimensions, then holds the target dimensions. Currently only used for the `remainder` filter.",
            "items" : {
              "type" : "string",
              "description" : "If the type applies to n dimensions, then holds the target dimensions. Currently only used for the `remainder` filter."
            }
          },
          "referenceString" : {
            "type" : "string",
            "description" : "For filters that match a dimension against a valkue, such as `eq` or `ne`, holds the value to compare the dimension against."
          },
          "rollup" : {
            "$ref" : "#/components/schemas/Rollup"
          },
          "referenceValue" : {
            "type" : "number",
            "description" : "For the operands of `series` filters that match against a number, holds the number to compare against."
          },
          "operands" : {
            "type" : "array",
            "description" : "If the type is `not`, `and` or `or`, then holds the contained filters.",
            "items" : {
              "$ref" : "#/components/schemas/Filter"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "Type of this filter, determines which other fields are present.Can be any of: \n* `eq`,\n* `ne`,\n* `prefix`,\n* `in`,\n* `remainder`,\n* `suffix`,\n* `contains`,\n* `existsKey`,\n* `series`,\n* `or`,\n* `and`,\n* `not`,\n* `ge`,\n* `gt`,\n* `le`,\n* `lt`,\n* `otherwise`.",
            "enum" : [ "and", "contains", "eq", "existsKey", "ge", "gt", "in", "le", "lt", "ne", "not", "or", "otherwise", "prefix", "remainder", "series", "suffix" ]
          }
        },
        "description" : "A dimensional or series filter on a metric."
      },
      "Invocation" : {
        "type" : "object",
        "properties" : {
          "function" : {
            "type" : "string",
            "description" : "Function that is invoked, e.g. `entitySelector`."
          },
          "args" : {
            "type" : "array",
            "description" : "Arguments to pass to the function, e.g. entity selector source code.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Invocation of a function, e.g. the `entitySelector` function."
      },
      "MetricData" : {
        "required" : [ "resolution", "result", "totalCount", "warnings" ],
        "type" : "object",
        "properties" : {
          "resolution" : {
            "type" : "string",
            "description" : "The timeslot resolution in the result."
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of primary entities in the result. \n\nHas the `0` value if none of the requested metrics is suitable for pagination.",
            "format" : "int64"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "Deprecated. This field is returned for compatibility reasons. It always has the value of `null`."
          },
          "warnings" : {
            "type" : "array",
            "description" : "A list of warnings",
            "items" : {
              "type" : "string"
            }
          },
          "result" : {
            "type" : "array",
            "description" : "A list of metrics and their data points.",
            "items" : {
              "$ref" : "#/components/schemas/MetricSeriesCollection"
            }
          }
        },
        "description" : "A list of metrics and their data points.",
        "example" : {
          "totalCount" : 3,
          "nextPageKey" : "null",
          "resolution" : "1h",
          "warnings" : [ "The dimension key `dt.entityhost` has been referenced, but the metric has no such key." ],
          "result" : [ {
            "metricId" : "builtin:host.disk.avail",
            "dataPointCountRatio" : "0.1211",
            "dimensionCountRatio" : "0.0322",
            "data" : [ {
              "dimensionMap" : {
                "dt.entity.disk" : "DISK-F1266E1D0AAC2C3F",
                "dt.entity.host" : "HOST-F1266E1D0AAC2C3C"
              },
              "dimensions" : [ "HOST-F1266E1D0AAC2C3C", "DISK-F1266E1D0AAC2C3F" ],
              "timestamps" : [ 3151435100000, 3151438700000, 3151442300000 ],
              "values" : [ 11.1, 22.2, 33.3 ]
            }, {
              "dimensions" : [ "HOST-F1266E1D0AAC2C3C", "DISK-F1266E1D0AAC2C3D" ],
              "timestamps" : [ 3151435100000, 3151438700000, 3151442300000 ],
              "values" : [ 111.1, 222.2, 333.3 ]
            } ]
          }, {
            "metricId" : "builtin:host.cpu.idle:filter(eq(\"dt.entityhost\",HOST-123))",
            "data" : [ ],
            "warnings" : [ "The dimension key `dt.entityhost` has been referenced, but the metric has no such key." ]
          } ]
        }
      },
      "MetricSeries" : {
        "required" : [ "dimensionMap", "dimensions", "timestamps", "values" ],
        "type" : "object",
        "properties" : {
          "dimensionMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "timestamps" : {
            "type" : "array",
            "description" : "A list of timestamps of data points. \n\nThe value of data point for each time from this array is located in **values** array at the same index.",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "values" : {
            "type" : "array",
            "description" : "A list of values of data points. \n\nThe timestamp of data point for each value from this array is located in **timestamps** array at the same index.",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "dimensions" : {
            "type" : "array",
            "description" : "The ordered list of dimensions to which the data point list belongs. \n\n Each metric can have a certain number of dimensions. Dimensions exceeding this number are aggregated into one, which is shown as `null` here.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Data points per dimension of a metric. \n\nThe data is represented by two arrays of the same length: **timestamps** and **values**. Entries of the same index from both arrays form a timestamped data point.",
        "example" : {
          "dimensionMap" : {
            "dt.entity.host" : "HOST-F1266E1D0AAC2C3C"
          },
          "dimensions" : [ "HOST-F1266E1D0AAC2C3C" ],
          "timestamps" : [ 3151435100000, 3151438700000, 3151442300000 ],
          "values" : [ 1.1, 2.2, 3.3 ]
        }
      },
      "MetricSeriesCollection" : {
        "required" : [ "data", "dataPointCountRatio", "dimensionCountRatio", "metricId" ],
        "type" : "object",
        "properties" : {
          "dataPointCountRatio" : {
            "type" : "number",
            "description" : "The ratio of queried data points divided by the maximum number of data points per metric that are allowed in a single query.",
            "format" : "float"
          },
          "dimensionCountRatio" : {
            "type" : "number",
            "description" : "The ratio of queried dimension tuples divided by the maximum number of dimension tuples allowed in a single query.",
            "format" : "float"
          },
          "appliedOptionalFilters" : {
            "type" : "array",
            "description" : "A list of filtered metric keys along with filters that have been applied to these keys, from the `optionalFilter` parameter.",
            "items" : {
              "$ref" : "#/components/schemas/AppliedFilter"
            }
          },
          "metricId" : {
            "type" : "string",
            "description" : "The key of the metric. \n\nIf any transformation is applied, it is included here."
          },
          "warnings" : {
            "type" : "array",
            "description" : "A list of potential warnings that affect this ID. For example deprecated feature usage etc.",
            "items" : {
              "type" : "string"
            }
          },
          "data" : {
            "type" : "array",
            "description" : "Data points of the metric.",
            "items" : {
              "$ref" : "#/components/schemas/MetricSeries"
            }
          }
        },
        "description" : "Data points of a metric.",
        "example" : {
          "metricId" : "builtin:host.disk.avail",
          "dataPointCountRatio" : "0.1211",
          "dimensionCountRatio" : "0.0322",
          "data" : [ {
            "dimensionMap" : {
              "dt.entity.disk" : "DISK-F1266E1D0AAC2C3F",
              "dt.entity.host" : "HOST-F1266E1D0AAC2C3C"
            },
            "dimensions" : [ "HOST-F1266E1D0AAC2C3C", "DISK-F1266E1D0AAC2C3F" ],
            "timestamps" : [ 3151435100000, 3151438700000, 3151442300000 ],
            "values" : [ 11.1, 22.2, 33.3 ]
          }, {
            "dimensionMap" : {
              "dt.entity.host" : "HOST-F1266E1D0AAC2C3C",
              "dt.entity.disk" : "DISK-F1266E1D0AAC2C3D"
            },
            "dimensions" : [ "HOST-F1266E1D0AAC2C3C", "DISK-F1266E1D0AAC2C3D" ],
            "timestamps" : [ 3151435100000, 3151438700000, 3151442300000 ],
            "values" : [ 111.1, 222.2, 333.3 ]
          } ]
        }
      },
      "Rollup" : {
        "type" : "object",
        "properties" : {
          "parameter" : {
            "type" : "number"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "AUTO", "AVG", "COUNT", "MAX", "MEDIAN", "MIN", "PERCENTILE", "SUM", "VALUE" ]
          }
        },
        "description" : "A way of viewing a series as a single value for the purpose of sorting or series-based filters."
      },
      "EntityShortRepresentation" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the Dynatrace entity."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Dynatrace entity.",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the Dynatrace entity.",
            "readOnly" : true
          }
        },
        "description" : "The short representation of a Dynatrace entity.",
        "example" : {
          "id" : "6a98d7bc-abb9-44f8-ae6a-73e68e71812a",
          "name" : "Dynatrace entity",
          "description" : "Dynatrace entity for the REST API example"
        }
      },
      "NetworkZone" : {
        "type" : "object",
        "properties" : {
          "numOfOneAgentsUsing" : {
            "type" : "integer",
            "description" : "The number of OneAgents that are using ActiveGates in the network zone.",
            "format" : "int32",
            "readOnly" : true
          },
          "numOfConfiguredOneAgents" : {
            "type" : "integer",
            "description" : "The number of OneAgents that are configured to use the network zone as primary.",
            "format" : "int32",
            "readOnly" : true
          },
          "numOfOneAgentsFromOtherZones" : {
            "type" : "integer",
            "description" : "The number of OneAgents from other network zones that are using ActiveGates in the network zone. \n\n This is a fraction of **numOfOneAgentsUsing**. \n\nOne possible reason for switching to another zone is that a firewall is preventing a OneAgent from connecting to any ActiveGate in the preferred network zone.\n\n",
            "format" : "int32",
            "readOnly" : true
          },
          "numOfConfiguredActiveGates" : {
            "type" : "integer",
            "description" : "The number of ActiveGates in the network zone.",
            "format" : "int32",
            "readOnly" : true
          },
          "overridesGlobal" : {
            "type" : "boolean",
            "description" : "Indicates if a global network zone is overridden (managed only).",
            "readOnly" : true
          },
          "alternativeZones" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of alternative network zones.",
            "items" : {
              "type" : "string"
            }
          },
          "fallbackMode" : {
            "type" : "string",
            "description" : "The fallback mode of the network zone.",
            "enum" : [ "ANY_ACTIVE_GATE", "NONE", "ONLY_DEFAULT_ZONE" ]
          },
          "scope" : {
            "type" : "string",
            "description" : "Specifies the scope of the network zone (managed only).",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the network zone.",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the network zone."
          }
        },
        "description" : "Configuration of a network zone."
      },
      "NetworkZoneList" : {
        "required" : [ "networkZones" ],
        "type" : "object",
        "properties" : {
          "networkZones" : {
            "type" : "array",
            "description" : "A list of network zones.",
            "items" : {
              "$ref" : "#/components/schemas/NetworkZone"
            }
          }
        },
        "description" : "A list of network zones."
      },
      "NetworkZoneConnectionStatistics" : {
        "type" : "object",
        "properties" : {
          "hostsConnectedAsAlternative" : {
            "type" : "array",
            "description" : "Hosts that use the network zone as an alternative.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "hostsConnectedAsFailoverWithoutActiveGates" : {
            "type" : "array",
            "description" : "Hosts from other zones that use the zone (not configured as an alternative) and **no** ActiveGates of higher priority are available.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "hostsConnectedAsFailover" : {
            "type" : "array",
            "description" : "Hosts from other zones that use the zone (not configured as an alternative) even though ActiveGates of higher priority are available.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "hostsConfiguredButNotConnected" : {
            "type" : "array",
            "description" : "Hosts from the network zone that use other zones.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Runtime information about host connections."
      },
      "NetworkZoneSettings" : {
        "type" : "object",
        "properties" : {
          "networkZonesEnabled" : {
            "type" : "boolean",
            "description" : "Network zones feature is enabled (`true`) or disabled (`false`)."
          }
        },
        "description" : "Global network zone configuration."
      },
      "RemoteConfigurationManagementOperationOneAgentRequest" : {
        "required" : [ "entities", "operations" ],
        "type" : "object",
        "properties" : {
          "entities" : {
            "type" : "array",
            "description" : "A list of entities IDs for which remote configuration management is to be executed.",
            "example" : [ "HOST-D454A967666E7970", "HOST-811760CFF2A5E872" ],
            "items" : {
              "type" : "string"
            }
          },
          "operations" : {
            "type" : "array",
            "description" : "A list of remote configuration management operations to be executed.",
            "items" : {
              "$ref" : "#/components/schemas/RemoteConfigurationManagementOperation"
            }
          }
        },
        "description" : "Remote configuration management operation creation request."
      },
      "DeletedEntityTags" : {
        "type" : "object",
        "properties" : {
          "matchedEntitiesCount" : {
            "type" : "integer",
            "description" : "The number of monitored entities where the tag has been deleted.",
            "format" : "int64"
          }
        },
        "description" : "Deleted custom tag.",
        "example" : {
          "matchedEntitiesCount" : 2
        }
      },
      "CustomEntityTags" : {
        "required" : [ "tags" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of tags in the response.",
            "format" : "int64"
          },
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "description" : "A list of custom tags.",
            "items" : {
              "$ref" : "#/components/schemas/METag"
            }
          }
        },
        "description" : "A list of custom tags.",
        "example" : {
          "totalCount" : 2,
          "tags" : [ {
            "context" : "CONTEXTLESS",
            "key" : "mainApp",
            "stringRepresentation" : "mainApp"
          }, {
            "context" : "CONTEXTLESS",
            "key" : "bookings",
            "stringRepresentation" : "bookings"
          } ]
        }
      },
      "AddedEntityTags" : {
        "type" : "object",
        "properties" : {
          "appliedTags" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "description" : "A list of added custom tags.",
            "items" : {
              "$ref" : "#/components/schemas/METag"
            }
          },
          "matchedEntitiesCount" : {
            "type" : "integer",
            "description" : "The number of monitored entities where the tags have been added.",
            "format" : "int64"
          }
        },
        "description" : "A list of custom tags added to monitored entities.",
        "example" : {
          "appliedTags" : [ {
            "context" : "CONTEXTLESS",
            "key" : "mainApp",
            "stringRepresentation" : "mainApp"
          }, {
            "context" : "CONTEXTLESS",
            "key" : "booking",
            "stringRepresentation" : "booking"
          } ],
          "matchedEntitiesCount" : 2
        }
      },
      "AddEntityTag" : {
        "required" : [ "key" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The value of the custom tag to be added to monitored entities. May be null"
          },
          "key" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The key of the custom tag to be added to monitored entities."
          }
        },
        "description" : "The custom tag to be added to monitored entities."
      },
      "AddEntityTags" : {
        "required" : [ "tags" ],
        "type" : "object",
        "properties" : {
          "tags" : {
            "maxItems" : 1000,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of tags to be added to monitored entities.",
            "items" : {
              "$ref" : "#/components/schemas/AddEntityTag"
            }
          }
        },
        "description" : "A list of tags to be added to monitored entities.",
        "example" : {
          "tags" : [ {
            "key" : "mainApp"
          }, {
            "key" : "bookings",
            "value" : "42"
          } ]
        }
      },
      "Success" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "The HTTP status code",
            "format" : "int32"
          },
          "message" : {
            "type" : "string",
            "description" : "Detailed message"
          }
        }
      },
      "SuccessEnvelope" : {
        "type" : "object",
        "properties" : {
          "details" : {
            "$ref" : "#/components/schemas/Success"
          }
        }
      },
      "LogMessageJson" : {
        "type" : "object",
        "description" : "The log message in JSON format. Use one object representing a single event or an array of objects representing multiple events. \n\nThe object might contain the following types of case-insensitive keys (the possible key values are listed below): \n\n* Timestamp: \n    * The earliest timestamp for a log event is the current time minus 24 hours. If the log event contains a timestamp earlier than the current time minus 24 hours, the event is dropped. \n    * The timestamp for a log event is not limited to future time. If the log event contains a timestamp later than 10 minutes in the future, the timestamp of the event will be overridden by the current time on the server. \n    * The following formats are supported: UTC milliseconds, RFC3339, and RFC3164. For the missing timestamp, the current timestamp is used. For the unsupported timestamp format, the current timestamp is used, and the value of the unsupported timestamp format is stored in the not indexed `unparsed_timestamp` attribute. \n* Severity. If not set, `NONE` is used. \n* Content. If the content key is not set, the whole JSON is parsed as the content. \n* Semantic attribute. Only values of the `String` type are supported. Semantic attributes are indexed and can be used in queries. These are also displayed in aggregations (facets). If an unsupported key occurs, it is not indexed and can't be used in indexing and aggregations. \n* Automatic attribute. The dt.auth.origin attribute is automatically added to every log record ingested via API. This attribute is the public part of the API key that the log source authorizes to connect to the generic log ingest API. \n\nThe object value can be a single constant or, in case of semantic attribute, an array of constants. The length of the value is limited. Any content exceeding the limit is trimmed. Default limits:\n\n* Attributes: up to 50 attributes. \n* Content: Grail tenants: 65,536 bytes, other tenants: 8,192 bytes. \n* Semantic attribute: 250 bytes per value, up to 32 attribute values. \n* The maximum payload size of a single request is 5 MB. \n* 50000 log events per payload.\n\nSupported timestamp keys:\n * @timestamp\n * _timestamp\n * date\n * eventtime\n * published_date\n * syslog.timestamp\n * timestamp\n\nSupported content keys:\n * body\n * content\n * message\n * payload\n\nSupported severity keys:\n * level\n * loglevel\n * severity\n * status\n * syslog.severity\n\nSupported semantic attribute keys:\n * audit.action\n * audit.identity\n * audit.result\n * aws.account.id\n * aws.arn\n * aws.log_group\n * aws.log_stream\n * aws.region\n * aws.resource.id\n * aws.resource.type\n * aws.service\n * azure.location\n * azure.resource.group\n * azure.resource.id\n * azure.resource.name\n * azure.resource.type\n * azure.subscription\n * cloud.account.id\n * cloud.availability_zone\n * cloud.provider\n * cloud.region\n * container.image.name\n * container.image.tag\n * container.name\n * db.cassandra.keyspace\n * db.connection_string\n * db.hbase.namespace\n * db.jdbc.driver_classname\n * db.mongodb.collection\n * db.mssql.instance_name\n * db.name\n * db.operation\n * db.redis.database_index\n * db.statement\n * db.system\n * db.user\n * device.address\n * dt.active_gate.group.name\n * dt.active_gate.id\n * dt.code.filepath\n * dt.code.func\n * dt.code.lineno\n * dt.code.ns\n * dt.ctg.calltype\n * dt.ctg.extendmode\n * dt.ctg.gatewayurl\n * dt.ctg.program\n * dt.ctg.rc\n * dt.ctg.requesttype\n * dt.ctg.serverid\n * dt.ctg.termid\n * dt.ctg.transid\n * dt.ctg.userid\n * dt.entity.cloud_application\n * dt.entity.cloud_application_instance\n * dt.entity.cloud_application_namespace\n * dt.entity.container_group\n * dt.entity.container_group_instance\n * dt.entity.custom_device\n * dt.entity.host\n * dt.entity.kubernetes_cluster\n * dt.entity.kubernetes_node\n * dt.entity.process_group\n * dt.entity.process_group_instance\n * dt.event.group_label\n * dt.event.key\n * dt.events.root_cause_relevant\n * dt.exception.messages\n * dt.exception.serialized_stacktraces\n * dt.exception.types\n * dt.extension.config.id\n * dt.extension.ds\n * dt.extension.name\n * dt.extension.status\n * dt.host.ip\n * dt.host.smfid\n * dt.host.snaid\n * dt.host_group.id\n * dt.http.application_id\n * dt.http.context_root\n * dt.kubernetes.cluster.id\n * dt.kubernetes.cluster.name\n * dt.kubernetes.config.id\n * dt.kubernetes.event.involved_object.kind\n * dt.kubernetes.event.involved_object.name\n * dt.kubernetes.event.reason\n * dt.kubernetes.node.name\n * dt.kubernetes.node.system_uuid\n * dt.kubernetes.topmost_controller.kind\n * dt.kubernetes.workload.kind\n * dt.kubernetes.workload.name\n * dt.network_zone.id\n * dt.os.description\n * dt.os.type\n * dt.process.commandline\n * dt.process.executable\n * dt.process.name\n * dt.security_context\n * dt.source_entity\n * dt.source_entity_name\n * dt.source_entity_type\n * event.unique_identifier\n * faas.id\n * faas.instance\n * faas.name\n * faas.version\n * gcp.instance.id\n * gcp.instance.name\n * gcp.project.id\n * gcp.region\n * gcp.resource.type\n * geo.city_name\n * geo.country_name\n * geo.name\n * geo.region_name\n * host.hostname\n * host.id\n * host.image.id\n * host.image.name\n * host.image.version\n * host.name\n * host.type\n * http.client_ip\n * http.flavor\n * http.host\n * http.method\n * http.route\n * http.scheme\n * http.server_name\n * http.status_code\n * http.status_text\n * http.target\n * http.url\n * k8s.cluster.name\n * k8s.container.name\n * k8s.cronjob.name\n * k8s.cronjob.uid\n * k8s.daemonset.name\n * k8s.daemonset.uid\n * k8s.deployment.name\n * k8s.deployment.uid\n * k8s.job.name\n * k8s.job.uid\n * k8s.namespace.name\n * k8s.pod.name\n * k8s.pod.uid\n * k8s.replicaset.name\n * k8s.replicaset.uid\n * k8s.statefulset.name\n * k8s.statefulset.uid\n * log.source\n * net.host.ip\n * net.host.name\n * net.host.port\n * net.peer.ip\n * net.peer.name\n * net.peer.port\n * net.transport\n * process.technology\n * service.instance.id\n * service.name\n * service.namespace\n * service.version\n * snmp.trap_oid\n * span_id\n * trace_id\n * winlog.eventid\n * winlog.level\n * winlog.opcode\n * winlog.provider\n * winlog.task"
      },
      "LogMessagePlain" : {
        "type" : "object",
        "description" : "The log message in plain text. \n\nThe length of the message is limited to 8,192 bytes. Any content exceeding the limit is trimmed."
      },
      "InvalidLine" : {
        "type" : "object",
        "properties" : {
          "line" : {
            "type" : "integer",
            "format" : "int32"
          },
          "error" : {
            "type" : "string"
          }
        }
      },
      "MetricIngestError" : {
        "type" : "object",
        "properties" : {
          "invalidLines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InvalidLine"
            }
          },
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "ValidationResponse" : {
        "type" : "object",
        "properties" : {
          "linesOk" : {
            "type" : "integer",
            "format" : "int32"
          },
          "linesInvalid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "warnings" : {
            "$ref" : "#/components/schemas/Warnings"
          },
          "error" : {
            "$ref" : "#/components/schemas/MetricIngestError"
          }
        }
      },
      "WarningLine" : {
        "type" : "object",
        "properties" : {
          "line" : {
            "type" : "integer",
            "format" : "int32"
          },
          "warning" : {
            "type" : "string"
          }
        }
      },
      "Warnings" : {
        "type" : "object",
        "properties" : {
          "changedMetricKeys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WarningLine"
            }
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "ActiveGateTokenCreated" : {
        "required" : [ "id", "token" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/rn00tjg) of the token.",
            "example" : "dt0g02.4KWZO5EF"
          },
          "token" : {
            "type" : "string",
            "description" : "The secret of the token.",
            "example" : "dt0g02.4KWZO5EF.XT47R5DRADJIZUFOX4UDNOKTSUSABGLN7XSMJG7UXHRXKNY4WLORH4OF4T75MG7E"
          },
          "expirationDate" : {
            "type" : "string",
            "description" : "The token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).",
            "example" : "2020-11-24T08:15:30.144Z"
          }
        },
        "description" : "The newly created ActiveGate token."
      },
      "ActiveGateTokenCreate" : {
        "required" : [ "activeGateType", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the token.",
            "example" : "myToken"
          },
          "expirationDate" : {
            "type" : "string",
            "description" : "The expiration date of the token. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the token never expires.",
            "example" : "now+14d"
          },
          "seedToken" : {
            "type" : "boolean",
            "description" : "The token is a seed token (`true`) or an individual token (`false`). \n\n We recommend the individual token option (false).",
            "example" : false
          },
          "activeGateType" : {
            "type" : "string",
            "description" : "The type of the ActiveGate for which the token is valid.",
            "enum" : [ "ENVIRONMENT", "CLUSTER" ]
          }
        },
        "description" : "Parameters of a new ActiveGate token."
      },
      "ActiveGateToken" : {
        "required" : [ "activeGateType", "creationDate", "id", "name", "owner" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/rn00tjg) of the token.",
            "example" : "dt0g02.4KWZO5EF"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the token.",
            "example" : "myToken"
          },
          "owner" : {
            "type" : "string",
            "description" : "The owner of the token.",
            "example" : "john.smith"
          },
          "creationDate" : {
            "type" : "string",
            "description" : "The token creation date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).",
            "example" : "2020-11-22T08:15:30.144Z"
          },
          "expirationDate" : {
            "type" : "string",
            "description" : "The token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`). \n\n If not set, the token never expires.",
            "example" : "2020-11-24T08:15:30.144Z"
          },
          "lastUsedDate" : {
            "type" : "string",
            "description" : "The token last used date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).",
            "example" : "2020-11-23T08:15:30.144Z"
          },
          "seedToken" : {
            "type" : "boolean",
            "description" : "The token is a seed token (`true`) or an individual token (`false`).",
            "example" : false
          },
          "activeGateType" : {
            "type" : "string",
            "description" : "The type of the ActiveGate for which the token is valid.",
            "enum" : [ "ENVIRONMENT", "CLUSTER" ]
          }
        },
        "description" : "Metadata of an ActiveGate token."
      },
      "ActiveGateTokenList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "activeGateTokens" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "description" : "A list of ActiveGate tokens.",
            "items" : {
              "$ref" : "#/components/schemas/ActiveGateToken"
            }
          }
        },
        "description" : "A list of ActiveGate tokens.",
        "example" : {
          "totalCount" : 1000,
          "pageSize" : 100,
          "nextPageKey" : "AAAAAAAAAAAAAABOAAAAAAAAAAAAAAA6ACQAEAAAABgACgAITFdXQk1BRzYAAAhtZXRhZGF0YQB___-bf___m3iIYxfF7xVQvY72rwblQkcAAwAAAAAAAADHAAAAZA==",
          "activeGateTokens" : {
            "id" : "dt0g02.4KWZO5EF",
            "name" : "myToken",
            "owner" : "john.smith",
            "creationDate" : "2020-11-22T08:15:30.144Z",
            "expirationDate" : "2020-11-24T08:15:30.144Z",
            "lastUsedDate" : "2020-11-23T08:15:30.144Z",
            "seedToken" : "false",
            "activeGateType" : "ENVIRONMENT"
          }
        }
      },
      "ApiTokenCreated" : {
        "type" : "object",
        "properties" : {
          "expirationDate" : {
            "type" : "string",
            "description" : "The token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).",
            "example" : "2020-11-12T08:15:30.144Z"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the token, consisting of prefix and public part of the token.",
            "example" : "dt0c01.ST2EY72KQINMH574WMNVI7YN"
          },
          "token" : {
            "type" : "string",
            "description" : "The secret of the token.",
            "example" : "dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM"
          }
        },
        "description" : "The newly created token."
      },
      "ApiTokenCreate" : {
        "required" : [ "name", "scopes" ],
        "type" : "object",
        "properties" : {
          "personalAccessToken" : {
            "type" : "boolean",
            "description" : "The token is a personal access token (`true`) or an API token (`false`). \n\n Personal access tokens are tied to the permissions of their owner.",
            "example" : false
          },
          "expirationDate" : {
            "type" : "string",
            "description" : "The expiration date of the token. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the token never expires.",
            "example" : "now+14d"
          },
          "scopes" : {
            "type" : "array",
            "description" : "A list of the scopes to be assigned to the token.\n\n* `InstallerDownload`: PaaS integration - Installer download. \n* `DataExport`: Access problem and event feed, metrics, and topology. \n* `PluginUpload`: Upload Extension. \n* `SupportAlert`: PaaS integration - Support alert. \n* `AdvancedSyntheticIntegration`: Dynatrace module integration - Synthetic Classic. \n* `ExternalSyntheticIntegration`: Create and read synthetic monitors, locations, and nodes. \n* `RumBrowserExtension`: RUM Browser Extension. \n* `LogExport`: Read logs. \n* `ReadConfig`: Read configuration. \n* `WriteConfig`: Write configuration. \n* `DTAQLAccess`: User sessions. \n* `UserSessionAnonymization`: Anonymize user session data for data privacy reasons. \n* `DataPrivacy`: Change data privacy settings. \n* `CaptureRequestData`: Capture request data. \n* `Davis`: Dynatrace module integration - Davis. \n* `DssFileManagement`: Mobile symbolication file management. \n* `RumJavaScriptTagManagement`: Real user monitoring JavaScript tag management. \n* `TenantTokenManagement`: Token management. \n* `ActiveGateCertManagement`: ActiveGate certificate management. \n* `RestRequestForwarding`: Fetch data from a remote environment. \n* `ReadSyntheticData`: Read synthetic monitors, locations, and nodes. \n* `DataImport`: Data ingest, e.g.: metrics and events. \n* `syntheticExecutions.write`: Write synthetic monitor executions. \n* `syntheticExecutions.read`: Read synthetic monitor execution results. \n* `auditLogs.read`: Read audit logs. \n* `metrics.read`: Read metrics. \n* `metrics.write`: Write metrics. \n* `entities.read`: Read entities. \n* `entities.write`: Write entities. \n* `problems.read`: Read problems. \n* `problems.write`: Write problems. \n* `events.read`: Read events. \n* `events.ingest`: Ingest events. \n* `analyzers.read`: Read analyzers. \n* `analyzers.write`: Write & execute analyzers. \n* `networkZones.read`: Read network zones. \n* `networkZones.write`: Write network zones. \n* `activeGates.read`: Read ActiveGates. \n* `activeGates.write`: Write ActiveGates. \n* `activeGateTokenManagement.read`: Read ActiveGate tokens. \n* `activeGateTokenManagement.create`: Create ActiveGate tokens. \n* `activeGateTokenManagement.write`: Write ActiveGate tokens. \n* `credentialVault.read`: Read credential vault entries. \n* `credentialVault.write`: Write credential vault entries. \n* `extensions.read`: Read extensions. \n* `extensions.write`: Write extensions. \n* `extensionConfigurations.read`: Read extension monitoring configurations. \n* `extensionConfigurations.write`: Write extension monitoring configurations. \n* `extensionEnvironment.read`: Read extension environment configurations. \n* `extensionEnvironment.write`: Write extension environment configurations. \n* `metrics.ingest`: Ingest metrics. \n* `attacks.read`: Read attacks. \n* `attacks.write`: Write Application Protection settings. \n* `securityProblems.read`: Read security problems. \n* `securityProblems.write`: Write security problems. \n* `syntheticLocations.read`: Read synthetic locations. \n* `syntheticLocations.write`: Write synthetic locations. \n* `settings.read`: Read settings. \n* `settings.write`: Write settings. \n* `tenantTokenRotation.write`: Tenant token rotation. \n* `slo.read`: Read SLO. \n* `slo.write`: Write SLO. \n* `releases.read`: Read releases. \n* `apiTokens.read`: Read API tokens. \n* `apiTokens.write`: Write API tokens. \n* `openTelemetryTrace.ingest`: Ingest OpenTelemetry traces. \n* `logs.read`: Read logs. \n* `logs.ingest`: Ingest logs. \n* `geographicRegions.read`: Read Geographic regions. \n* `oneAgents.read`: Read OneAgents. \n* `oneAgents.write`: Write OneAgents. \n* `traces.lookup`: Look up a single trace. \n* `hub.read`: Read Hub related data. \n* `hub.write`: Manage metadata of Hub items. \n* `hub.install`: Install and update Hub items. \n* `javaScriptMappingFiles.read`: Read JavaScript mapping files. \n* `javaScriptMappingFiles.write`: Write JavaScript mapping files. \n",
            "items" : {
              "type" : "string",
              "example" : "metrics.read",
              "enum" : [ "InstallerDownload", "DataExport", "PluginUpload", "SupportAlert", "AdvancedSyntheticIntegration", "ExternalSyntheticIntegration", "RumBrowserExtension", "LogExport", "ReadConfig", "WriteConfig", "DTAQLAccess", "UserSessionAnonymization", "DataPrivacy", "CaptureRequestData", "Davis", "DssFileManagement", "RumJavaScriptTagManagement", "TenantTokenManagement", "ActiveGateCertManagement", "RestRequestForwarding", "ReadSyntheticData", "DataImport", "syntheticExecutions.write", "syntheticExecutions.read", "auditLogs.read", "metrics.read", "metrics.write", "entities.read", "entities.write", "problems.read", "problems.write", "events.read", "events.ingest", "analyzers.read", "analyzers.write", "networkZones.read", "networkZones.write", "activeGates.read", "activeGates.write", "activeGateTokenManagement.read", "activeGateTokenManagement.create", "activeGateTokenManagement.write", "credentialVault.read", "credentialVault.write", "extensions.read", "extensions.write", "extensionConfigurations.read", "extensionConfigurations.write", "extensionEnvironment.read", "extensionEnvironment.write", "metrics.ingest", "attacks.read", "attacks.write", "securityProblems.read", "securityProblems.write", "syntheticLocations.read", "syntheticLocations.write", "settings.read", "settings.write", "tenantTokenRotation.write", "slo.read", "slo.write", "releases.read", "apiTokens.read", "apiTokens.write", "openTelemetryTrace.ingest", "logs.read", "logs.ingest", "geographicRegions.read", "oneAgents.read", "oneAgents.write", "traces.lookup", "hub.read", "hub.write", "hub.install", "javaScriptMappingFiles.read", "javaScriptMappingFiles.write" ]
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the token.",
            "example" : "tokenName"
          }
        },
        "description" : "Parameters of a new API token."
      },
      "ApiToken" : {
        "type" : "object",
        "properties" : {
          "lastUsedDate" : {
            "type" : "string",
            "description" : "Token last used date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`)",
            "example" : "2020-11-12T08:15:30.144Z"
          },
          "personalAccessToken" : {
            "type" : "boolean",
            "description" : "The token is a [personal access token](https://dt-url.net/wm03sop) (`true`) or an API token (`false`).",
            "example" : true
          },
          "expirationDate" : {
            "type" : "string",
            "description" : "Token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`). \n\n If not set, the token never expires.",
            "example" : "2020-11-12T08:15:30.144Z"
          },
          "lastUsedIpAddress" : {
            "type" : "string",
            "description" : "Token last used IP address.",
            "example" : "34.197.2.44"
          },
          "modifiedDate" : {
            "type" : "string",
            "description" : "Token last modified date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`). Updating scopes or name counts as modification, enabling or disabling a token does not.",
            "example" : "2020-11-12T08:15:30.144Z"
          },
          "additionalMetadata" : {
            "type" : "object",
            "description" : "Contains additional properties for specific kinds of token. Examples:\n\n* A `dashboardId` property for dashboard sharing tokens.\n* A `reportId` property for report sharing tokens",
            "example" : {
              "dashboardId" : "82402bab-7370-4359-924d-88ed13c8919a"
            }
          },
          "creationDate" : {
            "type" : "string",
            "description" : "Token creation date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`)",
            "example" : "2020-11-05T08:15:30.144Z"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The token is enabled (`true`) or disabled (`false`).",
            "example" : true
          },
          "scopes" : {
            "type" : "array",
            "description" : "A list of scopes assigned to the token.",
            "items" : {
              "type" : "string",
              "example" : "metrics.read",
              "enum" : [ "ActiveGateCertManagement", "AdvancedSyntheticIntegration", "CaptureRequestData", "DTAQLAccess", "DataExport", "DataImport", "DataPrivacy", "Davis", "DiagnosticExport", "DssFileManagement", "ExternalSyntheticIntegration", "InstallerDownload", "LogExport", "MemoryDump", "Mobile", "PluginUpload", "ReadConfig", "ReadSyntheticData", "RestRequestForwarding", "RumBrowserExtension", "RumJavaScriptTagManagement", "SupportAlert", "TenantTokenManagement", "UserSessionAnonymization", "ViewDashboard", "ViewReport", "WriteConfig", "WriteSyntheticData", "activeGateTokenManagement.create", "activeGateTokenManagement.read", "activeGateTokenManagement.write", "activeGates.read", "activeGates.write", "analyzers.read", "analyzers.write", "apiTokens.read", "apiTokens.write", "attacks.read", "attacks.write", "auditLogs.read", "credentialVault.read", "credentialVault.write", "entities.read", "entities.write", "events.ingest", "events.read", "extensionConfigurations.read", "extensionConfigurations.write", "extensionEnvironment.read", "extensionEnvironment.write", "extensions.read", "extensions.write", "geographicRegions.read", "hub.install", "hub.read", "hub.write", "javaScriptMappingFiles.read", "javaScriptMappingFiles.write", "logs.ingest", "logs.read", "metrics.ingest", "metrics.read", "metrics.write", "networkZones.read", "networkZones.write", "oneAgents.read", "oneAgents.write", "openTelemetryTrace.ingest", "problems.read", "problems.write", "releases.read", "securityProblems.read", "securityProblems.write", "settings.read", "settings.write", "slo.read", "slo.write", "syntheticExecutions.read", "syntheticExecutions.write", "syntheticLocations.read", "syntheticLocations.write", "tenantTokenRotation.write", "traces.lookup" ]
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the token.",
            "example" : "myToken"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the token, consisting of prefix and public part of the token.",
            "example" : "dt0c01.ST2EY72KQINMH574WMNVI7YN"
          },
          "owner" : {
            "type" : "string",
            "description" : "The owner of the token.",
            "example" : "john.smith"
          }
        },
        "description" : "Metadata of an API token."
      },
      "ApiTokenList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "apiTokens" : {
            "type" : "array",
            "description" : "A list of API tokens.",
            "items" : {
              "$ref" : "#/components/schemas/ApiToken"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          }
        },
        "description" : "A list of API tokens.",
        "example" : {
          "pageSize" : "1",
          "totalCount" : "1",
          "apiTokens" : {
            "id" : "dt0c01.ST2EY72KQINMH574WMNVI7YN",
            "name" : "tokenName",
            "disabled" : "false",
            "personalAccessToken" : "true",
            "owner" : "john.smith",
            "creationDate" : "2020-11-05T08:15:30.144Z",
            "expirationDate" : "2020-11-12T08:15:30.144Z",
            "lastUsedDate" : "2020-11-12T08:15:30.144Z",
            "lastUsedIpAddress" : "34.197.2.44",
            "scopes" : [ "metrics.read" ],
            "additionalMetadata" : {
              "dashboardId" : "82402bab-7370-4359-924d-88ed13c8919a"
            }
          }
        }
      },
      "ApiTokenSecret" : {
        "required" : [ "token" ],
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "The API token.",
            "example" : "dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM"
          }
        }
      },
      "ApiTokenUpdate" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The token is enabled (`true`) or disabled (`false`)",
            "example" : true
          },
          "scopes" : {
            "type" : "array",
            "description" : "The list of scopes assigned to the token. \n\nApart from the new scopes, you need to submit the existing scopes you want to keep, too. Any existing scope, missing in the payload, is removed.\n\n* `InstallerDownload`: PaaS integration - Installer download. \n* `DataExport`: Access problem and event feed, metrics, and topology. \n* `PluginUpload`: Upload Extension. \n* `SupportAlert`: PaaS integration - Support alert. \n* `AdvancedSyntheticIntegration`: Dynatrace module integration - Synthetic Classic. \n* `ExternalSyntheticIntegration`: Create and read synthetic monitors, locations, and nodes. \n* `RumBrowserExtension`: RUM Browser Extension. \n* `LogExport`: Read logs. \n* `ReadConfig`: Read configuration. \n* `WriteConfig`: Write configuration. \n* `DTAQLAccess`: User sessions. \n* `UserSessionAnonymization`: Anonymize user session data for data privacy reasons. \n* `DataPrivacy`: Change data privacy settings. \n* `CaptureRequestData`: Capture request data. \n* `Davis`: Dynatrace module integration - Davis. \n* `DssFileManagement`: Mobile symbolication file management. \n* `RumJavaScriptTagManagement`: Real user monitoring JavaScript tag management. \n* `TenantTokenManagement`: Token management. \n* `ActiveGateCertManagement`: ActiveGate certificate management. \n* `RestRequestForwarding`: Fetch data from a remote environment. \n* `ReadSyntheticData`: Read synthetic monitors, locations, and nodes. \n* `DataImport`: Data ingest, e.g.: metrics and events. \n* `syntheticExecutions.write`: Write synthetic monitor executions. \n* `syntheticExecutions.read`: Read synthetic monitor execution results. \n* `auditLogs.read`: Read audit logs. \n* `metrics.read`: Read metrics. \n* `metrics.write`: Write metrics. \n* `entities.read`: Read entities. \n* `entities.write`: Write entities. \n* `problems.read`: Read problems. \n* `problems.write`: Write problems. \n* `events.read`: Read events. \n* `events.ingest`: Ingest events. \n* `analyzers.read`: Read analyzers. \n* `analyzers.write`: Write & execute analyzers. \n* `networkZones.read`: Read network zones. \n* `networkZones.write`: Write network zones. \n* `activeGates.read`: Read ActiveGates. \n* `activeGates.write`: Write ActiveGates. \n* `activeGateTokenManagement.read`: Read ActiveGate tokens. \n* `activeGateTokenManagement.create`: Create ActiveGate tokens. \n* `activeGateTokenManagement.write`: Write ActiveGate tokens. \n* `credentialVault.read`: Read credential vault entries. \n* `credentialVault.write`: Write credential vault entries. \n* `extensions.read`: Read extensions. \n* `extensions.write`: Write extensions. \n* `extensionConfigurations.read`: Read extension monitoring configurations. \n* `extensionConfigurations.write`: Write extension monitoring configurations. \n* `extensionEnvironment.read`: Read extension environment configurations. \n* `extensionEnvironment.write`: Write extension environment configurations. \n* `metrics.ingest`: Ingest metrics. \n* `attacks.read`: Read attacks. \n* `attacks.write`: Write Application Protection settings. \n* `securityProblems.read`: Read security problems. \n* `securityProblems.write`: Write security problems. \n* `syntheticLocations.read`: Read synthetic locations. \n* `syntheticLocations.write`: Write synthetic locations. \n* `settings.read`: Read settings. \n* `settings.write`: Write settings. \n* `tenantTokenRotation.write`: Tenant token rotation. \n* `slo.read`: Read SLO. \n* `slo.write`: Write SLO. \n* `releases.read`: Read releases. \n* `apiTokens.read`: Read API tokens. \n* `apiTokens.write`: Write API tokens. \n* `openTelemetryTrace.ingest`: Ingest OpenTelemetry traces. \n* `logs.read`: Read logs. \n* `logs.ingest`: Ingest logs. \n* `geographicRegions.read`: Read Geographic regions. \n* `oneAgents.read`: Read OneAgents. \n* `oneAgents.write`: Write OneAgents. \n* `traces.lookup`: Look up a single trace. \n* `hub.read`: Read Hub related data. \n* `hub.write`: Manage metadata of Hub items. \n* `hub.install`: Install and update Hub items. \n* `javaScriptMappingFiles.read`: Read JavaScript mapping files. \n* `javaScriptMappingFiles.write`: Write JavaScript mapping files. \n",
            "items" : {
              "type" : "string",
              "enum" : [ "InstallerDownload", "DataExport", "PluginUpload", "SupportAlert", "AdvancedSyntheticIntegration", "ExternalSyntheticIntegration", "RumBrowserExtension", "LogExport", "ReadConfig", "WriteConfig", "DTAQLAccess", "UserSessionAnonymization", "DataPrivacy", "CaptureRequestData", "Davis", "DssFileManagement", "RumJavaScriptTagManagement", "TenantTokenManagement", "ActiveGateCertManagement", "RestRequestForwarding", "ReadSyntheticData", "DataImport", "syntheticExecutions.write", "syntheticExecutions.read", "auditLogs.read", "metrics.read", "metrics.write", "entities.read", "entities.write", "problems.read", "problems.write", "events.read", "events.ingest", "analyzers.read", "analyzers.write", "networkZones.read", "networkZones.write", "activeGates.read", "activeGates.write", "activeGateTokenManagement.read", "activeGateTokenManagement.create", "activeGateTokenManagement.write", "credentialVault.read", "credentialVault.write", "extensions.read", "extensions.write", "extensionConfigurations.read", "extensionConfigurations.write", "extensionEnvironment.read", "extensionEnvironment.write", "metrics.ingest", "attacks.read", "attacks.write", "securityProblems.read", "securityProblems.write", "syntheticLocations.read", "syntheticLocations.write", "settings.read", "settings.write", "tenantTokenRotation.write", "slo.read", "slo.write", "releases.read", "apiTokens.read", "apiTokens.write", "openTelemetryTrace.ingest", "logs.read", "logs.ingest", "geographicRegions.read", "oneAgents.read", "oneAgents.write", "traces.lookup", "hub.read", "hub.write", "hub.install", "javaScriptMappingFiles.read", "javaScriptMappingFiles.write" ]
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the token.",
            "example" : "myToken"
          }
        },
        "description" : "The update of the API token."
      },
      "AuditLogEntry" : {
        "required" : [ "category", "environmentId", "eventType", "logId", "success", "timestamp", "user", "userType" ],
        "type" : "object",
        "properties" : {
          "logId" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "The ID of the log entry.",
            "readOnly" : true
          },
          "eventType" : {
            "type" : "string",
            "description" : "The type of the recorded operation.",
            "readOnly" : true,
            "enum" : [ "CREATE", "DELETE", "GENERAL", "GET", "LOGIN", "LOGOUT", "PATCH", "POST", "PUT", "READ", "REMOTE_CONFIGURATION_MANAGEMENT", "REVOKE", "TAG_ADD", "TAG_REMOVE", "TAG_UPDATE", "UPDATE" ]
          },
          "category" : {
            "type" : "string",
            "description" : "The category of the recorded operation.",
            "readOnly" : true,
            "enum" : [ "ACTIVE_GATE", "AGENT", "CONFIG", "DEBUG_UI", "MANUAL_TAGGING_SERVICE", "TOKEN", "WEB_UI" ]
          },
          "entityId" : {
            "type" : "string",
            "description" : "The ID of an entity from the **category**. \n\nFor example, it can be config ID for the `CONFIG` category or token ID for the `TOKEN` category.",
            "readOnly" : true
          },
          "environmentId" : {
            "type" : "string",
            "description" : "The ID of the Dynatrace environment where the recorded operation occurred.",
            "readOnly" : true
          },
          "user" : {
            "type" : "string",
            "description" : "The ID of the user who performed the recorded operation.",
            "readOnly" : true
          },
          "userType" : {
            "type" : "string",
            "description" : "The type of the authentication of the **user**.",
            "readOnly" : true,
            "enum" : [ "PUBLIC_TOKEN_IDENTIFIER", "REQUEST_ID", "SERVICE_NAME", "TOKEN_HASH", "USER_NAME" ]
          },
          "userOrigin" : {
            "type" : "string",
            "description" : "The origin and the IP address of the **user**.",
            "readOnly" : true
          },
          "timestamp" : {
            "type" : "integer",
            "description" : "The timestamp of the record creation, in UTC milliseconds.",
            "format" : "int64",
            "readOnly" : true
          },
          "success" : {
            "type" : "boolean",
            "description" : "The recorded operation is successful (`true`) or failed (`false`).",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "The logged message.",
            "readOnly" : true
          },
          "patch" : {
            "type" : "object",
            "description" : "The patch of the recorded operation as the JSON representation. \n\nThe format is an enhanced RFC 6902. The patch also carries the previous value in the **oldValue** field.",
            "readOnly" : true
          }
        },
        "description" : "An entry of the audit log.",
        "example" : {
          "logId" : "197425568800060000",
          "eventType" : "UPDATE",
          "category" : "CONFIG",
          "entityId" : "MOBILE_RUM: MOBILE_APPLICATION-752C223D59734CD2",
          "environmentId" : "prod-env-13",
          "user" : "test.user@company.com",
          "userType" : "USER_NAME",
          "userOrigin" : "webui (192.168.0.2)",
          "timestamp" : 1974255688445,
          "success" : true,
          "patch" : [ {
            "op" : "replace",
            "path" : "/refreshTimeIntervalMillis",
            "value" : 30000,
            "oldValue" : 20000
          } ]
        }
      },
      "AuditLog" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "auditLogs" : {
            "type" : "array",
            "description" : "A list of audit log entries ordered by the creation timestamp.",
            "items" : {
              "$ref" : "#/components/schemas/AuditLogEntry"
            }
          }
        },
        "description" : "The audit log of your environment.",
        "example" : {
          "totalCount" : 10,
          "pageSize" : 5,
          "nextPageKey" : "___a7acX3q0AAAAAACJidWlsdGluOnNlcnZpY2lUVEJCUzBaNVIxVjJOSGt6Y3oyLTcwMUZWRkxlclH__9rtpxferQ",
          "auditLogs" : [ {
            "logId" : "197425568800060000",
            "eventType" : "UPDATE",
            "category" : "CONFIG",
            "entityId" : "MOBILE_RUM: MOBILE_APPLICATION-752C223D59734CD2",
            "environmentId" : "prod-env-13",
            "user" : "test.user@company.com",
            "userType" : "USER_NAME",
            "userOrigin" : "webui (192.168.0.2)",
            "timestamp" : 1974255688445,
            "success" : true,
            "patch" : [ {
              "op" : "replace",
              "path" : "/refreshTimeIntervalMillis",
              "value" : 30000,
              "oldValue" : 20000
            } ]
          } ]
        }
      },
      "BizEventIngestError" : {
        "type" : "object",
        "properties" : {
          "index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          }
        }
      },
      "BizEventIngestResult" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "description" : "A list of business events ingest errors.",
            "items" : {
              "$ref" : "#/components/schemas/BizEventIngestError"
            }
          }
        },
        "description" : "Result received after ingesting business events."
      },
      "CloudEvent" : {
        "required" : [ "id", "source", "specversion", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "minLength" : 1,
            "type" : "string"
          },
          "type" : {
            "minLength" : 1,
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "specversion" : {
            "minLength" : 1,
            "type" : "string"
          },
          "time" : {
            "type" : "string",
            "format" : "date-time"
          },
          "data" : {
            "type" : "object"
          },
          "data_base64" : {
            "type" : "string"
          },
          "dataschema" : {
            "type" : "string",
            "format" : "uri"
          },
          "datacontenttype" : {
            "type" : "string"
          },
          "subject" : {
            "minLength" : 1,
            "type" : "string"
          },
          "dtcontext" : {
            "type" : "string",
            "description" : "Dynatrace context"
          },
          "traceparent" : {
            "type" : "string",
            "description" : "Trace related to this event. See [distributed tracing](https://github.com/cloudevents/spec/blob/main/cloudevents/extensions/distributed-tracing.md) for further information."
          }
        },
        "description" : "CloudEvents is a [specification](https://github.com/cloudevents/spec/blob/v1.0/spec.json) for describing event data in common formats to provide interoperability across services, platforms and systems."
      },
      "AffectedEntities" : {
        "type" : "object",
        "properties" : {
          "processGroupInstance" : {
            "$ref" : "#/components/schemas/AffectedEntity"
          },
          "processGroup" : {
            "$ref" : "#/components/schemas/AffectedEntity"
          }
        },
        "description" : "Information about affected entities of an attack.",
        "readOnly" : true
      },
      "AffectedEntity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The monitored entity ID of the affected entity.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the affected entity.",
            "readOnly" : true
          }
        },
        "description" : "Information about an affected entity.",
        "readOnly" : true
      },
      "Attack" : {
        "type" : "object",
        "properties" : {
          "attackId" : {
            "type" : "string",
            "description" : "The ID of the attack.",
            "readOnly" : true
          },
          "displayId" : {
            "type" : "string",
            "description" : "The display ID of the attack.",
            "readOnly" : true
          },
          "timestamp" : {
            "type" : "integer",
            "description" : "The timestamp when the attack occurred.",
            "format" : "int64",
            "readOnly" : true
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the attack.",
            "readOnly" : true
          },
          "attackType" : {
            "type" : "string",
            "description" : "The type of the attack.",
            "readOnly" : true,
            "enum" : [ "COMMAND_INJECTION", "JNDI_INJECTION", "SQL_INJECTION" ]
          },
          "technology" : {
            "type" : "string",
            "description" : "The technology of the attack.",
            "readOnly" : true,
            "enum" : [ "DOTNET", "JAVA" ]
          },
          "state" : {
            "type" : "string",
            "description" : "The state of the attack.",
            "readOnly" : true,
            "enum" : [ "ALLOWLISTED", "BLOCKED", "EXPLOITED" ]
          },
          "attackTarget" : {
            "$ref" : "#/components/schemas/AttackTarget"
          },
          "affectedEntities" : {
            "$ref" : "#/components/schemas/AffectedEntities"
          },
          "request" : {
            "$ref" : "#/components/schemas/RequestInformation"
          },
          "entrypoint" : {
            "$ref" : "#/components/schemas/AttackEntrypoint"
          },
          "vulnerability" : {
            "$ref" : "#/components/schemas/Vulnerability"
          },
          "securityProblem" : {
            "$ref" : "#/components/schemas/AttackSecurityProblem"
          },
          "attacker" : {
            "$ref" : "#/components/schemas/Attacker"
          },
          "managementZones" : {
            "type" : "array",
            "description" : "A list of management zones which the affected entities belong to.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ManagementZone"
            }
          }
        },
        "description" : "Describes an attack."
      },
      "AttackEntrypoint" : {
        "type" : "object",
        "properties" : {
          "codeLocation" : {
            "$ref" : "#/components/schemas/CodeLocation"
          },
          "entrypointFunction" : {
            "$ref" : "#/components/schemas/FunctionDefinition"
          },
          "payload" : {
            "type" : "array",
            "description" : "All relevant payload data that has been sent during the attack.",
            "readOnly" : true,
            "items" : {
              "type" : "object",
              "properties" : {
                "values" : {
                  "type" : "array",
                  "description" : "Values of the list.",
                  "readOnly" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/EntrypointPayload"
                  }
                },
                "truncationInfo" : {
                  "$ref" : "#/components/schemas/TruncationInfo"
                }
              },
              "description" : "A list of values that has possibly been truncated.",
              "readOnly" : true
            }
          }
        },
        "description" : "Describes the entrypoint used by an attacker to start a specific attack.",
        "readOnly" : true
      },
      "AttackRequestHeader" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the header element.",
            "readOnly" : true
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the header element.",
            "readOnly" : true
          }
        },
        "description" : "A header element of the attack's request.",
        "readOnly" : true
      },
      "AttackSecurityProblem" : {
        "type" : "object",
        "properties" : {
          "securityProblemId" : {
            "type" : "string",
            "description" : "The security problem ID.",
            "readOnly" : true
          },
          "assessment" : {
            "$ref" : "#/components/schemas/AttackSecurityProblemAssessmentDto"
          }
        },
        "description" : "Assessment information and the ID of a security problem related to an attack.",
        "readOnly" : true
      },
      "AttackSecurityProblemAssessmentDto" : {
        "type" : "object",
        "properties" : {
          "exposure" : {
            "type" : "string",
            "description" : "The level of exposure of the attacked target",
            "readOnly" : true,
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "PUBLIC_NETWORK" ]
          },
          "dataAssets" : {
            "type" : "string",
            "description" : "The reachability of data assets by the attacked target.",
            "readOnly" : true,
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "REACHABLE" ]
          },
          "numberOfReachableDataAssets" : {
            "type" : "integer",
            "description" : "The number of data assets reachable by the attacked target.",
            "format" : "int32",
            "readOnly" : true
          }
        },
        "description" : "The assessment of a security problem related to an attack.",
        "readOnly" : true
      },
      "AttackTarget" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The monitored entity ID of the targeted host/database.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the targeted host/database.",
            "readOnly" : true
          }
        },
        "description" : "Information about the targeted host/database of an attack.",
        "readOnly" : true
      },
      "Attacker" : {
        "type" : "object",
        "properties" : {
          "sourceIp" : {
            "type" : "string",
            "description" : "The source IP of the attacker.",
            "readOnly" : true
          },
          "location" : {
            "$ref" : "#/components/schemas/AttackerLocation"
          }
        },
        "description" : "Attacker of an attack.",
        "readOnly" : true
      },
      "AttackerLocation" : {
        "type" : "object",
        "properties" : {
          "countryCode" : {
            "type" : "string",
            "description" : "The country code of the country of the attacker, according to the ISO 3166-1 Alpha-2 standard.",
            "readOnly" : true
          },
          "country" : {
            "type" : "string",
            "description" : "The country of the attacker.",
            "readOnly" : true
          },
          "city" : {
            "type" : "string",
            "description" : "City of the attacker.",
            "readOnly" : true
          }
        },
        "description" : "Location of an attacker.",
        "readOnly" : true
      },
      "CodeLocation" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "A human readable string representation of the code location.",
            "readOnly" : true
          },
          "className" : {
            "type" : "string",
            "description" : "The fully qualified class name of the code location.",
            "readOnly" : true
          },
          "functionName" : {
            "type" : "string",
            "description" : "The function/method name of the code location.",
            "readOnly" : true
          },
          "parameterTypes" : {
            "$ref" : "#/components/schemas/TruncatableListString"
          },
          "returnType" : {
            "type" : "string",
            "description" : "The return type of the function.",
            "readOnly" : true
          },
          "lineNumber" : {
            "type" : "integer",
            "description" : "The line number of the code location.",
            "format" : "int32",
            "readOnly" : true
          }
        },
        "description" : "Information about a code location.",
        "readOnly" : true
      },
      "EntrypointPayload" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of the payload.",
            "readOnly" : true,
            "enum" : [ "HTTP_BODY", "HTTP_COOKIE", "HTTP_HEADER_NAME", "HTTP_HEADER_VALUE", "HTTP_OTHER", "HTTP_PARAMETER_NAME", "HTTP_PARAMETER_VALUE", "HTTP_URL", "UNKNOWN" ]
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the payload, if applicable.",
            "nullable" : true,
            "readOnly" : true
          },
          "value" : {
            "type" : "string",
            "description" : "Value of the payload.",
            "readOnly" : true
          }
        },
        "description" : "Describes a payload sent to an entrypoint during an attack.",
        "readOnly" : true
      },
      "FunctionDefinition" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "A human readable string representation of the function definition.",
            "readOnly" : true
          },
          "className" : {
            "type" : "string",
            "description" : "The fully qualified class name of the class that includes the function.",
            "readOnly" : true
          },
          "functionName" : {
            "type" : "string",
            "description" : "The function/method name.",
            "readOnly" : true
          },
          "parameterTypes" : {
            "$ref" : "#/components/schemas/TruncatableListString"
          },
          "returnType" : {
            "type" : "string",
            "description" : "The return type of the function.",
            "readOnly" : true
          }
        },
        "description" : "Information about a function definition.",
        "readOnly" : true
      },
      "HttpProtocolDetails" : {
        "type" : "object",
        "properties" : {
          "requestMethod" : {
            "type" : "string",
            "description" : "The HTTP request method.",
            "readOnly" : true
          },
          "headers" : {
            "$ref" : "#/components/schemas/TruncatableListAttackRequestHeader"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TruncatableListHttpRequestParameter"
          }
        },
        "description" : "HTTP specific request details.",
        "readOnly" : true
      },
      "HttpRequestParameter" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the parameter.",
            "readOnly" : true
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the parameter.",
            "readOnly" : true
          }
        },
        "description" : "An HTTP request parameter.",
        "readOnly" : true
      },
      "ProtocolDetails" : {
        "type" : "object",
        "properties" : {
          "http" : {
            "$ref" : "#/components/schemas/HttpProtocolDetails"
          }
        },
        "description" : "Details that are specific to the used protocol.",
        "readOnly" : true
      },
      "RequestInformation" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "description" : "The requested URL.",
            "readOnly" : true
          },
          "host" : {
            "type" : "string",
            "description" : "The target host of the request.",
            "readOnly" : true
          },
          "path" : {
            "type" : "string",
            "description" : "The request path.",
            "readOnly" : true
          },
          "protocolDetails" : {
            "$ref" : "#/components/schemas/ProtocolDetails"
          }
        },
        "description" : "Describes the complete request information of an attack.",
        "readOnly" : true
      },
      "TruncatableListAttackRequestHeader" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "description" : "Values of the list.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/AttackRequestHeader"
            }
          },
          "truncationInfo" : {
            "$ref" : "#/components/schemas/TruncationInfo"
          }
        },
        "description" : "A list of values that has possibly been truncated.",
        "readOnly" : true
      },
      "TruncatableListHttpRequestParameter" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "description" : "Values of the list.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/HttpRequestParameter"
            }
          },
          "truncationInfo" : {
            "$ref" : "#/components/schemas/TruncationInfo"
          }
        },
        "description" : "A list of values that has possibly been truncated.",
        "readOnly" : true
      },
      "TruncatableListString" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "description" : "Values of the list.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "Values of the list.",
              "readOnly" : true
            }
          },
          "truncationInfo" : {
            "$ref" : "#/components/schemas/TruncationInfo"
          }
        },
        "description" : "A list of values that has possibly been truncated.",
        "readOnly" : true
      },
      "TruncationInfo" : {
        "type" : "object",
        "properties" : {
          "truncated" : {
            "type" : "boolean",
            "description" : "If the list/value has been truncated.",
            "readOnly" : true
          }
        },
        "description" : "Information on a possible truncation.",
        "readOnly" : true
      },
      "Vulnerability" : {
        "type" : "object",
        "properties" : {
          "vulnerabilityId" : {
            "type" : "string",
            "description" : "The id of the vulnerability.",
            "readOnly" : true
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the vulnerability.",
            "readOnly" : true
          },
          "codeLocation" : {
            "$ref" : "#/components/schemas/CodeLocation"
          },
          "vulnerableFunction" : {
            "$ref" : "#/components/schemas/FunctionDefinition"
          },
          "vulnerableFunctionInput" : {
            "$ref" : "#/components/schemas/VulnerableFunctionInput"
          }
        },
        "description" : "Describes the exploited vulnerability.",
        "readOnly" : true
      },
      "VulnerableFunctionInput" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the input.",
            "readOnly" : true,
            "enum" : [ "COMMAND", "JNDI", "SQL_STATEMENT" ]
          },
          "inputSegments" : {
            "type" : "array",
            "description" : "A list of input segments.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunctionInputSegment"
            }
          }
        },
        "description" : "Describes what got passed into the code level vulnerability.",
        "readOnly" : true
      },
      "VulnerableFunctionInputSegment" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The value of the input segment.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the input segment.",
            "readOnly" : true,
            "enum" : [ "MALICIOUS_INPUT", "REGULAR_INPUT", "TAINTED_INPUT" ]
          }
        },
        "description" : "Describes one segment that was passed into a vulnerable function."
      },
      "AttackList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "attacks" : {
            "type" : "array",
            "description" : "A list of attacks.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Attack"
            }
          }
        },
        "description" : "A list of attacks."
      },
      "DavisSecurityAdvice" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the advice.",
            "readOnly" : true
          },
          "vulnerableComponent" : {
            "type" : "string",
            "description" : "The vulnerable component to which advice applies.",
            "readOnly" : true
          },
          "technology" : {
            "type" : "string",
            "description" : "The technology of the vulnerable component.",
            "readOnly" : true,
            "enum" : [ "DOTNET", "GO", "JAVA", "KUBERNETES", "NODE_JS", "PHP" ]
          },
          "adviceType" : {
            "type" : "string",
            "description" : "The type of the advice.",
            "readOnly" : true,
            "enum" : [ "UPGRADE" ]
          },
          "critical" : {
            "type" : "array",
            "description" : "IDs of `critical` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "IDs of `critical` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
              "readOnly" : true
            }
          },
          "high" : {
            "type" : "array",
            "description" : "IDs of `high` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "IDs of `high` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
              "readOnly" : true
            }
          },
          "medium" : {
            "type" : "array",
            "description" : "IDs of `medium` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "IDs of `medium` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
              "readOnly" : true
            }
          },
          "low" : {
            "type" : "array",
            "description" : "IDs of `low` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "IDs of `low` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
              "readOnly" : true
            }
          },
          "none" : {
            "type" : "array",
            "description" : "IDs of `none` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "IDs of `none` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
              "readOnly" : true
            }
          }
        },
        "description" : "Security advice from the Davis security advisor."
      },
      "DavisSecurityAdviceList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "advices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DavisSecurityAdvice"
            }
          }
        },
        "description" : "A list of advice from the Davis security advisor."
      },
      "RemediationItemMutingSummary" : {
        "required" : [ "muteStateChangeTriggered", "remediationItemId" ],
        "type" : "object",
        "properties" : {
          "remediationItemId" : {
            "type" : "string",
            "description" : "The id of the remediation item that will be (un-)muted.",
            "readOnly" : true
          },
          "muteStateChangeTriggered" : {
            "type" : "boolean",
            "description" : "Whether a mute state change for the given remediation item was triggered by this request.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "Contains a reason, in case the requested operation was not executed.",
            "readOnly" : true,
            "enum" : [ "ALREADY_MUTED", "ALREADY_UNMUTED", "REMEDIATION_ITEM_NOT_AFFECTED_BY_GIVEN_SECURITY_PROBLEM" ]
          }
        },
        "description" : "Summary of (un-)muting a remediation item."
      },
      "RemediationItemsBulkMuteResponse" : {
        "required" : [ "summary" ],
        "type" : "object",
        "properties" : {
          "summary" : {
            "type" : "array",
            "description" : "The summary of which remediation items were muted and which already were muted previously.",
            "items" : {
              "$ref" : "#/components/schemas/RemediationItemMutingSummary"
            }
          }
        },
        "description" : "Response of muting several remediation items."
      },
      "RemediationItemsBulkMute" : {
        "required" : [ "reason", "remediationItemIds" ],
        "type" : "object",
        "properties" : {
          "remediationItemIds" : {
            "type" : "array",
            "description" : "The ids of the remediation items to be muted.",
            "items" : {
              "type" : "string"
            }
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for muting the remediation items.",
            "enum" : [ "CONFIGURATION_NOT_AFFECTED", "FALSE_POSITIVE", "IGNORE", "OTHER", "VULNERABLE_CODE_NOT_IN_USE" ]
          },
          "comment" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string",
            "description" : "A comment about the muting reason."
          }
        },
        "description" : "Information on muting several remediation items."
      },
      "SecurityProblemBulkMutingSummary" : {
        "required" : [ "muteStateChangeTriggered", "securityProblemId" ],
        "type" : "object",
        "properties" : {
          "securityProblemId" : {
            "type" : "string",
            "description" : "The id of the security problem that was (un-)muted.",
            "readOnly" : true
          },
          "muteStateChangeTriggered" : {
            "type" : "boolean",
            "description" : "Whether a mute state change for the given security problem was triggered by this request.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "Contains a reason, in case the requested operation was not executed.",
            "readOnly" : true,
            "enum" : [ "ALREADY_MUTED", "ALREADY_UNMUTED" ]
          }
        },
        "description" : "Summary of (un-)muting a security problem."
      },
      "SecurityProblemsBulkMuteResponse" : {
        "required" : [ "summary" ],
        "type" : "object",
        "properties" : {
          "summary" : {
            "type" : "array",
            "description" : "The summary of which security problems were muted and which already were muted previously.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/SecurityProblemBulkMutingSummary"
            }
          }
        },
        "description" : "Response of muting several security problems."
      },
      "SecurityProblemsBulkMute" : {
        "required" : [ "reason", "securityProblemIds" ],
        "type" : "object",
        "properties" : {
          "securityProblemIds" : {
            "maxItems" : 1000,
            "minItems" : 0,
            "type" : "array",
            "description" : "The ids of the security problems to be muted.",
            "writeOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for muting the security problems.",
            "writeOnly" : true,
            "enum" : [ "CONFIGURATION_NOT_AFFECTED", "FALSE_POSITIVE", "IGNORE", "OTHER", "VULNERABLE_CODE_NOT_IN_USE" ]
          },
          "comment" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string",
            "description" : "A comment about the muting reason.",
            "writeOnly" : true
          }
        },
        "description" : "Information on muting several security problems."
      },
      "RemediationItemsBulkUnmuteResponse" : {
        "required" : [ "summary" ],
        "type" : "object",
        "properties" : {
          "summary" : {
            "type" : "array",
            "description" : "The summary of which remediation items were un-muted and which already were un-muted previously.",
            "items" : {
              "$ref" : "#/components/schemas/RemediationItemMutingSummary"
            }
          }
        },
        "description" : "Response of un-muting several remediation items."
      },
      "RemediationItemsBulkUnmute" : {
        "required" : [ "reason", "remediationItemIds" ],
        "type" : "object",
        "properties" : {
          "remediationItemIds" : {
            "type" : "array",
            "description" : "The ids of the remediation items to be un-muted.",
            "items" : {
              "type" : "string"
            }
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for un-muting the remediation items.",
            "enum" : [ "AFFECTED" ]
          },
          "comment" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string",
            "description" : "A comment about the un-muting reason."
          }
        },
        "description" : "Information on un-muting several remediation items."
      },
      "SecurityProblemsBulkUnmuteResponse" : {
        "required" : [ "summary" ],
        "type" : "object",
        "properties" : {
          "summary" : {
            "type" : "array",
            "description" : "The summary of which security problems were un-muted and which already were un-muted previously.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/SecurityProblemBulkMutingSummary"
            }
          }
        },
        "description" : "Response of un-muting several security problems."
      },
      "SecurityProblemsBulkUnmute" : {
        "required" : [ "reason", "securityProblemIds" ],
        "type" : "object",
        "properties" : {
          "securityProblemIds" : {
            "maxItems" : 1000,
            "minItems" : 0,
            "type" : "array",
            "description" : "The ids of the security problems to be un-muted.",
            "writeOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for un-muting the security problems.",
            "writeOnly" : true,
            "enum" : [ "AFFECTED" ]
          },
          "comment" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string",
            "description" : "A comment about the un-muting reason.",
            "writeOnly" : true
          }
        },
        "description" : "Information on un-muting several security problems."
      },
      "MuteState" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "type" : "string",
            "description" : "The user who has muted or unmuted the problem.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the mute state change.",
            "readOnly" : true,
            "enum" : [ "AFFECTED", "CONFIGURATION_NOT_AFFECTED", "FALSE_POSITIVE", "IGNORE", "INITIAL_STATE", "OTHER", "VULNERABLE_CODE_NOT_IN_USE" ]
          },
          "comment" : {
            "type" : "string",
            "description" : "A user's comment.",
            "readOnly" : true
          }
        },
        "description" : "Metadata of the muted state of a security problem in relation to an event.",
        "readOnly" : true
      },
      "RiskAssessmentSnapshot" : {
        "type" : "object",
        "properties" : {
          "exposure" : {
            "type" : "string",
            "description" : "The level of exposure of affected entities.",
            "readOnly" : true,
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "PUBLIC_NETWORK" ]
          },
          "numberOfAffectedEntities" : {
            "type" : "integer",
            "description" : "The number of currently affected entities.",
            "format" : "int32",
            "readOnly" : true
          },
          "numberOfReachableDataAssets" : {
            "type" : "integer",
            "description" : "The number of data assets that are currently reachable by affected entities.",
            "format" : "int32",
            "readOnly" : true
          },
          "publicExploit" : {
            "type" : "string",
            "description" : "The availability status of public exploits.",
            "readOnly" : true,
            "enum" : [ "AVAILABLE", "NOT_AVAILABLE" ]
          },
          "riskLevel" : {
            "type" : "string",
            "description" : "The Davis risk level. \n\n It is calculated by Dynatrace on the basis of CVSS score.",
            "readOnly" : true,
            "enum" : [ "CRITICAL", "HIGH", "LOW", "MEDIUM", "NONE" ]
          },
          "riskScore" : {
            "type" : "number",
            "description" : "The Davis risk score (1-10). \n\n It is calculated by Dynatrace on the basis of CVSS score.",
            "format" : "float",
            "readOnly" : true
          },
          "vulnerableFunctionUsage" : {
            "type" : "string",
            "description" : "The state of vulnerable code execution.",
            "readOnly" : true,
            "enum" : [ "IN_USE", "NOT_AVAILABLE", "NOT_IN_USE" ]
          }
        },
        "description" : "A snapshot of the risk assessment of a security problem.",
        "readOnly" : true
      },
      "SecurityProblemEvent" : {
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "description" : "The timestamp when the event occurred.",
            "format" : "int64",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason of the event creation.",
            "readOnly" : true,
            "enum" : [ "SECURITY_PROBLEM_CREATED", "SECURITY_PROBLEM_MUTED", "SECURITY_PROBLEM_REOPENED", "SECURITY_PROBLEM_RESOLVED", "SECURITY_PROBLEM_UNMUTED" ]
          },
          "riskAssessmentSnapshot" : {
            "$ref" : "#/components/schemas/RiskAssessmentSnapshot"
          },
          "muteState" : {
            "$ref" : "#/components/schemas/MuteState"
          }
        },
        "description" : "The event of a security problem."
      },
      "SecurityProblemEventsList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "events" : {
            "type" : "array",
            "description" : "A list of events for a security problem.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/SecurityProblemEvent"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          }
        },
        "description" : "A list of events for a security problem."
      },
      "RemediationAssessment" : {
        "type" : "object",
        "properties" : {
          "exposure" : {
            "type" : "string",
            "description" : "The level of exposure of affected entities.",
            "readOnly" : true,
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "PUBLIC_NETWORK" ]
          },
          "dataAssets" : {
            "type" : "string",
            "description" : "The reachability of related data assets by affected entities.",
            "readOnly" : true,
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "REACHABLE" ]
          },
          "numberOfDataAssets" : {
            "type" : "integer",
            "description" : "The number of related data assets.",
            "format" : "int64",
            "readOnly" : true
          },
          "vulnerableFunctionUsage" : {
            "type" : "string",
            "description" : "The usage of vulnerable functions",
            "readOnly" : true,
            "enum" : [ "IN_USE", "NOT_AVAILABLE", "NOT_IN_USE" ]
          },
          "vulnerableFunctionsInUse" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of vulnerable functions that are in use.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            }
          },
          "vulnerableFunctionsNotInUse" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of vulnerable functions that are not in use.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            }
          },
          "vulnerableFunctionsNotAvailable" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of vulnerable functions that are not available.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            }
          }
        },
        "description" : "Assessment of the remediation item."
      },
      "RemediationDetailsItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "entityIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "firstAffectedTimestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "assessment" : {
            "$ref" : "#/components/schemas/RemediationAssessment"
          },
          "resolvedTimestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "vulnerabilityState" : {
            "type" : "string",
            "enum" : [ "RESOLVED", "VULNERABLE" ]
          },
          "muteState" : {
            "$ref" : "#/components/schemas/RemediationItemMuteState"
          },
          "vulnerableComponents" : {
            "type" : "array",
            "description" : "A list of vulnerable components of the remediation item. \n\nA vulnerable component is what causes the security problem.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/RemediationItemDetailsVulnerableComponent"
            }
          },
          "remediationProgress" : {
            "$ref" : "#/components/schemas/RemediationProgress"
          }
        },
        "description" : "Detailed information of a remediation item for a security problem."
      },
      "RemediationItemDetailsVulnerableComponent" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the vulnerable component.",
            "readOnly" : true
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the vulnerable component.",
            "readOnly" : true
          },
          "shortName" : {
            "type" : "string",
            "description" : "The short, component-only name of the vulnerable component.",
            "readOnly" : true
          },
          "fileName" : {
            "type" : "string",
            "description" : "The file name of the vulnerable component.",
            "readOnly" : true
          },
          "numberOfAffectedEntities" : {
            "type" : "integer",
            "description" : "The number of affected entities.",
            "format" : "int32",
            "readOnly" : true
          },
          "affectedEntities" : {
            "type" : "array",
            "description" : "A list of affected entities.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "A list of affected entities.",
              "readOnly" : true
            }
          }
        },
        "description" : "A vulnerable component with details for a remediation item (PG)."
      },
      "RemediationItemMuteState" : {
        "type" : "object",
        "properties" : {
          "muted" : {
            "type" : "boolean",
            "description" : "The remediation is (`true`) or is not (`false`) muted.",
            "readOnly" : true
          },
          "user" : {
            "type" : "string",
            "description" : "The user who last changed the mute state.",
            "readOnly" : true
          },
          "lastUpdatedTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp (UTC milliseconds) of the last update of the mute state.",
            "format" : "int64",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the most recent mute state change.",
            "readOnly" : true,
            "enum" : [ "AFFECTED", "CONFIGURATION_NOT_AFFECTED", "FALSE_POSITIVE", "IGNORE", "INITIAL_STATE", "OTHER", "VULNERABLE_CODE_NOT_IN_USE" ]
          },
          "comment" : {
            "type" : "string",
            "description" : "A short comment about the most recent mute state change.",
            "readOnly" : true
          }
        },
        "description" : "The mute state of a remediation item of a security problem."
      },
      "RemediationProgress" : {
        "type" : "object",
        "properties" : {
          "affectedEntities" : {
            "type" : "array",
            "description" : "A list of related entities that are affected by the security problem.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "A list of related entities that are affected by the security problem.",
              "readOnly" : true
            }
          },
          "unaffectedEntities" : {
            "type" : "array",
            "description" : "A list of related entities that are affected by the security problem.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "A list of related entities that are affected by the security problem.",
              "readOnly" : true
            }
          }
        },
        "description" : "The progress of this remediation item. It contains affected and unaffected entities."
      },
      "VulnerableFunction" : {
        "type" : "object",
        "properties" : {
          "className" : {
            "type" : "string",
            "description" : "The class name of the vulnerable function.",
            "readOnly" : true
          },
          "filePath" : {
            "type" : "string",
            "description" : "The file path of the vulnerable function.",
            "readOnly" : true
          },
          "functionName" : {
            "type" : "string",
            "description" : "The function name of the vulnerable function.",
            "readOnly" : true
          }
        },
        "description" : "Defines an vulnerable function.",
        "readOnly" : true
      },
      "RemediationItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "entityIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "firstAffectedTimestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "assessment" : {
            "$ref" : "#/components/schemas/RemediationAssessment"
          },
          "resolvedTimestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "vulnerabilityState" : {
            "type" : "string",
            "enum" : [ "RESOLVED", "VULNERABLE" ]
          },
          "muteState" : {
            "$ref" : "#/components/schemas/RemediationItemMuteState"
          },
          "vulnerableComponents" : {
            "type" : "array",
            "description" : "A list of vulnerable components of the remediation item. \n\nA vulnerable component is what causes the security problem.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VulnerableComponent"
            }
          },
          "remediationProgress" : {
            "$ref" : "#/components/schemas/RemediationProgress"
          }
        },
        "description" : "A possible remediation for a security problem."
      },
      "RemediationItemList" : {
        "type" : "object",
        "properties" : {
          "remediationItems" : {
            "type" : "array",
            "description" : "A list of remediation items.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/RemediationItem"
            }
          }
        },
        "description" : "A list of remediation items."
      },
      "VulnerableComponent" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the vulnerable component.",
            "readOnly" : true
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the vulnerable component.",
            "readOnly" : true
          },
          "shortName" : {
            "type" : "string",
            "description" : "The short, component-only name of the vulnerable component.",
            "readOnly" : true
          },
          "fileName" : {
            "type" : "string",
            "description" : "The file name of the vulnerable component.",
            "readOnly" : true
          },
          "numberOfAffectedEntities" : {
            "type" : "integer",
            "description" : "The number of affected entities.",
            "format" : "int32",
            "readOnly" : true
          },
          "affectedEntities" : {
            "type" : "array",
            "description" : "A list of affected entities.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "A list of affected entities.",
              "readOnly" : true
            }
          }
        },
        "description" : "Vulnerable component of a security problem."
      },
      "RemediationProgressEntity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the remediation progress entity.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the remediation progress entity.",
            "readOnly" : true
          },
          "firstAffectedTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp when the remediation progress entity has first been related to the vulnerability.",
            "format" : "int64",
            "readOnly" : true
          },
          "state" : {
            "type" : "string",
            "description" : "The current state of the remediation progress entity.",
            "readOnly" : true,
            "enum" : [ "AFFECTED", "UNAFFECTED" ]
          },
          "vulnerableComponents" : {
            "type" : "array",
            "description" : "A list of vulnerable components of the remediation item. \n\nA vulnerable component is what causes the security problem.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/RemediationProgressVulnerableComponent"
            }
          },
          "assessment" : {
            "$ref" : "#/components/schemas/RemediationProgressEntityAssessment"
          }
        },
        "description" : "An affected or unaffected entity of a remediation for a security problem."
      },
      "RemediationProgressEntityAssessment" : {
        "type" : "object",
        "properties" : {
          "vulnerableFunctionUsage" : {
            "type" : "string",
            "description" : "The usage of vulnerable functions",
            "readOnly" : true,
            "enum" : [ "IN_USE", "NOT_AVAILABLE", "NOT_IN_USE" ]
          },
          "vulnerableFunctionsInUse" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of vulnerable functions that are in use.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            }
          },
          "vulnerableFunctionsNotInUse" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of vulnerable functions that are not in use.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            }
          },
          "vulnerableFunctionsNotAvailable" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of vulnerable functions that are not available.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            }
          }
        },
        "description" : "Assessment of the remediation progress entity.",
        "readOnly" : true
      },
      "RemediationProgressEntityList" : {
        "type" : "object",
        "properties" : {
          "remediationProgressEntities" : {
            "type" : "array",
            "description" : "A list of remediation progress entities.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/RemediationProgressEntity"
            }
          }
        },
        "description" : "A list of remediation progress entities."
      },
      "RemediationProgressVulnerableComponent" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the vulnerable component.",
            "readOnly" : true
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the vulnerable component.",
            "readOnly" : true
          },
          "shortName" : {
            "type" : "string",
            "description" : "The short, component-only name of the vulnerable component.",
            "readOnly" : true
          },
          "fileName" : {
            "type" : "string",
            "description" : "The file name of the vulnerable component.",
            "readOnly" : true
          }
        },
        "description" : "A vulnerable component with details for a remediation progress entity (PGI)."
      },
      "CodeLevelVulnerabilityDetails" : {
        "type" : "object",
        "properties" : {
          "processGroupIds" : {
            "type" : "array",
            "description" : "The list of encoded MEIdentifier of the process groups.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "processGroups" : {
            "type" : "array",
            "description" : "The list of affected process groups.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "shortVulnerabilityLocation" : {
            "type" : "string",
            "description" : "The code location of the vulnerability without package and parameter.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type of code level vulnerability.",
            "readOnly" : true,
            "enum" : [ "CMD_INJECTION", "IMPROPER_INPUT_VALIDATION", "SQL_INJECTION" ]
          },
          "vulnerabilityLocation" : {
            "type" : "string",
            "description" : "The code location of the vulnerability.",
            "readOnly" : true
          },
          "vulnerableFunction" : {
            "type" : "string",
            "description" : "The vulnerable function of the vulnerability.",
            "readOnly" : true
          },
          "vulnerableFunctionInput" : {
            "$ref" : "#/components/schemas/VulnerableFunctionInput"
          }
        },
        "description" : "The details of a code-level vulnerability.",
        "readOnly" : true
      },
      "EntryPoint" : {
        "type" : "object",
        "properties" : {
          "sourceHttpPath" : {
            "type" : "string",
            "description" : "Source HTTP path of entry points.",
            "readOnly" : true
          },
          "usageSegments" : {
            "type" : "array",
            "description" : "List of entry point usage segments.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/EntryPointUsageSegment"
            }
          }
        },
        "description" : "Information about an entry point of a code-level vulnerability."
      },
      "EntryPointUsageSegment" : {
        "type" : "object",
        "properties" : {
          "sourceType" : {
            "type" : "string",
            "description" : "The type of the HTTP request part that contains the value that was used in this segment.",
            "readOnly" : true,
            "enum" : [ "HTTP_BODY", "HTTP_COOKIE", "HTTP_HEADER_NAME", "HTTP_HEADER_VALUE", "HTTP_OTHER", "HTTP_PARAMETER_NAME", "HTTP_PARAMETER_VALUE", "HTTP_URL", "UNKNOWN" ]
          },
          "sourceArgumentName" : {
            "type" : "string",
            "description" : "The name used in the source for this segment.",
            "readOnly" : true
          },
          "segmentType" : {
            "type" : "string",
            "description" : "The type of this input segment.",
            "readOnly" : true,
            "enum" : [ "MALICIOUS_INPUT", "REGULAR_INPUT", "TAINTED_INPUT" ]
          },
          "segmentValue" : {
            "type" : "string",
            "description" : "The value of this input segment.",
            "readOnly" : true
          }
        },
        "description" : "Describes one segment that was passed into a usage and the associated source name and type.",
        "readOnly" : true
      },
      "EntryPoints" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "description" : "A list of entry points.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/EntryPoint"
            }
          },
          "truncated" : {
            "type" : "boolean",
            "description" : "Indicates whether the list of entry points was truncated or not.",
            "readOnly" : true
          }
        },
        "description" : "A list of entry points and a flag which indicates whether this list was truncated or not.",
        "readOnly" : true
      },
      "FilteredCountsDto" : {
        "type" : "object",
        "properties" : {
          "affectedNodes" : {
            "type" : "integer",
            "description" : "Number of affected nodes",
            "format" : "int32",
            "readOnly" : true
          },
          "affectedProcessGroupInstances" : {
            "type" : "integer",
            "description" : "Number of affected processes",
            "format" : "int32",
            "readOnly" : true
          },
          "affectedProcessGroups" : {
            "type" : "integer",
            "description" : "Number of affected process groups",
            "format" : "int32",
            "readOnly" : true
          },
          "exposedProcessGroups" : {
            "type" : "integer",
            "description" : "Number of exposed process groups",
            "format" : "int32",
            "readOnly" : true
          },
          "reachableDataAssets" : {
            "type" : "integer",
            "description" : "Number of reachable data assets",
            "format" : "int32",
            "readOnly" : true
          },
          "relatedApplications" : {
            "type" : "integer",
            "description" : "Number of related applications",
            "format" : "int32",
            "readOnly" : true
          },
          "relatedAttacks" : {
            "type" : "integer",
            "description" : "Number of related attacks",
            "format" : "int32",
            "readOnly" : true
          },
          "relatedDatabases" : {
            "type" : "integer",
            "description" : "Number of related databases",
            "format" : "int32",
            "readOnly" : true
          },
          "relatedHosts" : {
            "type" : "integer",
            "description" : "Number of related hosts",
            "format" : "int32",
            "readOnly" : true
          },
          "relatedKubernetesClusters" : {
            "type" : "integer",
            "description" : "Number of related Kubernetes clusters",
            "format" : "int32",
            "readOnly" : true
          },
          "relatedKubernetesWorkloads" : {
            "type" : "integer",
            "description" : "Number of related Kubernetes workloads",
            "format" : "int32",
            "readOnly" : true
          },
          "relatedServices" : {
            "type" : "integer",
            "description" : "Number of related services",
            "format" : "int32",
            "readOnly" : true
          },
          "vulnerableComponents" : {
            "type" : "integer",
            "description" : "Number of vulnerable components",
            "format" : "int32",
            "readOnly" : true
          }
        },
        "description" : "Statistics about the security problem, filtered by the management zone and timeframe start ('from') query parameters."
      },
      "GlobalCountsDto" : {
        "type" : "object",
        "properties" : {
          "affectedNodes" : {
            "type" : "integer",
            "description" : "Number of affected nodes",
            "format" : "int32",
            "readOnly" : true
          },
          "affectedProcessGroupInstances" : {
            "type" : "integer",
            "description" : "Number of affected process group instances",
            "format" : "int32",
            "readOnly" : true
          },
          "affectedProcessGroups" : {
            "type" : "integer",
            "description" : "Number of affected process groups",
            "format" : "int32",
            "readOnly" : true
          },
          "exposedProcessGroups" : {
            "type" : "integer",
            "description" : "Number of exposed process groups",
            "format" : "int32",
            "readOnly" : true
          },
          "reachableDataAssets" : {
            "type" : "integer",
            "description" : "Number of reachable data assets exposed",
            "format" : "int32",
            "readOnly" : true
          },
          "relatedApplications" : {
            "type" : "integer",
            "description" : "Number of related applications",
            "format" : "int32",
            "readOnly" : true
          },
          "relatedAttacks" : {
            "type" : "integer",
            "description" : "Number of attacks on the exposed security problem",
            "format" : "int32",
            "readOnly" : true
          },
          "relatedHosts" : {
            "type" : "integer",
            "description" : "Number of related hosts",
            "format" : "int32",
            "readOnly" : true
          },
          "relatedKubernetesClusters" : {
            "type" : "integer",
            "description" : "Number of related kubernetes cluster",
            "format" : "int32",
            "readOnly" : true
          },
          "relatedKubernetesWorkloads" : {
            "type" : "integer",
            "description" : "Number of related kubernetes workloads",
            "format" : "int32",
            "readOnly" : true
          },
          "relatedServices" : {
            "type" : "integer",
            "description" : "Number of related services",
            "format" : "int32",
            "readOnly" : true
          },
          "vulnerableComponents" : {
            "type" : "integer",
            "description" : "Number of vulnerable components",
            "format" : "int32",
            "readOnly" : true
          }
        },
        "description" : "Globally calculated statistics about the security problem. No management zone information is taken into account.",
        "readOnly" : true
      },
      "RelatedAttacksList" : {
        "type" : "object",
        "properties" : {
          "attacks" : {
            "type" : "array",
            "description" : "A list of related attack ids.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A list of related attacks of the security problem. \n\nRelated attacks are attacks on the exposed security problem.",
        "readOnly" : true
      },
      "RelatedContainerImage" : {
        "type" : "object",
        "properties" : {
          "imageId" : {
            "type" : "string",
            "description" : "The image ID of the related container image.",
            "readOnly" : true
          },
          "imageName" : {
            "type" : "string",
            "description" : "The image name of the related container image.",
            "readOnly" : true
          },
          "numberOfAffectedEntities" : {
            "type" : "integer",
            "description" : "The number of affected entities.",
            "format" : "int32",
            "readOnly" : true
          },
          "affectedEntities" : {
            "type" : "array",
            "description" : "A list of affected entities.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "A list of affected entities.",
              "readOnly" : true
            }
          }
        },
        "description" : "Related container image of a security problem.",
        "readOnly" : true
      },
      "RelatedEntitiesList" : {
        "type" : "object",
        "properties" : {
          "applications" : {
            "type" : "array",
            "description" : "A list of related applications.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/RelatedEntity"
            }
          },
          "services" : {
            "type" : "array",
            "description" : "A list of related services.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/RelatedService"
            }
          },
          "hosts" : {
            "type" : "array",
            "description" : "A list of related hosts.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/RelatedEntity"
            }
          },
          "databases" : {
            "type" : "array",
            "description" : "A list of related databases.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "kubernetesWorkloads" : {
            "type" : "array",
            "description" : "A list of related Kubernetes workloads.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/RelatedEntity"
            }
          },
          "kubernetesClusters" : {
            "type" : "array",
            "description" : "A list of related Kubernetes clusters.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/RelatedEntity"
            }
          }
        },
        "description" : "A list of related entities of the security problem. \n\nA related entity is a monitored entity that is directly or indirectly related to an *affected entity* (for example, it could be a host where an affected process runs). \n\nEach related entity contains a list of corresponding affected entities (for example, an affected process running on this host).",
        "readOnly" : true
      },
      "RelatedEntity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the entity.",
            "readOnly" : true
          },
          "numberOfAffectedEntities" : {
            "type" : "integer",
            "description" : "The number of affected entities related to the entity.",
            "format" : "int64",
            "readOnly" : true
          },
          "affectedEntities" : {
            "type" : "array",
            "description" : "A list of affected entities related to the entity.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "A list of affected entities related to the entity.",
              "readOnly" : true
            }
          }
        },
        "description" : "An entity related to a security problem."
      },
      "RelatedService" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the entity.",
            "readOnly" : true
          },
          "numberOfAffectedEntities" : {
            "type" : "integer",
            "description" : "The number of affected entities related to the entity.",
            "format" : "int64",
            "readOnly" : true
          },
          "affectedEntities" : {
            "type" : "array",
            "description" : "A list of affected entities related to the entity.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "A list of affected entities related to the entity.",
              "readOnly" : true
            }
          },
          "exposure" : {
            "type" : "string",
            "description" : "The level of exposure of the service.",
            "readOnly" : true,
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "PUBLIC_NETWORK" ]
          }
        },
        "description" : "A service related to a security problem."
      },
      "RiskAssessment" : {
        "type" : "object",
        "properties" : {
          "riskLevel" : {
            "type" : "string",
            "description" : "The Davis risk level. \n\n It is calculated by Dynatrace on the basis of CVSS score.",
            "readOnly" : true,
            "enum" : [ "CRITICAL", "HIGH", "LOW", "MEDIUM", "NONE" ]
          },
          "riskScore" : {
            "type" : "number",
            "description" : "The Davis risk score (1-10). \n\n It is calculated by Dynatrace on the basis of CVSS score.",
            "format" : "float",
            "readOnly" : true
          },
          "riskVector" : {
            "type" : "string",
            "description" : "The attack vector calculated by Dynatrace based on the CVSS attack vector.",
            "readOnly" : true
          },
          "baseRiskLevel" : {
            "type" : "string",
            "description" : "The risk level from the CVSS score.",
            "readOnly" : true,
            "enum" : [ "CRITICAL", "HIGH", "LOW", "MEDIUM", "NONE" ]
          },
          "baseRiskScore" : {
            "type" : "number",
            "description" : "The risk score (1-10) from the CVSS score.",
            "format" : "float",
            "readOnly" : true
          },
          "baseRiskVector" : {
            "type" : "string",
            "description" : "The original attack vector of the CVSS assessment.",
            "readOnly" : true
          },
          "exposure" : {
            "type" : "string",
            "description" : "The level of exposure of affected entities.",
            "readOnly" : true,
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "PUBLIC_NETWORK" ]
          },
          "dataAssets" : {
            "type" : "string",
            "description" : "The reachability of related data assets by affected entities.",
            "readOnly" : true,
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "REACHABLE" ]
          },
          "publicExploit" : {
            "type" : "string",
            "description" : "The availability status of public exploits.",
            "readOnly" : true,
            "enum" : [ "AVAILABLE", "NOT_AVAILABLE" ]
          },
          "vulnerableFunctionUsage" : {
            "type" : "string",
            "description" : "The state of vulnerable code execution.",
            "readOnly" : true,
            "enum" : [ "IN_USE", "NOT_AVAILABLE", "NOT_IN_USE" ]
          },
          "assessmentAccuracy" : {
            "type" : "string",
            "description" : "The level of available information on which this assessment has been done.",
            "readOnly" : true,
            "enum" : [ "FULL", "NOT_AVAILABLE", "REDUCED" ]
          }
        },
        "description" : "Risk assessment of a security problem.",
        "readOnly" : true
      },
      "SecurityProblemDetails" : {
        "type" : "object",
        "properties" : {
          "securityProblemId" : {
            "type" : "string",
            "description" : "The ID of the security problem.",
            "readOnly" : true
          },
          "displayId" : {
            "type" : "string",
            "description" : "The display ID of the security problem.",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the security problem.",
            "readOnly" : true,
            "enum" : [ "OPEN", "RESOLVED" ]
          },
          "muted" : {
            "type" : "boolean",
            "description" : "The security problem is (`true`) or is not (`false`) muted.",
            "readOnly" : true
          },
          "externalVulnerabilityId" : {
            "type" : "string",
            "description" : "The external vulnerability ID of the security problem.",
            "readOnly" : true
          },
          "vulnerabilityType" : {
            "type" : "string",
            "description" : "The type of the vulnerability.",
            "readOnly" : true,
            "enum" : [ "CODE_LEVEL", "RUNTIME", "THIRD_PARTY" ]
          },
          "title" : {
            "type" : "string",
            "description" : "The title of the security problem.",
            "readOnly" : true
          },
          "packageName" : {
            "type" : "string",
            "description" : "The package name of the security problem.",
            "readOnly" : true
          },
          "url" : {
            "type" : "string",
            "description" : "The URL to the security problem details page.",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the security problem.",
            "readOnly" : true
          },
          "technology" : {
            "type" : "string",
            "description" : "The technology of the security problem.",
            "readOnly" : true,
            "enum" : [ "DOTNET", "GO", "JAVA", "KUBERNETES", "NODE_JS", "PHP" ]
          },
          "firstSeenTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of the first occurrence of the security problem.",
            "format" : "int64",
            "readOnly" : true
          },
          "lastUpdatedTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of the most recent security problem change.",
            "format" : "int64",
            "readOnly" : true
          },
          "lastOpenedTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp when the security problem was last opened.",
            "format" : "int64",
            "readOnly" : true
          },
          "lastResolvedTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp when the security problem was last resolved.",
            "format" : "int64",
            "readOnly" : true
          },
          "riskAssessment" : {
            "$ref" : "#/components/schemas/RiskAssessment"
          },
          "managementZones" : {
            "type" : "array",
            "description" : "A list of management zones which the affected entities belong to.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ManagementZone"
            }
          },
          "cveIds" : {
            "type" : "array",
            "description" : "A list of CVE IDs of the security problem.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "globalCounts" : {
            "$ref" : "#/components/schemas/GlobalCountsDto"
          },
          "filteredCounts" : {
            "$ref" : "#/components/schemas/FilteredCountsDto"
          },
          "codeLevelVulnerabilityDetails" : {
            "$ref" : "#/components/schemas/CodeLevelVulnerabilityDetails"
          },
          "events" : {
            "type" : "array",
            "description" : "An ordered (newest first) list of events of the security problem.",
            "items" : {
              "$ref" : "#/components/schemas/SecurityProblemEvent"
            }
          },
          "vulnerableComponents" : {
            "type" : "array",
            "description" : "A list of vulnerable components of the security problem. \n\nA vulnerable component is what causes the security problem.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VulnerableComponent"
            }
          },
          "affectedEntities" : {
            "type" : "array",
            "description" : "A list of affected entities of the security problem. \n\nAn affected entity is an entity where a vulnerable component runs.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "exposedEntities" : {
            "type" : "array",
            "description" : "A list of exposed entities of the security problem. \n\nAn exposed entity is an affected entity that is exposed to the internet.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "reachableDataAssets" : {
            "type" : "array",
            "description" : "A list of data assets reachable by affected entities of the security problem. \n\nA data asset is a service that has database access.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "relatedEntities" : {
            "$ref" : "#/components/schemas/RelatedEntitiesList"
          },
          "relatedContainerImages" : {
            "type" : "array",
            "description" : "A list of related container images of the security problem. \n\nA related container image is a container image that contains at least one *affected entity*.",
            "readOnly" : true,
            "items" : {
              "type" : "object",
              "properties" : {
                "containerImages" : {
                  "type" : "array",
                  "description" : "A list of related container images.",
                  "readOnly" : true,
                  "items" : {
                    "$ref" : "#/components/schemas/RelatedContainerImage"
                  }
                }
              },
              "description" : "A list of related container images."
            }
          },
          "relatedAttacks" : {
            "$ref" : "#/components/schemas/RelatedAttacksList"
          },
          "muteStateChangeInProgress" : {
            "type" : "boolean",
            "description" : "If `true` a change of the mute state is in progress.",
            "readOnly" : true
          },
          "entryPoints" : {
            "$ref" : "#/components/schemas/EntryPoints"
          }
        },
        "description" : "Parameters of a security problem"
      },
      "SecurityProblem" : {
        "type" : "object",
        "properties" : {
          "securityProblemId" : {
            "type" : "string",
            "description" : "The ID of the security problem.",
            "readOnly" : true
          },
          "displayId" : {
            "type" : "string",
            "description" : "The display ID of the security problem.",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the security problem.",
            "readOnly" : true,
            "enum" : [ "OPEN", "RESOLVED" ]
          },
          "muted" : {
            "type" : "boolean",
            "description" : "The security problem is (`true`) or is not (`false`) muted.",
            "readOnly" : true
          },
          "externalVulnerabilityId" : {
            "type" : "string",
            "description" : "The external vulnerability ID of the security problem.",
            "readOnly" : true
          },
          "vulnerabilityType" : {
            "type" : "string",
            "description" : "The type of the vulnerability.",
            "readOnly" : true,
            "enum" : [ "CODE_LEVEL", "RUNTIME", "THIRD_PARTY" ]
          },
          "title" : {
            "type" : "string",
            "description" : "The title of the security problem.",
            "readOnly" : true
          },
          "packageName" : {
            "type" : "string",
            "description" : "The package name of the security problem.",
            "readOnly" : true
          },
          "url" : {
            "type" : "string",
            "description" : "The URL to the security problem details page.",
            "readOnly" : true
          },
          "technology" : {
            "type" : "string",
            "description" : "The technology of the security problem.",
            "readOnly" : true,
            "enum" : [ "DOTNET", "GO", "JAVA", "KUBERNETES", "NODE_JS", "PHP" ]
          },
          "firstSeenTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of the first occurrence of the security problem.",
            "format" : "int64",
            "readOnly" : true
          },
          "lastUpdatedTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of the most recent security problem change.",
            "format" : "int64",
            "readOnly" : true
          },
          "lastOpenedTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp when the security problem was last opened.",
            "format" : "int64",
            "readOnly" : true
          },
          "lastResolvedTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp when the security problem was last resolved.",
            "format" : "int64",
            "readOnly" : true
          },
          "riskAssessment" : {
            "$ref" : "#/components/schemas/RiskAssessment"
          },
          "managementZones" : {
            "type" : "array",
            "description" : "A list of management zones which the affected entities belong to.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ManagementZone"
            }
          },
          "cveIds" : {
            "type" : "array",
            "description" : "A list of CVE IDs of the security problem.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "globalCounts" : {
            "$ref" : "#/components/schemas/GlobalCountsDto"
          },
          "codeLevelVulnerabilityDetails" : {
            "$ref" : "#/components/schemas/CodeLevelVulnerabilityDetails"
          }
        },
        "description" : "Parameters of a security problem"
      },
      "SecurityProblemList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "securityProblems" : {
            "type" : "array",
            "description" : "A list of security problems.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/SecurityProblem"
            }
          }
        },
        "description" : "A list of security problems."
      },
      "ProcessGroupVulnerableFunctions" : {
        "type" : "object",
        "properties" : {
          "processGroup" : {
            "type" : "string",
            "description" : "The process group identifier.",
            "readOnly" : true
          },
          "functionsInUse" : {
            "type" : "array",
            "description" : "A list of vulnerable functions in use.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            }
          },
          "functionsNotInUse" : {
            "type" : "array",
            "description" : "A list of vulnerable functions not in use.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            }
          },
          "functionsNotAvailable" : {
            "type" : "array",
            "description" : "A list of vulnerable functions with unknown state.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            }
          }
        },
        "description" : "The vulnerable functions of a process group including their usage."
      },
      "VulnerableFunctionProcessGroups" : {
        "type" : "object",
        "properties" : {
          "function" : {
            "$ref" : "#/components/schemas/VulnerableFunction"
          },
          "usage" : {
            "type" : "string",
            "description" : "The vulnerable function usage based on the given process groups:\n* IN_USE if at least one process group calls this vulnerable function.\n* NOT_IN_USE if all process groups do not call this vulnerable function.\n* NOT_AVAILABLE if vulnerable function usage could not be calculated for at least one process group and no process group calls this vulnerable function.",
            "readOnly" : true,
            "enum" : [ "IN_USE", "NOT_AVAILABLE", "NOT_IN_USE" ]
          },
          "processGroupsInUse" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The process group identifiers, where this vulnerable function is in use.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "The process group identifiers, where this vulnerable function is in use.",
              "readOnly" : true
            }
          },
          "processGroupsNotInUse" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The process group identifiers, where this vulnerable function is not in use.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "The process group identifiers, where this vulnerable function is not in use.",
              "readOnly" : true
            }
          },
          "processGroupsNotAvailable" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The process group identifiers, where information about the usage of this function not available.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "The process group identifiers, where information about the usage of this function not available.",
              "readOnly" : true
            }
          }
        },
        "description" : "A vulnerable function including its usage by specific process groups in context of the security problem."
      },
      "VulnerableFunctionsContainer" : {
        "type" : "object",
        "properties" : {
          "vulnerableFunctions" : {
            "type" : "array",
            "description" : "A list of vulnerable functions, their security problem wide usages and their usages per process group.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunctionProcessGroups"
            }
          },
          "vulnerableFunctionsByProcessGroup" : {
            "type" : "array",
            "description" : "A list of vulnerable function usages per process group for a security problem.\nThe result is sorted based on the following criteria: \n* the number of vulnerable functions in use (descending).\n* the number of vulnerable functions not in use (descending).\n* the number of vulnerable functions not available (descending).\n* the process group identifier (ascending)",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProcessGroupVulnerableFunctions"
            }
          }
        },
        "description" : "A list of vulnerable functions, their security problem wide usages and their usages per process group.\nOptional: A list of vulnerable function usages per process group for a security problem."
      },
      "SecurityProblemMute" : {
        "required" : [ "reason" ],
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string",
            "description" : "The reason for muting a security problem.",
            "writeOnly" : true,
            "enum" : [ "CONFIGURATION_NOT_AFFECTED", "FALSE_POSITIVE", "IGNORE", "OTHER", "VULNERABLE_CODE_NOT_IN_USE" ]
          },
          "comment" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string",
            "description" : "A comment about the muting reason.",
            "writeOnly" : true
          }
        },
        "description" : "Information on muting a security problem."
      },
      "RemediationItemMuteStateChange" : {
        "required" : [ "comment", "muted", "reason" ],
        "type" : "object",
        "properties" : {
          "muted" : {
            "type" : "boolean",
            "description" : "The desired mute state of the remediation item.",
            "writeOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the mute state change.",
            "writeOnly" : true,
            "example" : "IGNORE",
            "enum" : [ "AFFECTED", "CONFIGURATION_NOT_AFFECTED", "FALSE_POSITIVE", "IGNORE", "INITIAL_STATE", "OTHER", "VULNERABLE_CODE_NOT_IN_USE" ]
          },
          "comment" : {
            "type" : "string",
            "description" : "A comment about the mute state change reason.",
            "writeOnly" : true
          }
        },
        "description" : "An updated configuration of the remediation item's mute state."
      },
      "SecurityProblemUnmute" : {
        "required" : [ "reason" ],
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string",
            "description" : "The reason for un-muting a security problem.",
            "writeOnly" : true,
            "enum" : [ "AFFECTED" ]
          },
          "comment" : {
            "maxLength" : 250,
            "minLength" : 0,
            "type" : "string",
            "description" : "A comment about the un-muting reason.",
            "writeOnly" : true
          }
        },
        "description" : "Information on un-muting a security problem."
      },
      "CredentialsId" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the credentials set."
          }
        },
        "description" : "A short representation of the credentials set.",
        "example" : {
          "id" : "CREDENTIALS_VAULT-C43F2C2E6395AD23"
        }
      },
      "AzureClientSecret" : {
        "type" : "object",
        "description" : "Synchronization credentials with Azure Key Vault using client secret authentication method",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVault"
        }, {
          "type" : "object",
          "properties" : {
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant (directory) ID of Azure application in Azure Active Directory which has permission to access secrets in Azure Key Vault."
            },
            "clientId" : {
              "type" : "string",
              "description" : "Client (application) ID of Azure application in Azure Active Directory which has permission to access secrets in Azure Key Vault."
            },
            "clientSecret" : {
              "type" : "string",
              "description" : "Client secret generated for Azure application in Azure Active Directory used for proving identity when requesting a token used later for accessing secrets in Azure Key Vault."
            }
          }
        } ]
      },
      "CertificateCredentials" : {
        "required" : [ "certificate", "certificateFormat", "name", "password", "scope", "scopes" ],
        "type" : "object",
        "description" : "A credentials set of the `CERTIFICATE` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Credentials"
        }, {
          "type" : "object",
          "properties" : {
            "certificate" : {
              "type" : "string",
              "description" : "The certificate in the string format."
            },
            "password" : {
              "type" : "string",
              "description" : "The password of the credential (Base64 encoded)."
            },
            "certificateFormat" : {
              "type" : "string",
              "description" : "The certificate format.",
              "enum" : [ "PEM", "PKCS12", "UNKNOWN" ]
            }
          }
        } ]
      },
      "Credentials" : {
        "required" : [ "name", "scope", "scopes" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the credentials set."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the credentials set."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the credentials set."
          },
          "ownerAccessOnly" : {
            "type" : "boolean",
            "description" : "The credentials set is available to every user (`false`) or to owner only (`true`)."
          },
          "scope" : {
            "type" : "string",
            "description" : "The scope of the credentials set.",
            "deprecated" : true,
            "enum" : [ "ALL", "EXTENSION", "SYNTHETIC", "UNKNOWN" ]
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The set of scopes of the credentials set.",
            "items" : {
              "type" : "string",
              "description" : "The set of scopes of the credentials set.",
              "enum" : [ "ALL", "EXTENSION", "SYNTHETIC", "UNKNOWN" ]
            }
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `CERTIFICATE` -> CertificateCredentials \n* `PUBLIC_CERTIFICATE` -> PublicCertificateCredentials \n* `USERNAME_PASSWORD` -> UserPasswordCredentials \n* `TOKEN` -> TokenCredentials \n",
            "enum" : [ "CERTIFICATE", "PUBLIC_CERTIFICATE", "TOKEN", "USERNAME_PASSWORD" ]
          }
        },
        "description" : "A set of credentials for synthetic monitors. \n\nThe actual set of fields depends on the type of credentials. Find the list of actual objects in the description of the **type** field or see [Credential vault API - JSON models](https://dt-url.net/2sa3sen).",
        "example" : {
          "name" : "Sample credentials",
          "type" : "USERNAME_PASSWORD",
          "description" : "Sample set of credentials for API documentation",
          "user" : "john.smith",
          "password" : "1234abcd",
          "ownerAccessOnly" : true,
          "scope" : "SYNTHETIC",
          "scopes" : [ "SYNTHETIC", "EXTENSION_AUTHENTICATION" ]
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "CERTIFICATE" : "#/components/schemas/CertificateCredentials",
            "PUBLIC_CERTIFICATE" : "#/components/schemas/PublicCertificateCredentials",
            "USERNAME_PASSWORD" : "#/components/schemas/UserPasswordCredentials",
            "TOKEN" : "#/components/schemas/TokenCredentials"
          }
        }
      },
      "CyberArkAllowedLocationDto" : {
        "required" : [ "accountName", "applicationId", "safeName" ],
        "type" : "object",
        "description" : "Synchronization credentials with CyberArk Vault using allowed machines (location) authentication method.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVault"
        }, {
          "type" : "object",
          "properties" : {
            "certificate" : {
              "type" : "string",
              "description" : "[Optional] Certificate used for authentication to CyberArk application. ID of certificate credential saved in Dynatrace CV."
            },
            "applicationId" : {
              "type" : "string",
              "description" : "Application ID connected to CyberArk Vault."
            },
            "safeName" : {
              "type" : "string",
              "description" : "Safe name connected to CyberArk Vault."
            },
            "folderName" : {
              "type" : "string",
              "description" : "[Optional] Folder name where credentials in CyberArk Vault are stored. Default folder name is 'Root'."
            },
            "accountName" : {
              "type" : "string",
              "description" : "Account name that stores the username and password to retrieve and synchronize with the Dynatrace Credential Vault: This is NOT the name of the account logged into the CyberArk Central Credential Provider."
            }
          }
        } ]
      },
      "CyberArkUsernamePassword" : {
        "required" : [ "accountName", "applicationId", "safeName", "usernamePasswordForCPM" ],
        "type" : "object",
        "description" : "Synchronization credentials with CyberArk Vault using username password authentication method.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVault"
        }, {
          "type" : "object",
          "properties" : {
            "usernamePasswordForCPM" : {
              "type" : "string",
              "description" : "Dynatrace credential ID of the username-password pair used for authentication to the CyberArk Central Credential Provider"
            },
            "certificate" : {
              "type" : "string",
              "description" : "[Optional] Certificate used for authentication to CyberArk application. ID of certificate credential saved in Dynatrace CV."
            },
            "applicationId" : {
              "type" : "string",
              "description" : "Application ID connected to CyberArk Vault."
            },
            "safeName" : {
              "type" : "string",
              "description" : "Safe name connected to CyberArk Vault."
            },
            "folderName" : {
              "type" : "string",
              "description" : "[Optional] Folder name where credentials in CyberArk Vault are stored. Default folder name is 'Root'."
            },
            "accountName" : {
              "type" : "string",
              "description" : "Account name that stores the username and password to retrieve and synchronize with the Dynatrace Credential Vault: This is NOT the name of the account logged into the CyberArk Central Credential Provider."
            }
          }
        } ]
      },
      "ExternalVault" : {
        "type" : "object",
        "properties" : {
          "sourceAuthMethod" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `HASHICORP_VAULT_APPROLE` -> HashicorpApprole \n* `HASHICORP_VAULT_CERTIFICATE` -> HashicorpCertificate \n* `AZURE_KEY_VAULT_CLIENT_SECRET` -> AzureClientSecret \n* `CYBERARK_VAULT_USERNAME_PASSWORD` -> CyberArkUsernamePassword \n* `CYBERARK_VAULT_ALLOWED_LOCATION` -> CyberArkAllowedLocationDto \n",
            "enum" : [ "AZURE_KEY_VAULT_CLIENT_SECRET", "CYBERARK_VAULT_ALLOWED_LOCATION", "CYBERARK_VAULT_USERNAME_PASSWORD", "HASHICORP_VAULT_APPROLE", "HASHICORP_VAULT_CERTIFICATE" ]
          },
          "vaultUrl" : {
            "type" : "string",
            "description" : "External vault URL."
          },
          "usernameSecretName" : {
            "type" : "string",
            "description" : "The name of the secret saved in external vault where username is stored."
          },
          "passwordSecretName" : {
            "type" : "string",
            "description" : "The name of the secret saved in external vault where password is stored."
          },
          "tokenSecretName" : {
            "type" : "string",
            "description" : "The name of the secret saved in external vault where token is stored."
          },
          "locationForSynchronizationId" : {
            "type" : "string",
            "description" : "Id of a location used by the synchronizing monitor"
          }
        },
        "description" : "Information for synchronization credentials with external vault",
        "example" : {
          "name" : "Sample username-password credentials synchronized with Hashicorp vault",
          "id" : "CREDENTIALS_VAULT-C43F2C2E6395AD23",
          "type" : "USERNAME_PASSWORD",
          "description" : "Sample credentials for demo purposes.",
          "owner" : "user@domain.com",
          "ownerAccessOnly" : true,
          "scope" : "SYNTHETIC",
          "externalVault" : {
            "sourceAuthMethod" : "HASHICORP_VAULT_APPROLE",
            "vaultUrl" : "https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200",
            "usernameSecretName" : "username",
            "passwordSecretName" : "password",
            "pathToCredentials" : "kv/credentials",
            "roleId" : "00e4858c-ec33-bc99-4e7e-34de6967de6c",
            "secretId" : "CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX",
            "vaultNamespace" : "admin"
          }
        },
        "discriminator" : {
          "propertyName" : "sourceAuthMethod",
          "mapping" : {
            "HASHICORP_VAULT_APPROLE" : "#/components/schemas/HashicorpApprole",
            "HASHICORP_VAULT_CERTIFICATE" : "#/components/schemas/HashicorpCertificate",
            "AZURE_KEY_VAULT_CLIENT_SECRET" : "#/components/schemas/AzureClientSecret",
            "CYBERARK_VAULT_USERNAME_PASSWORD" : "#/components/schemas/CyberArkUsernamePassword",
            "CYBERARK_VAULT_ALLOWED_LOCATION" : "#/components/schemas/CyberArkAllowedLocationDto"
          }
        }
      },
      "HashicorpApprole" : {
        "required" : [ "pathToCredentials", "roleId", "secretId", "vaultNamespace" ],
        "type" : "object",
        "description" : "Synchronization credentials with HashiCorp Vault using appRole authentication method",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVault"
        }, {
          "type" : "object",
          "properties" : {
            "pathToCredentials" : {
              "type" : "string",
              "description" : "Path to folder where credentials in HashiCorp Vault are stored."
            },
            "roleId" : {
              "type" : "string",
              "description" : "Role ID is similar to username when you want to authenticate in HashiCorp Vault using AppRole."
            },
            "secretId" : {
              "type" : "string",
              "description" : "Secret ID is similar to password when you want to authenticate in HashiCorp Vault using AppRole. ID of token representing secret ID saved in Dynatrace CV."
            },
            "vaultNamespace" : {
              "type" : "string",
              "description" : "Vault namespace in HashiCorp Vault. It is an information you set as environmental variable VAULT_NAMESPACE if you are accessing HashiCorp Vault from command line."
            }
          }
        } ]
      },
      "HashicorpCertificate" : {
        "type" : "object",
        "description" : "Synchronization credentials with HashiCorp Vault using certificate authentication method",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVault"
        }, {
          "type" : "object",
          "properties" : {
            "pathToCredentials" : {
              "type" : "string",
              "description" : "Path to folder where credentials in HashiCorp Vault are stored."
            },
            "certificate" : {
              "type" : "string",
              "description" : "ID of certificate saved in Dynatrace CV. Using this certificate you can authenticate to your HashiCorp Vault."
            }
          }
        } ]
      },
      "PublicCertificateCredentials" : {
        "required" : [ "certificate", "certificateFormat", "name", "password", "scope", "scopes" ],
        "type" : "object",
        "description" : "A credentials set of the `PUBLIC_CERTIFICATE` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Credentials"
        }, {
          "type" : "object",
          "properties" : {
            "certificate" : {
              "type" : "string",
              "description" : "The certificate in the string format."
            },
            "password" : {
              "type" : "string",
              "description" : "The password of the credential (not supported)."
            },
            "certificateFormat" : {
              "type" : "string",
              "description" : "The certificate format.",
              "enum" : [ "PEM", "PKCS12", "UNKNOWN" ]
            }
          }
        } ]
      },
      "TokenCredentials" : {
        "required" : [ "name", "scope", "scopes" ],
        "type" : "object",
        "description" : "A credentials set of the `TOKEN` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Credentials"
        }, {
          "type" : "object",
          "properties" : {
            "token" : {
              "type" : "string",
              "description" : "Token in the string format."
            },
            "externalVault" : {
              "$ref" : "#/components/schemas/ExternalVault"
            }
          }
        } ]
      },
      "UserPasswordCredentials" : {
        "required" : [ "name", "scope", "scopes" ],
        "type" : "object",
        "description" : "A credentials set of the `USERNAME_PASSWORD` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Credentials"
        }, {
          "type" : "object",
          "properties" : {
            "user" : {
              "type" : "string",
              "description" : "The username of the credentials set."
            },
            "password" : {
              "type" : "string",
              "description" : "The password of the credential."
            },
            "externalVault" : {
              "$ref" : "#/components/schemas/ExternalVault"
            }
          }
        } ]
      },
      "AzureClientSecretConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVaultConfig"
        }, {
          "type" : "object",
          "properties" : {
            "tenantId" : {
              "type" : "string"
            },
            "clientId" : {
              "type" : "string"
            },
            "clientSecret" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CredentialUsageHandler" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of usage."
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of uses.",
            "format" : "int32"
          }
        },
        "description" : "Keeps information about credential's usage."
      },
      "CredentialsResponseElement" : {
        "required" : [ "credentialUsageSummary", "description", "name", "owner", "ownerAccessOnly", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the credentials set."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the credentials set."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the credentials set."
          },
          "owner" : {
            "type" : "string",
            "description" : "The owner of the credential (user for which used API token was created)."
          },
          "ownerAccessOnly" : {
            "type" : "boolean",
            "description" : "Flag indicating that this credential is visible only to the owner."
          },
          "scope" : {
            "type" : "string",
            "description" : "The scope of the credentials set.",
            "enum" : [ "ALL", "EXTENSION", "SYNTHETIC", "UNKNOWN" ]
          },
          "externalVault" : {
            "$ref" : "#/components/schemas/ExternalVaultConfig"
          },
          "credentialUsageSummary" : {
            "type" : "array",
            "description" : "The list contains summary data related to the use of credentials.",
            "items" : {
              "$ref" : "#/components/schemas/CredentialUsageHandler"
            }
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The set of scopes of the credentials set.",
            "items" : {
              "type" : "string",
              "description" : "The set of scopes of the credentials set.",
              "enum" : [ "ALL", "EXTENSION", "SYNTHETIC", "UNKNOWN" ]
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the credentials set.",
            "enum" : [ "CERTIFICATE", "PUBLIC_CERTIFICATE", "TOKEN", "UNKNOWN", "USERNAME_PASSWORD" ]
          }
        },
        "description" : "Metadata of the credentials set.",
        "example" : {
          "name" : "Sample username-password credentials",
          "id" : "CREDENTIALS_VAULT-C43F2C2E6395AD23",
          "type" : "USERNAME_PASSWORD",
          "description" : "Sample credentials for demo purposes.",
          "owner" : "user@domain.com",
          "ownerAccessOnly" : true,
          "scope" : "SYNTHETIC",
          "externalVault" : {
            "sourceAuthMethod" : "HASHICORP_VAULT_APPROLE",
            "vaultUrl" : "https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200",
            "usernameSecretName" : "username",
            "passwordSecretName" : "password",
            "pathToCredentials" : "kv/credentials",
            "roleId" : "00e4858c-ec33-bc99-4e7e-34de6967de6c",
            "secretId" : "CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX",
            "vaultNamespace" : "admin"
          },
          "credentialUsageSummary" : [ {
            "HTTP_MONITOR" : 3,
            "BROWSER_MONITOR" : 2
          } ]
        }
      },
      "CyberArkAllowedLocationConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVaultConfig"
        }, {
          "type" : "object",
          "properties" : {
            "certificate" : {
              "type" : "string"
            },
            "applicationId" : {
              "type" : "string"
            },
            "safeName" : {
              "type" : "string"
            },
            "folderName" : {
              "type" : "string"
            },
            "accountName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CyberArkUsernamePasswordConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVaultConfig"
        }, {
          "type" : "object",
          "properties" : {
            "usernamePasswordForCPM" : {
              "type" : "string"
            },
            "certificate" : {
              "type" : "string"
            },
            "applicationId" : {
              "type" : "string"
            },
            "safeName" : {
              "type" : "string"
            },
            "folderName" : {
              "type" : "string"
            },
            "accountName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ExternalVaultConfig" : {
        "type" : "object",
        "properties" : {
          "sourceAuthMethod" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `HASHICORP_VAULT_APPROLE` -> HashicorpApproleConfig \n* `HASHICORP_VAULT_CERTIFICATE` -> HashicorpCertificateConfig \n* `AZURE_KEY_VAULT_CLIENT_SECRET` -> AzureClientSecretConfig \n* `CYBERARK_VAULT_USERNAME_PASSWORD` -> CyberArkUsernamePasswordConfig \n* `CYBERARK_VAULT_ALLOWED_LOCATION` -> CyberArkAllowedLocationConfig \n",
            "enum" : [ "AZURE_KEY_VAULT_CLIENT_SECRET", "CYBERARK_VAULT_ALLOWED_LOCATION", "CYBERARK_VAULT_USERNAME_PASSWORD", "HASHICORP_VAULT_APPROLE", "HASHICORP_VAULT_CERTIFICATE" ]
          },
          "vaultUrl" : {
            "type" : "string"
          },
          "usernameSecretName" : {
            "type" : "string"
          },
          "passwordSecretName" : {
            "type" : "string"
          },
          "tokenSecretName" : {
            "type" : "string"
          },
          "credentialsUsedForExternalSynchronization" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "type" : {
            "type" : "string",
            "enum" : [ "AZURE_CERTIFICATE_MODEL", "AZURE_CLIENT_SECRET_MODEL", "CYBERARK_VAULT_ALLOWED_LOCATION_MODEL", "CYBERARK_VAULT_USERNAME_PASSWORD_MODEL", "HASHICORP_APPROLE_MODEL", "HASHICORP_CERTIFICATE_MODEL" ]
          }
        },
        "description" : "Configuration for external vault synchronization for username and password credentials.",
        "discriminator" : {
          "propertyName" : "sourceAuthMethod",
          "mapping" : {
            "HASHICORP_VAULT_APPROLE" : "#/components/schemas/HashicorpApproleConfig",
            "HASHICORP_VAULT_CERTIFICATE" : "#/components/schemas/HashicorpCertificateConfig",
            "AZURE_KEY_VAULT_CLIENT_SECRET" : "#/components/schemas/AzureClientSecretConfig",
            "CYBERARK_VAULT_USERNAME_PASSWORD" : "#/components/schemas/CyberArkUsernamePasswordConfig",
            "CYBERARK_VAULT_ALLOWED_LOCATION" : "#/components/schemas/CyberArkAllowedLocationConfig"
          }
        }
      },
      "HashicorpApproleConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVaultConfig"
        }, {
          "type" : "object",
          "properties" : {
            "pathToCredentials" : {
              "type" : "string"
            },
            "roleId" : {
              "type" : "string"
            },
            "secretId" : {
              "type" : "string"
            },
            "vaultNamespace" : {
              "type" : "string"
            }
          }
        } ]
      },
      "HashicorpCertificateConfig" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExternalVaultConfig"
        }, {
          "type" : "object",
          "properties" : {
            "pathToCredentials" : {
              "type" : "string"
            },
            "certificate" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AbstractCredentialsResponseElement" : {
        "required" : [ "credentialUsageSummary", "description", "name", "owner", "ownerAccessOnly", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the credentials set."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the credentials set."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the credentials set."
          },
          "owner" : {
            "type" : "string",
            "description" : "The owner of the credential (user for which used API token was created)."
          },
          "ownerAccessOnly" : {
            "type" : "boolean",
            "description" : "Flag indicating that this credential is visible only to the owner."
          },
          "scope" : {
            "type" : "string",
            "description" : "The scope of the credentials set.",
            "enum" : [ "ALL", "EXTENSION", "SYNTHETIC", "UNKNOWN" ]
          },
          "externalVault" : {
            "$ref" : "#/components/schemas/ExternalVaultConfig"
          },
          "credentialUsageSummary" : {
            "type" : "array",
            "description" : "The list contains summary data related to the use of credentials.",
            "items" : {
              "$ref" : "#/components/schemas/CredentialUsageHandler"
            }
          },
          "scopes" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The set of scopes of the credentials set.",
            "items" : {
              "type" : "string",
              "description" : "The set of scopes of the credentials set.",
              "enum" : [ "ALL", "EXTENSION", "SYNTHETIC", "UNKNOWN" ]
            }
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `USERNAME_PASSWORD` -> CredentialsDetailsUsernamePasswordResponseElement \n* `CERTIFICATE` -> CredentialsDetailsCertificateResponseElement \n* `TOKEN` -> CredentialsDetailsTokenResponseElement \n* `PUBLIC_CERTIFICATE` -> CredentialsDetailsCertificateResponseElement \n",
            "enum" : [ "CERTIFICATE", "PUBLIC_CERTIFICATE", "TOKEN", "USERNAME_PASSWORD" ]
          }
        },
        "description" : "Credentials set.",
        "example" : {
          "name" : "Sample certificate credentials",
          "id" : "CREDENTIALS_VAULT-C43F2C2E6395AD23",
          "type" : "CERTIFICATE",
          "certificateType" : "PKCS12",
          "certificate" : "c2FtcGxlX2NlcnRpZmljYXRlLg==",
          "password" : "c2FtcGxlX3Bhc3N3b3JkLg==",
          "description" : "Sample credentials for demo purposes.",
          "owner" : "user@domain.com",
          "ownerAccessOnly" : true,
          "scope" : "SYNTHETIC",
          "externalVault" : {
            "sourceAuthMethod" : "HASHICORP_VAULT_APPROLE",
            "vaultUrl" : "https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200",
            "usernameSecretName" : "username",
            "passwordSecretName" : "password",
            "pathToCredentials" : "kv/credentials",
            "roleId" : "00e4858c-ec33-bc99-4e7e-34de6967de6c",
            "secretId" : "CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX",
            "vaultNamespace" : "admin"
          },
          "credentialUsageSummary" : [ {
            "HTTP_MONITOR" : 3,
            "BROWSER_MONITOR" : 2
          } ]
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "USERNAME_PASSWORD" : "#/components/schemas/CredentialsDetailsUsernamePasswordResponseElement",
            "CERTIFICATE" : "#/components/schemas/CredentialsDetailsCertificateResponseElement",
            "TOKEN" : "#/components/schemas/CredentialsDetailsTokenResponseElement",
            "PUBLIC_CERTIFICATE" : "#/components/schemas/CredentialsDetailsCertificateResponseElement"
          }
        }
      },
      "CredentialsDetailsCertificateResponseElement" : {
        "required" : [ "credentialUsageSummary", "description", "name", "owner", "ownerAccessOnly", "type" ],
        "type" : "object",
        "description" : "Details of certificate credentials set.",
        "example" : {
          "name" : "Sample certificate credentials",
          "id" : "CREDENTIALS_VAULT-C43F2C2E6395AD23",
          "type" : "CERTIFICATE",
          "certificateType" : "PKCS12",
          "certificate" : "c2FtcGxlX2NlcnRpZmljYXRlLg==",
          "password" : "c2FtcGxlX3Bhc3N3b3JkLg==",
          "description" : "Sample credentials for demo purposes.",
          "owner" : "user@domain.com",
          "ownerAccessOnly" : true,
          "scope" : "SYNTHETIC",
          "externalVault" : {
            "sourceAuthMethod" : "HASHICORP_VAULT_APPROLE",
            "vaultUrl" : "https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200",
            "usernameSecretName" : "username",
            "passwordSecretName" : "password",
            "pathToCredentials" : "kv/credentials",
            "roleId" : "00e4858c-ec33-bc99-4e7e-34de6967de6c",
            "secretId" : "CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX",
            "vaultNamespace" : "admin"
          },
          "credentialUsageSummary" : [ {
            "HTTP_MONITOR" : 3,
            "BROWSER_MONITOR" : 2
          } ]
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/AbstractCredentialsResponseElement"
        }, {
          "type" : "object",
          "properties" : {
            "password" : {
              "type" : "string",
              "description" : "Base64 encoded password"
            },
            "certificate" : {
              "type" : "string",
              "description" : "Base64 encoded certificate bytes"
            },
            "certificateType" : {
              "type" : "string",
              "description" : "Certificate type: PEM, PKCS12 or UNKNOWN"
            }
          }
        } ]
      },
      "CredentialsDetailsTokenResponseElement" : {
        "required" : [ "credentialUsageSummary", "description", "name", "owner", "ownerAccessOnly", "type" ],
        "type" : "object",
        "description" : "Details of the token credentials set.",
        "example" : {
          "name" : "Sample token credentials",
          "id" : "CREDENTIALS_VAULT-C43F2C2E6395AD23",
          "type" : "TOKEN",
          "token" : "sample_token",
          "description" : "Sample credentials for demo purposes.",
          "owner" : "user@domain.com",
          "ownerAccessOnly" : true,
          "scope" : "SYNTHETIC",
          "externalVault" : {
            "sourceAuthMethod" : "HASHICORP_VAULT_APPROLE",
            "vaultUrl" : "https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200",
            "usernameSecretName" : "username",
            "passwordSecretName" : "password",
            "pathToCredentials" : "kv/credentials",
            "roleId" : "00e4858c-ec33-bc99-4e7e-34de6967de6c",
            "secretId" : "CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX",
            "vaultNamespace" : "admin"
          },
          "credentialUsageSummary" : [ {
            "HTTP_MONITOR" : 3,
            "BROWSER_MONITOR" : 2
          } ]
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/AbstractCredentialsResponseElement"
        }, {
          "type" : "object",
          "properties" : {
            "token" : {
              "type" : "string",
              "description" : "Plain text token value"
            }
          }
        } ]
      },
      "CredentialsDetailsUsernamePasswordResponseElement" : {
        "required" : [ "credentialUsageSummary", "description", "name", "owner", "ownerAccessOnly", "type" ],
        "type" : "object",
        "description" : "Details of username and password credentials set.",
        "example" : {
          "name" : "Sample username-password credentials",
          "id" : "CREDENTIALS_VAULT-C43F2C2E6395AD23",
          "type" : "USERNAME_PASSWORD",
          "username" : "sample_user_name",
          "password" : "sample_password",
          "description" : "Sample credentials for demo purposes.",
          "owner" : "user@domain.com",
          "ownerAccessOnly" : true,
          "scope" : "SYNTHETIC",
          "externalVault" : {
            "sourceAuthMethod" : "HASHICORP_VAULT_APPROLE",
            "vaultUrl" : "https://vault-cluster.vault.fb17d2fc-be92-4230-afa2-91dbfda3cbad.aws.hashicorp.cloud:8200",
            "usernameSecretName" : "username",
            "passwordSecretName" : "password",
            "pathToCredentials" : "kv/credentials",
            "roleId" : "00e4858c-ec33-bc99-4e7e-34de6967de6c",
            "secretId" : "CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX",
            "vaultNamespace" : "admin"
          },
          "credentialUsageSummary" : [ {
            "HTTP_MONITOR" : 3,
            "BROWSER_MONITOR" : 2
          } ]
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/AbstractCredentialsResponseElement"
        }, {
          "type" : "object",
          "properties" : {
            "username" : {
              "type" : "string",
              "description" : "Plain text username value"
            },
            "password" : {
              "type" : "string",
              "description" : "Plain text password value"
            }
          }
        } ]
      },
      "CredentialsList" : {
        "required" : [ "credentials" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string"
          },
          "credentials" : {
            "type" : "array",
            "description" : "A list of credentials sets for Synthetic monitors.",
            "items" : {
              "$ref" : "#/components/schemas/CredentialsResponseElement"
            }
          }
        },
        "description" : "A list of credentials sets for Synthetic monitors.",
        "example" : {
          "credentials" : [ {
            "name" : "Sample username-password credentials",
            "id" : "CREDENTIALS_VAULT-E80203F993472E6D",
            "type" : "USERNAME_PASSWORD",
            "description" : "Sample credentials for demo purposes",
            "owner" : "admin",
            "ownerAccessOnly" : true,
            "scope" : "SYNTHETIC",
            "credentialUsageSummary" : [ {
              "HTTP_MONITOR" : 4
            } ]
          }, {
            "name" : "Sample certificate credentials",
            "id" : "CREDENTIALS_VAULT-842DEF439999E15B",
            "type" : "CERTIFICATE",
            "description" : "Sample credentials for demo purposes",
            "owner" : "John.Doe@domain.com",
            "ownerAccessOnly" : true,
            "scope" : "EXTENSION",
            "credentialUsageSummary" : [ ]
          }, {
            "name" : "Sample token credentials",
            "id" : "CREDENTIALS_VAULT-854345639999E15B",
            "type" : "TOKEN",
            "description" : "Sample token for demo purposes",
            "owner" : "John.Doe@domain.com",
            "ownerAccessOnly" : true,
            "scope" : "SYNTHETIC",
            "credentialUsageSummary" : [ {
              "HTTP_MONITOR" : 4,
              "BROWSER_MONITOR" : 11
            } ]
          } ]
        }
      },
      "ExtensionEnvironmentConfigurationVersion" : {
        "required" : [ "version" ],
        "type" : "object",
        "properties" : {
          "version" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string",
            "description" : "Extension version",
            "example" : "1.2.3"
          }
        }
      },
      "MonitoringConfigurationResponse" : {
        "type" : "object",
        "properties" : {
          "objectId" : {
            "type" : "string",
            "description" : "The identifier of the new configuration",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ="
          },
          "code" : {
            "type" : "integer",
            "description" : "The HTTP Status code",
            "format" : "int32"
          }
        }
      },
      "JsonNode" : {
        "type" : "object",
        "description" : "The monitoring configuration"
      },
      "MonitoringConfigurationDto" : {
        "required" : [ "scope" ],
        "type" : "object",
        "properties" : {
          "scope" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The scope this monitoring configuration will be defined for",
            "example" : "HOST-D3A3C5A146830A79"
          },
          "value" : {
            "$ref" : "#/components/schemas/JsonNode"
          }
        }
      },
      "ComplexConstraint" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "minimumPropertyCount" : {
            "type" : "integer",
            "description" : "The minimum number of properties that must be set.",
            "format" : "int32",
            "example" : 1
          },
          "maximumPropertyCount" : {
            "type" : "integer",
            "description" : "The maximum number of properties that can be set.",
            "format" : "int32",
            "example" : 2
          },
          "customMessage" : {
            "type" : "string",
            "description" : "A custom message for invalid values."
          },
          "customValidatorId" : {
            "type" : "string",
            "description" : "The ID of a custom validator.",
            "example" : "my-min-max"
          },
          "checkAllProperties" : {
            "type" : "boolean",
            "description" : "Defines if modification of any property triggers secret resubmission check.",
            "example" : false
          },
          "properties" : {
            "type" : "array",
            "description" : "A list of properties (defined by IDs) that are used to check the constraint.",
            "items" : {
              "type" : "string",
              "description" : "A list of properties (defined by IDs) that are used to check the constraint."
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the constraint.",
            "enum" : [ "CUSTOM_VALIDATOR_REF", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "LESS_THAN", "LESS_THAN_OR_EQUAL", "PROPERTY_COUNT_RANGE", "SECRET_RESUBMISSION", "UNKNOWN" ]
          }
        },
        "description" : "A constraint on the values accepted for a complex settings property."
      },
      "Constraint" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "customMessage" : {
            "type" : "string",
            "description" : "A custom message for invalid values.",
            "example" : "customConstraintMessage"
          },
          "uniqueProperties" : {
            "type" : "array",
            "description" : "A list of properties for which the combination of values must be unique.",
            "example" : [ "my-prop-1", "my-prop-2" ],
            "items" : {
              "type" : "string",
              "description" : "A list of properties for which the combination of values must be unique.",
              "example" : "[\"my-prop-1\",\"my-prop-2\"]"
            }
          },
          "customValidatorId" : {
            "type" : "string",
            "description" : "The ID of a custom validator.",
            "example" : "my-min-max"
          },
          "maxLength" : {
            "type" : "integer",
            "description" : "The maximum allowed length of string values.",
            "format" : "int32",
            "example" : 20
          },
          "minLength" : {
            "type" : "integer",
            "description" : "The minimum required length of string values.",
            "format" : "int32",
            "example" : 7
          },
          "pattern" : {
            "type" : "string",
            "description" : "The regular expression pattern for valid string values.",
            "example" : "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\.([a-z]|[0-9]|-){2,}(\\.[a-z]{2,})?$"
          },
          "minimum" : {
            "type" : "number",
            "description" : "The minimum allowed value.",
            "example" : 3
          },
          "maximum" : {
            "type" : "number",
            "description" : "The maximum allowed value.",
            "example" : 200
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the constraint.",
            "example" : "UNKNOWN",
            "enum" : [ "CUSTOM_VALIDATOR_REF", "LENGTH", "NOT_BLANK", "NOT_EMPTY", "NO_WHITESPACE", "PATTERN", "RANGE", "REGEX", "TRIMMED", "UNIQUE", "UNKNOWN" ]
          }
        },
        "description" : "A constraint on the values accepted for a settings property."
      },
      "DatasourceDefinition" : {
        "required" : [ "filterProperties", "fullContext", "identifier", "useApiSearch", "validate" ],
        "type" : "object",
        "properties" : {
          "filterProperties" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The properties to filter the datasource options on.",
            "items" : {
              "type" : "string",
              "description" : "The properties to filter the datasource options on."
            }
          },
          "resetValue" : {
            "type" : "string",
            "description" : "When to reset datasource value in the UI on filter change.",
            "enum" : [ "ALWAYS", "INVALID_ONLY", "NEVER" ]
          },
          "fullContext" : {
            "type" : "boolean",
            "description" : "Whether this datasource expects full setting payload as the context."
          },
          "useApiSearch" : {
            "type" : "boolean",
            "description" : "If true, the datasource should use the api to filter the results instead of client-side filtering."
          },
          "validate" : {
            "type" : "boolean",
            "description" : "Whether to validate input to only allow values returned by the datasource."
          },
          "identifier" : {
            "type" : "string",
            "description" : "The identifier of a custom data source of the property's value."
          }
        },
        "description" : "Configuration of a datasource for a property."
      },
      "DeletionConstraint" : {
        "type" : "object",
        "properties" : {
          "customMessage" : {
            "type" : "string",
            "description" : "A custom message for invalid values."
          },
          "customValidatorId" : {
            "type" : "string",
            "description" : "The ID of a custom validator.",
            "example" : "my-min-max"
          }
        },
        "description" : "A constraint on the values that are going to be deleted."
      },
      "EnumType" : {
        "required" : [ "description", "documentation", "items", "type" ],
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "description" : "A list of allowed values of the enum.",
            "items" : {
              "$ref" : "#/components/schemas/EnumValue"
            }
          },
          "enumClass" : {
            "type" : "string",
            "description" : "An existing Java enum class that holds the allowed values of the enum.",
            "example" : "enumClass"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the property.",
            "example" : "enum",
            "enum" : [ "enum" ]
          },
          "documentation" : {
            "type" : "string",
            "description" : "An extended description and/or links to documentation.",
            "example" : "typeDocumentation"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the property.",
            "example" : "typeDisplayName"
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the property.",
            "example" : "typeDescription"
          }
        },
        "description" : "Definition of an enum property."
      },
      "EnumValue" : {
        "required" : [ "displayName", "value" ],
        "type" : "object",
        "properties" : {
          "enumInstance" : {
            "type" : "string",
            "description" : "The name of the value in an existing Java enum class.",
            "example" : "exampleJavaEnumValue"
          },
          "icon" : {
            "type" : "string",
            "description" : "The icon of the value.",
            "example" : "checkmark"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the value.",
            "example" : "exampleDisplayName"
          },
          "value" : {
            "type" : "object",
            "description" : "The allowed value of the enum.",
            "example" : "exampleValue"
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the value.",
            "example" : "exampleDescription"
          }
        },
        "description" : "An allowed value for an enum property."
      },
      "Item" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "documentation" : {
            "type" : "string",
            "description" : "An extended description and/or links to documentation.",
            "example" : "propertyDocumentation"
          },
          "uiCustomization" : {
            "$ref" : "#/components/schemas/UiCustomization"
          },
          "datasource" : {
            "$ref" : "#/components/schemas/DatasourceDefinition"
          },
          "constraints" : {
            "type" : "array",
            "description" : "A list of constraints limiting the values to be accepted.",
            "items" : {
              "$ref" : "#/components/schemas/Constraint"
            }
          },
          "referencedType" : {
            "type" : "string",
            "description" : "The type referenced by the item's value.",
            "example" : "itemReferencedType"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the item.",
            "example" : "itemDisplayName"
          },
          "type" : {
            "type" : "object",
            "description" : "The type of the item's value."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the item.",
            "example" : "itemDescription"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Metadata of the items."
            },
            "description" : "Metadata of the items."
          },
          "subType" : {
            "type" : "string",
            "description" : "The subtype of the item's value.",
            "example" : "itemSubType"
          }
        },
        "description" : "An item of a collection property."
      },
      "Precondition" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "precondition" : {
            "$ref" : "#/components/schemas/Precondition"
          },
          "expectedValue" : {
            "type" : "object",
            "description" : "The expected value of the property. \n\nOnly applicable to properties of the `EQUALS` type.",
            "example" : "expectedValue"
          },
          "expectedValues" : {
            "type" : "array",
            "description" : "A list of valid values of the property. \n\nOnly applicable to properties of the `IN` type.",
            "example" : "expectedValues",
            "items" : {
              "type" : "object"
            }
          },
          "pattern" : {
            "type" : "string",
            "description" : "The Regular expression which is matched against the property. \n\nOnly applicable to properties of the `REGEX_MATCH` type.",
            "example" : "example Regex"
          },
          "preconditions" : {
            "type" : "array",
            "description" : "A list of child preconditions to be evaluated. \n\nOnly applicable to properties of the `AND` and `OR` types.",
            "items" : {
              "$ref" : "#/components/schemas/Precondition"
            }
          },
          "property" : {
            "type" : "string",
            "description" : "The property to be evaluated.",
            "example" : "propertyToEvaluate"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the precondition.",
            "example" : "NULL",
            "enum" : [ "AND", "EQUALS", "IN", "NOT", "NULL", "OR", "REGEX_MATCH" ]
          }
        },
        "description" : "A precondition for visibility of a property."
      },
      "PropertyDefinition" : {
        "required" : [ "maxObjects", "nullable", "type" ],
        "type" : "object",
        "properties" : {
          "documentation" : {
            "type" : "string",
            "description" : "An extended description and/or links to documentation.",
            "example" : "propertyDocumentation"
          },
          "maxObjects" : {
            "type" : "integer",
            "description" : "The maximum number of **objects** in a collection property. \n\n Has the value of `1` for singletons.",
            "format" : "int32"
          },
          "uiCustomization" : {
            "$ref" : "#/components/schemas/UiCustomization"
          },
          "datasource" : {
            "$ref" : "#/components/schemas/DatasourceDefinition"
          },
          "minObjects" : {
            "type" : "integer",
            "description" : "The minimum number of **objects** in a collection property.",
            "format" : "int32",
            "example" : 1
          },
          "modificationPolicy" : {
            "type" : "string",
            "description" : "Modification policy of the property.",
            "example" : "ALWAYS",
            "enum" : [ "ALWAYS", "DEFAULT", "NEVER" ]
          },
          "forceSecretResubmission" : {
            "type" : "boolean",
            "description" : "Defines if value is allowed to be modified when secret properties are not",
            "example" : true
          },
          "precondition" : {
            "$ref" : "#/components/schemas/Precondition"
          },
          "items" : {
            "$ref" : "#/components/schemas/Item"
          },
          "constraints" : {
            "type" : "array",
            "description" : "A list of constraints limiting the values to be accepted.",
            "items" : {
              "$ref" : "#/components/schemas/Constraint"
            }
          },
          "nullable" : {
            "type" : "boolean",
            "description" : "The value can (`true`) or can't (`false`) be `null`.",
            "example" : true
          },
          "referencedType" : {
            "type" : "string",
            "description" : "The type referenced by the property value",
            "example" : "propertyReferencedType"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the property.",
            "example" : "propertyDisplayName"
          },
          "default" : {
            "type" : "object",
            "description" : "The default value to be used when no value is provided. \n\nIf a non-singleton has the value of `null`, it means an empty collection.",
            "example" : "propertyDefaultValue"
          },
          "type" : {
            "type" : "object",
            "description" : "The type of the property's value."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the property.",
            "example" : "propertyDescription"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Metadata of the property."
            },
            "description" : "Metadata of the property."
          },
          "subType" : {
            "type" : "string",
            "description" : "The subtype of the property's value.",
            "example" : "propertySubType"
          }
        },
        "description" : "Configuration of a property in a settings schema."
      },
      "SchemaConstraintRestDto" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "customMessage" : {
            "type" : "string",
            "description" : "A custom message for invalid values."
          },
          "uniqueProperties" : {
            "type" : "array",
            "description" : "The list of properties for which the combination of values needs to be unique",
            "example" : [ "my-prop-1", "my-prop-2" ],
            "items" : {
              "type" : "string",
              "description" : "The list of properties for which the combination of values needs to be unique",
              "example" : "[\"my-prop-1\",\"my-prop-2\"]"
            }
          },
          "customValidatorId" : {
            "type" : "string",
            "description" : "The ID of a custom validator.",
            "example" : "my-min-max"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the schema constraint.",
            "enum" : [ "CUSTOM_VALIDATOR_REF", "MULTI_SCOPE_CUSTOM_VALIDATOR_REF", "MULTI_SCOPE_UNIQUE", "UNIQUE", "UNKNOWN" ]
          }
        }
      },
      "SchemaDefinitionRestDto" : {
        "required" : [ "allowedScopes", "description", "displayName", "dynatrace", "enums", "maxObjects", "multiObject", "properties", "schemaId", "types", "version" ],
        "type" : "object",
        "properties" : {
          "dynatrace" : {
            "type" : "string",
            "description" : "The version of the data format.",
            "example" : "1"
          },
          "schemaId" : {
            "type" : "string",
            "description" : "The ID of the schema.",
            "example" : "builtin:container.built-in-monitoring-rule"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the schema.",
            "example" : "Built-in container monitoring rules"
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the schema.",
            "example" : "Dynatrace disables monitoring of containers that do not run any applications"
          },
          "documentation" : {
            "type" : "string",
            "description" : "An extended description of the schema and/or links to documentation."
          },
          "schemaGroups" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Names of the groups, which the schema belongs to.",
            "example" : [ "group:some.1", "group:some.2" ],
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the schema.",
            "example" : "1.4.2"
          },
          "multiObject" : {
            "type" : "boolean",
            "description" : "Multiple (`true`) objects per scope are permitted or a single (`false`) object per scope is permitted."
          },
          "ordered" : {
            "type" : "boolean",
            "description" : "If `true` the order of objects has semantic significance. \n\nOnly applicable when **multiObject** is set to `true`."
          },
          "maxObjects" : {
            "type" : "integer",
            "description" : "The maximum amount of objects per scope. \n\nOnly applicable when **multiObject** is set to `true`.",
            "format" : "int32",
            "example" : 10
          },
          "allowedScopes" : {
            "type" : "array",
            "description" : "A list of scopes where the schema can be used.",
            "example" : [ "host", "application" ],
            "items" : {
              "type" : "string"
            }
          },
          "keyProperty" : {
            "type" : "string",
            "description" : "Name of the key property in this schema.",
            "example" : "keyProperty"
          },
          "enums" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EnumType"
            },
            "description" : "A list of definitions of enum properties."
          },
          "types" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SchemaType"
            },
            "description" : "A list of definitions of types. \n\n A type is a complex property that contains its own set of subproperties."
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PropertyDefinition"
            },
            "description" : "A list of schema's properties."
          },
          "constraints" : {
            "type" : "array",
            "description" : "A list of constrains limiting the values to be accepted by the schema.",
            "items" : {
              "$ref" : "#/components/schemas/ComplexConstraint"
            }
          },
          "schemaConstraints" : {
            "type" : "array",
            "description" : "Constraints limiting the values as a whole to be accepted in this configuration element.",
            "items" : {
              "$ref" : "#/components/schemas/SchemaConstraintRestDto"
            }
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Metadata of the setting."
            },
            "description" : "Metadata of the setting."
          },
          "deletionConstraints" : {
            "type" : "array",
            "description" : "Constraints limiting the values to be deleted.",
            "items" : {
              "$ref" : "#/components/schemas/DeletionConstraint"
            }
          },
          "uiCustomization" : {
            "$ref" : "#/components/schemas/UiCustomization"
          },
          "tableColumns" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/TableColumn"
            },
            "description" : "Table column definitions for use in the ui."
          }
        }
      },
      "SchemaType" : {
        "required" : [ "description", "documentation", "properties", "summaryPattern", "version" ],
        "type" : "object",
        "properties" : {
          "summaryPattern" : {
            "type" : "string",
            "description" : "The pattern for the summary (for example, \"Alert after *X* minutes.\") of the configuration in the UI.",
            "example" : "summaryPatternOfType"
          },
          "searchPattern" : {
            "type" : "string",
            "description" : "The pattern for the summary search(for example, \"Alert after *X* minutes.\") of the configuration in the UI.",
            "example" : "searchPatternOfType"
          },
          "constraints" : {
            "type" : "array",
            "description" : "A list of constraints limiting the values to be accepted.",
            "items" : {
              "$ref" : "#/components/schemas/ComplexConstraint"
            }
          },
          "versionInfo" : {
            "type" : "string",
            "description" : "A short description of the version.",
            "example" : "Added new property"
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the type.",
            "example" : "0"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PropertyDefinition"
            },
            "description" : "Definition of properties that can be persisted."
          },
          "documentation" : {
            "type" : "string",
            "description" : "An extended description and/or links to documentation.",
            "example" : "typeDocumentation"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the property.",
            "example" : "typeDisplayName"
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the property.",
            "example" : "typeDescription"
          }
        },
        "description" : "A list of definitions of types. \n\n A type is a complex property that contains its own set of subproperties."
      },
      "TableColumn" : {
        "required" : [ "pattern" ],
        "type" : "object",
        "properties" : {
          "pattern" : {
            "type" : "string",
            "description" : "Pattern with references to properties to create a single value for the column."
          }
        },
        "description" : "The definition of a table column to be used in the ui."
      },
      "UiButtonCustomization" : {
        "required" : [ "displayName", "identifier", "insert" ],
        "type" : "object",
        "properties" : {
          "insert" : {
            "type" : "object",
            "description" : "The position where the button should be shown in the UI"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The label of the button"
          },
          "description" : {
            "type" : "string",
            "description" : "The description to be shown in a tooltip when hovering over the button"
          },
          "identifier" : {
            "type" : "string",
            "description" : "The identifier of the function to be called when the button is pressed"
          }
        },
        "description" : "UI customization for defining a button that calls a function when pressed"
      },
      "UiCallbackCustomization" : {
        "type" : "object",
        "properties" : {
          "buttons" : {
            "type" : "array",
            "description" : "UI customization for defining buttons that call functions when pressed",
            "items" : {
              "$ref" : "#/components/schemas/UiButtonCustomization"
            }
          }
        },
        "description" : "UI customization options for defining custom callbacks"
      },
      "UiCustomization" : {
        "type" : "object",
        "properties" : {
          "tabs" : {
            "$ref" : "#/components/schemas/UiTabsCustomization"
          },
          "expandable" : {
            "$ref" : "#/components/schemas/UiExpandableCustomization"
          },
          "callback" : {
            "$ref" : "#/components/schemas/UiCallbackCustomization"
          },
          "table" : {
            "$ref" : "#/components/schemas/UiTableCustomization"
          }
        },
        "description" : "Customization for UI elements"
      },
      "UiEmptyStateCustomization" : {
        "type" : "object",
        "properties" : {
          "text" : {
            "type" : "string",
            "description" : "The text to be shown in the empty state"
          }
        },
        "description" : "UI customization for empty state in a table"
      },
      "UiExpandableCustomization" : {
        "type" : "object",
        "properties" : {
          "expanded" : {
            "type" : "boolean",
            "description" : "Defines if the item should be expanded by default"
          },
          "sections" : {
            "type" : "array",
            "description" : "A list of sections",
            "items" : {
              "$ref" : "#/components/schemas/UiExpandableSectionCustomization"
            }
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name"
          }
        },
        "description" : "UI customization for expandable section"
      },
      "UiExpandableSectionCustomization" : {
        "required" : [ "displayName", "properties" ],
        "type" : "object",
        "properties" : {
          "expanded" : {
            "type" : "boolean",
            "description" : "Defines if the section should be expanded by default"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name"
          },
          "properties" : {
            "type" : "array",
            "description" : "A list of properties",
            "items" : {
              "type" : "string"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "The description"
          }
        },
        "description" : "Expandable section customization for UI"
      },
      "UiTabGroupCustomization" : {
        "required" : [ "displayName", "properties" ],
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The display name"
          },
          "properties" : {
            "type" : "array",
            "description" : "A list of properties",
            "items" : {
              "type" : "string"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "The description"
          }
        },
        "description" : "Tab group customization for UI"
      },
      "UiTableColumnCustomization" : {
        "type" : "object",
        "properties" : {
          "builtinColumnRef" : {
            "type" : "string",
            "description" : "The ui specific builtin column-implementation for this column.",
            "example" : "summary"
          },
          "columnRef" : {
            "type" : "string",
            "description" : "The referenced column from the 'tableColumns' property of the schema for this column.",
            "example" : "myCustomColumn"
          },
          "propertyRef" : {
            "type" : "string",
            "description" : "The referenced property for this column.",
            "example" : "apiColor"
          },
          "items" : {
            "type" : "array",
            "description" : "The possible items of this column.",
            "items" : {
              "$ref" : "#/components/schemas/UiTableColumnItemCustomization"
            }
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name for this column.",
            "example" : "Color"
          },
          "type" : {
            "type" : "string",
            "description" : "The ui specific type for this column.",
            "example" : "cell-color-picker"
          }
        },
        "description" : "Customization for UI table columns"
      },
      "UiTableColumnItemCustomization" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "icon" : {
            "type" : "string",
            "description" : "The icon of this item.",
            "example" : "CRITICAL"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of this item.",
            "example" : "Active"
          },
          "value" : {
            "type" : "string",
            "description" : "The value of this item.",
            "example" : "ACTIVE"
          }
        },
        "description" : "Customization for UI table column items"
      },
      "UiTableCustomization" : {
        "type" : "object",
        "properties" : {
          "emptyState" : {
            "$ref" : "#/components/schemas/UiEmptyStateCustomization"
          },
          "columns" : {
            "type" : "array",
            "description" : "A list of columns for the UI table",
            "items" : {
              "$ref" : "#/components/schemas/UiTableColumnCustomization"
            }
          }
        },
        "description" : "Customization for UI tables"
      },
      "UiTabsCustomization" : {
        "type" : "object",
        "properties" : {
          "groups" : {
            "type" : "array",
            "description" : "A list of groups",
            "items" : {
              "$ref" : "#/components/schemas/UiTabGroupCustomization"
            }
          }
        },
        "description" : "UI customization for tabs"
      },
      "AuthorDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Author name"
          }
        },
        "description" : "Extension author"
      },
      "Extension" : {
        "type" : "object",
        "properties" : {
          "extensionName" : {
            "type" : "string",
            "description" : "Extension name"
          },
          "version" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string",
            "description" : "Extension version",
            "example" : "1.2.3"
          },
          "author" : {
            "$ref" : "#/components/schemas/AuthorDto"
          },
          "dataSources" : {
            "type" : "array",
            "description" : "Data sources that extension uses to gather data",
            "items" : {
              "type" : "string",
              "description" : "Data sources that extension uses to gather data"
            }
          },
          "variables" : {
            "type" : "array",
            "description" : "Custom variables used in extension configuration",
            "items" : {
              "type" : "string",
              "description" : "Custom variables used in extension configuration"
            }
          },
          "featureSets" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Available feature sets",
            "items" : {
              "type" : "string",
              "description" : "Available feature sets"
            }
          },
          "featureSetsDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/FeatureSetDetails"
            },
            "description" : "Details of feature sets"
          },
          "minDynatraceVersion" : {
            "type" : "string",
            "description" : "Minimal Dynatrace version that works with the extension"
          },
          "minEECVersion" : {
            "type" : "string",
            "description" : "Minimal Extension Execution Controller version that works with the extension"
          },
          "fileHash" : {
            "type" : "string",
            "description" : "SHA-256 hash of uploaded Extension file"
          }
        }
      },
      "FeatureSetDetails" : {
        "type" : "object",
        "properties" : {
          "metrics" : {
            "type" : "array",
            "description" : "Feature set metrics",
            "items" : {
              "$ref" : "#/components/schemas/MetricDto"
            }
          }
        },
        "description" : "Additional information about a Feature Set"
      },
      "MetricDto" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "Metric key"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/MetricMetadataDto"
          }
        },
        "description" : "Metric gathered by an extension"
      },
      "MetricMetadataDto" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The name of the metric in the user interface"
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the metric"
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of the metric"
          }
        },
        "description" : "Metric metadata"
      },
      "ExtensionMonitoringConfiguration" : {
        "type" : "object",
        "properties" : {
          "objectId" : {
            "type" : "string",
            "description" : "Configuration id"
          },
          "scope" : {
            "type" : "string",
            "description" : "Configuration scope"
          },
          "value" : {
            "type" : "object",
            "description" : "Configuration"
          }
        }
      },
      "ExtensionMonitoringConfigurationsList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "description" : "A list of extension monitoring configurations.",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionMonitoringConfiguration"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          }
        }
      },
      "AssetInfoDto" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the asset.",
            "enum" : [ "ALERT", "DASHBOARD", "DECLARATIVE_PROCESSES", "GENERIC_RELATIONSHIP", "GENERIC_TYPE", "LIST_SCREEN_FILTERS", "LIST_SCREEN_INJECTIONS", "LIST_SCREEN_LAYOUT", "LOG_EVENT", "LOG_PROCESSING_RULE", "METRIC_METADATA", "METRIC_QUERY", "SCREEN_ACTIONS", "SCREEN_CHART_GROUPS", "SCREEN_ENTITIES_LISTS", "SCREEN_EVENTS_CARDS", "SCREEN_FILTERS", "SCREEN_HEALTH_CARDS", "SCREEN_INJECTIONS", "SCREEN_LAYOUT", "SCREEN_LOGS_CARDS", "SCREEN_MESSAGE_CARDS", "SCREEN_METRIC_TABLES", "SCREEN_PROBLEMS", "SCREEN_PROPERTIES" ]
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the asset. Identifies the asset in REST API and/or UI (where applicable)."
          },
          "displayName" : {
            "type" : "string",
            "description" : "User-friendly name of the asset."
          },
          "assetSchemaDetails" : {
            "$ref" : "#/components/schemas/AssetSchemaDetailsDto"
          }
        },
        "description" : "Metadata for an extension asset."
      },
      "AssetSchemaDetailsDto" : {
        "type" : "object",
        "properties" : {
          "schemaId" : {
            "type" : "string",
            "description" : "Asset schema id"
          },
          "scope" : {
            "type" : "string",
            "description" : "Asset configuration scope"
          },
          "key" : {
            "type" : "string",
            "description" : "Asset key"
          }
        },
        "description" : "Settings schema details for asset"
      },
      "ExtensionAssetsDto" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string",
            "description" : "Extension version",
            "example" : "1.2.3"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the assets list."
          },
          "assets" : {
            "type" : "array",
            "description" : "The list of the imported assets.",
            "items" : {
              "$ref" : "#/components/schemas/AssetInfoDto"
            }
          },
          "errors" : {
            "type" : "array",
            "description" : "List of errors during asset import",
            "items" : {
              "type" : "string",
              "description" : "List of errors during asset import"
            }
          }
        },
        "description" : "List of assets imported with the active extension environment configuration."
      },
      "ExtensionEventDto" : {
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "string",
            "description" : "Timestamp of the event"
          },
          "severity" : {
            "type" : "string",
            "description" : "Severity of the event"
          },
          "content" : {
            "type" : "string",
            "description" : "Content of the event"
          },
          "dt.entity.host" : {
            "type" : "string",
            "description" : "Host that uses this monitoring configuration.\n\nExample: `HOST-ABCDEF0123456789`"
          },
          "dt.active_gate.id" : {
            "type" : "string",
            "description" : "Hexadecimal ID of Active Gate that uses this monitoring configuration.\n\nExample: `0x1a2b3c4d`"
          },
          "dt.extension.ds" : {
            "type" : "string",
            "description" : "Data source that uses this monitoring configuration.\n\nExample: `snmp`"
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the event",
            "enum" : [ "ERROR", "INFO", "NONE", "WARN" ]
          }
        },
        "description" : "A list of extension events."
      },
      "ExtensionEventsList" : {
        "type" : "object",
        "properties" : {
          "extensionEvents" : {
            "type" : "array",
            "description" : "A list of extension events.",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionEventDto"
            }
          }
        }
      },
      "ExtensionStatusDto" : {
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "description" : "Timestamp of the latest status of given configuration.",
            "format" : "int64"
          },
          "status" : {
            "type" : "string",
            "description" : "Latest status of given configuration.",
            "enum" : [ "ERROR", "OK", "UNKNOWN" ]
          }
        }
      },
      "ExtensionList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "array",
            "description" : "A list of extensions.",
            "items" : {
              "$ref" : "#/components/schemas/MinimalExtension"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          }
        }
      },
      "MinimalExtension" : {
        "type" : "object",
        "properties" : {
          "extensionName" : {
            "type" : "string",
            "description" : "Extension name"
          },
          "version" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string",
            "description" : "Extension version",
            "example" : "1.2.3"
          }
        },
        "description" : "A list of extensions."
      },
      "SchemaFiles" : {
        "type" : "object",
        "properties" : {
          "files" : {
            "type" : "array",
            "description" : "A list of schema files.",
            "items" : {
              "type" : "string",
              "description" : "A list of schema files."
            }
          }
        }
      },
      "SchemasList" : {
        "type" : "object",
        "properties" : {
          "versions" : {
            "type" : "array",
            "description" : "A list of schema versions.",
            "items" : {
              "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
              "type" : "string",
              "description" : "Extension version",
              "example" : "1.2.3"
            }
          }
        }
      },
      "MonitoringConfigurationUpdateDto" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/JsonNode"
          }
        }
      },
      "AssetInfo" : {
        "type" : "object",
        "properties" : {
          "assetType" : {
            "type" : "string"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Assets types and its count"
      },
      "ExtensionUploadResponseDto" : {
        "type" : "object",
        "properties" : {
          "extensionName" : {
            "type" : "string",
            "description" : "Extension name"
          },
          "version" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string",
            "description" : "Extension version",
            "example" : "1.2.3"
          },
          "author" : {
            "$ref" : "#/components/schemas/AuthorDto"
          },
          "dataSources" : {
            "type" : "array",
            "description" : "Data sources that extension uses to gather data",
            "items" : {
              "type" : "string",
              "description" : "Data sources that extension uses to gather data"
            }
          },
          "variables" : {
            "type" : "array",
            "description" : "Custom variables used in extension configuration",
            "items" : {
              "type" : "string",
              "description" : "Custom variables used in extension configuration"
            }
          },
          "featureSets" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Available feature sets",
            "items" : {
              "type" : "string",
              "description" : "Available feature sets"
            }
          },
          "featureSetsDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/FeatureSetDetails"
            },
            "description" : "Details of feature sets"
          },
          "minDynatraceVersion" : {
            "type" : "string",
            "description" : "Minimal Dynatrace version that works with the extension"
          },
          "minEECVersion" : {
            "type" : "string",
            "description" : "Minimal Extension Execution Controller version that works with the extension"
          },
          "fileHash" : {
            "type" : "string",
            "description" : "SHA-256 hash of uploaded Extension file"
          },
          "assetsInfo" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Information about extension assets included",
            "items" : {
              "$ref" : "#/components/schemas/AssetInfo"
            }
          }
        }
      },
      "Comment" : {
        "required" : [ "createdAtTimestamp" ],
        "type" : "object",
        "properties" : {
          "authorName" : {
            "type" : "string",
            "description" : "The user who wrote the comment."
          },
          "createdAtTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of comment creation, in UTC milliseconds.",
            "format" : "int64"
          },
          "context" : {
            "type" : "string",
            "description" : "The context of the comment."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the comment."
          },
          "content" : {
            "type" : "string",
            "description" : "The text of the comment."
          }
        },
        "description" : "The comment to a problem."
      },
      "ProblemCloseResult" : {
        "required" : [ "closeTimestamp", "closing", "problemId" ],
        "type" : "object",
        "properties" : {
          "problemId" : {
            "type" : "string",
            "description" : "The ID of the problem."
          },
          "closeTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp when the user triggered the closing.",
            "format" : "int64"
          },
          "closing" : {
            "type" : "boolean",
            "description" : "True, if the problem is being closed."
          },
          "comment" : {
            "$ref" : "#/components/schemas/Comment"
          }
        },
        "description" : "The result of closing a problem."
      },
      "ProblemCloseRequestDtoImpl" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "The text of the closing comment."
          }
        }
      },
      "CommentRequestDtoImpl" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "The text of the comment."
          },
          "context" : {
            "type" : "string",
            "description" : "The context of the comment."
          }
        }
      },
      "CommentsList" : {
        "required" : [ "comments", "totalCount" ],
        "type" : "object",
        "properties" : {
          "comments" : {
            "type" : "array",
            "description" : "The result entries.",
            "items" : {
              "$ref" : "#/components/schemas/Comment"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          }
        },
        "description" : "A list of comments."
      },
      "AlertingProfileStub" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the alerting profile."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the alerting profile."
          }
        },
        "description" : "Short representation of the alerting profile."
      },
      "ApplicationImpact" : {
        "required" : [ "estimatedAffectedUsers", "impactType", "impactedEntity" ],
        "type" : "object",
        "description" : "Analysis of problem impact to an application.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Impact"
        } ]
      },
      "AvailabilityEvidence" : {
        "required" : [ "displayName", "endTime", "entity", "evidenceType", "rootCauseRelevant", "startTime" ],
        "type" : "object",
        "description" : "The availability evidence of the problem. \n\nIndicates an entity that has been unavailable during the problem lifespan and that might be related to the root cause.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Evidence"
        }, {
          "type" : "object",
          "properties" : {
            "endTime" : {
              "type" : "integer",
              "description" : "The end time of the evidence, in UTC milliseconds.",
              "format" : "int64"
            }
          }
        } ]
      },
      "CustomApplicationImpact" : {
        "required" : [ "estimatedAffectedUsers", "impactType", "impactedEntity" ],
        "type" : "object",
        "description" : "Analysis of problem impact to a custom application.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Impact"
        } ]
      },
      "EventEvidence" : {
        "required" : [ "displayName", "endTime", "entity", "eventId", "eventType", "evidenceType", "rootCauseRelevant", "startTime" ],
        "type" : "object",
        "description" : "The event evidence of the problem. \n\nAn event that occurred during the problem lifespan that might be related to the root cause.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Evidence"
        }, {
          "type" : "object",
          "properties" : {
            "eventId" : {
              "type" : "string",
              "description" : "The ID of the event."
            },
            "eventType" : {
              "type" : "string",
              "description" : "The type of the event."
            },
            "endTime" : {
              "type" : "integer",
              "description" : "The end timestamp of the event, in UTC milliseconds. \n\n Has `-1` value, if the event is still active.",
              "format" : "int64"
            },
            "data" : {
              "$ref" : "#/components/schemas/Event"
            }
          }
        } ]
      },
      "Evidence" : {
        "required" : [ "displayName", "entity", "evidenceType", "rootCauseRelevant", "startTime" ],
        "type" : "object",
        "properties" : {
          "evidenceType" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `EVENT` -> EventEvidence \n* `METRIC` -> MetricEvidence \n* `TRANSACTIONAL` -> TransactionalEvidence \n* `MAINTENANCE_WINDOW` -> MaintenanceWindowEvidence \n* `AVAILABILITY_EVIDENCE` -> AvailabilityEvidence \n",
            "enum" : [ "AVAILABILITY_EVIDENCE", "EVENT", "MAINTENANCE_WINDOW", "METRIC", "TRANSACTIONAL" ]
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the evidence."
          },
          "entity" : {
            "$ref" : "#/components/schemas/EntityStub"
          },
          "groupingEntity" : {
            "$ref" : "#/components/schemas/EntityStub"
          },
          "rootCauseRelevant" : {
            "type" : "boolean",
            "description" : "The evidence is (`true`) or is not (`false`) a part of the root cause."
          },
          "startTime" : {
            "type" : "integer",
            "description" : "The start time of the evidence, in UTC milliseconds.",
            "format" : "int64"
          }
        },
        "description" : "An evidence of a root cause. \n\n The actual set of fields depends on the type of the evidence. Find the list of actual objects in the description of the **evidenceType** field or see [Problems API v2 - JSON models](https://dt-url.net/we03sp2).",
        "discriminator" : {
          "propertyName" : "evidenceType",
          "mapping" : {
            "EVENT" : "#/components/schemas/EventEvidence",
            "METRIC" : "#/components/schemas/MetricEvidence",
            "TRANSACTIONAL" : "#/components/schemas/TransactionalEvidence",
            "MAINTENANCE_WINDOW" : "#/components/schemas/MaintenanceWindowEvidence",
            "AVAILABILITY_EVIDENCE" : "#/components/schemas/AvailabilityEvidence"
          }
        }
      },
      "EvidenceDetails" : {
        "required" : [ "details", "totalCount" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of evidence of a problem.",
            "format" : "int64"
          },
          "details" : {
            "type" : "array",
            "description" : "A list of all evidence.",
            "items" : {
              "$ref" : "#/components/schemas/Evidence"
            }
          }
        },
        "description" : "The evidence details of a problem."
      },
      "Impact" : {
        "required" : [ "estimatedAffectedUsers", "impactType", "impactedEntity" ],
        "type" : "object",
        "properties" : {
          "impactType" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `SERVICE` -> ServiceImpact \n* `APPLICATION` -> ApplicationImpact \n* `MOBILE` -> MobileImpact \n* `CUSTOM_APPLICATION` -> CustomApplicationImpact \n",
            "enum" : [ "APPLICATION", "CUSTOM_APPLICATION", "MOBILE", "SERVICE" ]
          },
          "impactedEntity" : {
            "$ref" : "#/components/schemas/EntityStub"
          },
          "estimatedAffectedUsers" : {
            "type" : "integer",
            "description" : "The estimated number of affected users.",
            "format" : "int64"
          }
        },
        "description" : "The impact analysis of the problem on other entities/users. \n\n The actual set of fields depends on the type of the impact. Find the list of actual objects in the description of the **impactType** field or see [Problems API v2 - JSON models](https://dt-url.net/we03sp2).",
        "discriminator" : {
          "propertyName" : "impactType",
          "mapping" : {
            "SERVICE" : "#/components/schemas/ServiceImpact",
            "APPLICATION" : "#/components/schemas/ApplicationImpact",
            "MOBILE" : "#/components/schemas/MobileImpact",
            "CUSTOM_APPLICATION" : "#/components/schemas/CustomApplicationImpact"
          }
        }
      },
      "ImpactAnalysis" : {
        "required" : [ "impacts" ],
        "type" : "object",
        "properties" : {
          "impacts" : {
            "type" : "array",
            "description" : "A list of all impacts of the problem.",
            "items" : {
              "$ref" : "#/components/schemas/Impact"
            }
          }
        },
        "description" : "A list of all impacts of the problem."
      },
      "LinkedProblem" : {
        "required" : [ "displayId", "problemId" ],
        "type" : "object",
        "properties" : {
          "problemId" : {
            "type" : "string",
            "description" : "The ID of the problem."
          },
          "displayId" : {
            "type" : "string",
            "description" : "The display ID of the problem."
          }
        },
        "description" : "The properties of the linked problem."
      },
      "MaintenanceWindowEvidence" : {
        "required" : [ "displayName", "endTime", "entity", "evidenceType", "maintenanceWindowConfigId", "rootCauseRelevant", "startTime" ],
        "type" : "object",
        "description" : "The  maintenance window evidence of the problem. \n\nThe maintenance window during which the problem occurred.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Evidence"
        }, {
          "type" : "object",
          "properties" : {
            "maintenanceWindowConfigId" : {
              "type" : "string",
              "description" : "The ID of the related maintenance window."
            },
            "endTime" : {
              "type" : "integer",
              "description" : "The end time of the evidence, in UTC milliseconds.",
              "format" : "int64"
            }
          }
        } ]
      },
      "MetricEvidence" : {
        "required" : [ "displayName", "endTime", "entity", "evidenceType", "metricId", "rootCauseRelevant", "startTime", "unit", "valueAfterChangePoint", "valueBeforeChangePoint" ],
        "type" : "object",
        "description" : "The metric evidence of the problem. \n\nA change of metric behavior that indicates the problem and/or is its root cause.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Evidence"
        }, {
          "type" : "object",
          "properties" : {
            "valueBeforeChangePoint" : {
              "type" : "number",
              "description" : "The metric's value before the problem start.",
              "format" : "float"
            },
            "valueAfterChangePoint" : {
              "type" : "number",
              "description" : "The metric's value after the problem start.",
              "format" : "float"
            },
            "metricId" : {
              "type" : "string",
              "description" : "The ID of the metric."
            },
            "endTime" : {
              "type" : "integer",
              "description" : "The end time of the evidence, in UTC milliseconds.\n\nThe value `null` indicates that the evidence is still open.",
              "format" : "int64"
            },
            "unit" : {
              "type" : "string",
              "description" : "The unit of the metric.",
              "enum" : [ "Ampere", "Billion", "Bit", "BitPerHour", "BitPerMinute", "BitPerSecond", "Byte", "BytePerHour", "BytePerMinute", "BytePerSecond", "Cores", "Count", "Day", "DecibelMilliWatt", "GibiByte", "GibiBytePerHour", "GibiBytePerMinute", "GibiBytePerSecond", "Giga", "GigaByte", "GigaBytePerHour", "GigaBytePerMinute", "GigaBytePerSecond", "Hertz", "Hour", "KibiByte", "KibiBytePerHour", "KibiBytePerMinute", "KibiBytePerSecond", "Kilo", "KiloByte", "KiloBytePerHour", "KiloBytePerMinute", "KiloBytePerSecond", "KiloMetrePerHour", "MSU", "MebiByte", "MebiBytePerHour", "MebiBytePerMinute", "MebiBytePerSecond", "Mega", "MegaByte", "MegaBytePerHour", "MegaBytePerMinute", "MegaBytePerSecond", "MetrePerHour", "MetrePerSecond", "MicroSecond", "MilliCores", "MilliSecond", "MilliSecondPerMinute", "Million", "Minute", "Month", "NanoSecond", "NanoSecondPerMinute", "NotApplicable", "PerHour", "PerMinute", "PerSecond", "Percent", "Pixel", "Promille", "Ratio", "Second", "State", "Trillion", "Unspecified", "Volt", "Watt", "Week", "Year" ]
            }
          }
        } ]
      },
      "MobileImpact" : {
        "required" : [ "estimatedAffectedUsers", "impactType", "impactedEntity" ],
        "type" : "object",
        "description" : "Analysis of problem impact to a mobile application.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Impact"
        } ]
      },
      "Problem" : {
        "required" : [ "affectedEntities", "displayId", "endTime", "impactLevel", "impactedEntities", "managementZones", "problemFilters", "problemId", "severityLevel", "startTime", "status", "title" ],
        "type" : "object",
        "properties" : {
          "rootCauseEntity" : {
            "$ref" : "#/components/schemas/EntityStub"
          },
          "evidenceDetails" : {
            "$ref" : "#/components/schemas/EvidenceDetails"
          },
          "recentComments" : {
            "$ref" : "#/components/schemas/CommentsList"
          },
          "impactAnalysis" : {
            "$ref" : "#/components/schemas/ImpactAnalysis"
          },
          "impactedEntities" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of all entities that are impacted by the problem.",
            "items" : {
              "$ref" : "#/components/schemas/EntityStub"
            }
          },
          "problemFilters" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of alerting profiles that match the problem.",
            "items" : {
              "$ref" : "#/components/schemas/AlertingProfileStub"
            }
          },
          "linkedProblemInfo" : {
            "$ref" : "#/components/schemas/LinkedProblem"
          },
          "entityTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of all entity tags of the problem.",
            "items" : {
              "$ref" : "#/components/schemas/METag"
            }
          },
          "problemId" : {
            "type" : "string",
            "description" : "The ID of the problem."
          },
          "severityLevel" : {
            "type" : "string",
            "description" : "The severity of the problem.",
            "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "INFO", "MONITORING_UNAVAILABLE", "PERFORMANCE", "RESOURCE_CONTENTION" ]
          },
          "managementZones" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of all management zones that the problem belongs to.",
            "items" : {
              "$ref" : "#/components/schemas/ManagementZone"
            }
          },
          "impactLevel" : {
            "type" : "string",
            "description" : "The impact level of the problem. It shows what is affected by the problem.",
            "enum" : [ "APPLICATION", "ENVIRONMENT", "INFRASTRUCTURE", "SERVICES" ]
          },
          "displayId" : {
            "type" : "string",
            "description" : "The display ID of the problem."
          },
          "affectedEntities" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of all entities that are affected by the problem.",
            "items" : {
              "$ref" : "#/components/schemas/EntityStub"
            }
          },
          "endTime" : {
            "type" : "integer",
            "description" : "The end timestamp of the problem, in UTC milliseconds. \n\n Has `-1` value, if the problem is still open.",
            "format" : "int64"
          },
          "title" : {
            "type" : "string",
            "description" : "The name of the problem, displayed in the UI."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the problem.",
            "enum" : [ "CLOSED", "OPEN" ]
          },
          "startTime" : {
            "type" : "integer",
            "description" : "The start timestamp of the problem, in UTC milliseconds.",
            "format" : "int64"
          }
        },
        "description" : "The properties of a problem."
      },
      "ServiceImpact" : {
        "required" : [ "estimatedAffectedUsers", "impactType", "impactedEntity", "numberOfPotentiallyAffectedServiceCalls" ],
        "type" : "object",
        "description" : "Analysis of problem impact to a service.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Impact"
        }, {
          "type" : "object",
          "properties" : {
            "numberOfPotentiallyAffectedServiceCalls" : {
              "type" : "integer",
              "description" : "The number of potentially impacted services.",
              "format" : "int64"
            }
          }
        } ]
      },
      "TransactionalEvidence" : {
        "required" : [ "displayName", "endTime", "entity", "evidenceType", "rootCauseRelevant", "startTime", "unit", "valueAfterChangePoint", "valueBeforeChangePoint" ],
        "type" : "object",
        "description" : "The transactional evidence of the problem. \n\nA behavior of a metric in an transaction that indicates the problem and/or is its root cause.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Evidence"
        }, {
          "type" : "object",
          "properties" : {
            "valueBeforeChangePoint" : {
              "type" : "number",
              "description" : "The metric's value before the problem start.",
              "format" : "float"
            },
            "valueAfterChangePoint" : {
              "type" : "number",
              "description" : "The metric's value after the problem start.",
              "format" : "float"
            },
            "endTime" : {
              "type" : "integer",
              "description" : "The end time of the evidence, in UTC milliseconds",
              "format" : "int64"
            },
            "unit" : {
              "type" : "string",
              "description" : "The unit of the metric."
            }
          }
        } ]
      },
      "Problems" : {
        "required" : [ "problems", "totalCount" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "problems" : {
            "type" : "array",
            "description" : "The result entries.",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "warnings" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A list of warnings",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A list of problems."
      },
      "Category" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of the category"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the category"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the category"
          }
        },
        "description" : "A list of available categories."
      },
      "CategoryList" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "description" : "A list of available categories.",
            "items" : {
              "$ref" : "#/components/schemas/Category"
            }
          }
        }
      },
      "RegisteredExtensionResultDto" : {
        "type" : "object",
        "properties" : {
          "extensionVersion" : {
            "type" : "string",
            "description" : "Version number of the extension."
          },
          "extensionName" : {
            "type" : "string",
            "description" : "FQN of the extension registered in the tenant."
          }
        }
      },
      "DescriptionBlock" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of the data, either markdown or gallery.",
            "enum" : [ "GALLERY", "MARKDOWN" ]
          },
          "title" : {
            "type" : "string",
            "description" : "Title of the description block."
          },
          "source" : {
            "type" : "string",
            "description" : "Source of the description block (in case of markdown).",
            "nullable" : true
          },
          "images" : {
            "type" : "array",
            "description" : "Collection of images (in case of gallery).",
            "nullable" : true,
            "items" : {
              "$ref" : "#/components/schemas/Image"
            }
          },
          "sourceId" : {
            "type" : "string",
            "description" : "Optional identifier of special description blocks.",
            "nullable" : true
          }
        },
        "description" : "Represents a section of data describing the given capability."
      },
      "Extension1Details" : {
        "type" : "object",
        "properties" : {
          "releases" : {
            "type" : "array",
            "description" : "A list of versions for the extension version 1.",
            "items" : {
              "$ref" : "#/components/schemas/Extension1Release"
            }
          }
        },
        "description" : "Additional details of the extension version 1.",
        "nullable" : true
      },
      "Extension1Release" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string",
            "description" : "The version number of the extension version 1 release."
          },
          "artifactTitle" : {
            "type" : "string",
            "description" : "The title of the extension version 1.",
            "nullable" : true
          },
          "artifactSha256" : {
            "type" : "string",
            "description" : "SHA-256 hash of the extension version 1.",
            "nullable" : true
          },
          "releaseNotes" : {
            "type" : "string",
            "description" : "The associated release notes.",
            "nullable" : true
          }
        },
        "description" : "Extension version 1 release details."
      },
      "Extension2Details" : {
        "type" : "object",
        "properties" : {
          "extensionName" : {
            "type" : "string",
            "description" : "Fully qualified name of the extension."
          },
          "distributed" : {
            "type" : "boolean",
            "description" : "Whether this extension is available in the central hub catalog."
          },
          "releases" : {
            "type" : "array",
            "description" : "Releases for the extension.",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionRelease"
            }
          },
          "recommendedCatalogVersion" : {
            "type" : "string",
            "description" : "Recommended version of this extension to use. This is the latest compatible published release.",
            "nullable" : true
          }
        },
        "description" : "Additional details of the extension.",
        "nullable" : true
      },
      "ExtensionRelease" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string",
            "description" : "Version number of the extension."
          },
          "artifactSha256" : {
            "type" : "string",
            "description" : "Sha256 hash for the distributed extension.",
            "nullable" : true
          },
          "releaseNotes" : {
            "type" : "string",
            "description" : "Release notes for the extension.",
            "nullable" : true
          },
          "unpublished" : {
            "type" : "boolean",
            "description" : "Represents whether the extension is unpublished."
          },
          "unpublishedDescription" : {
            "type" : "string",
            "description" : "The description why the extension was unpublished.",
            "nullable" : true
          },
          "unpublishedSeverity" : {
            "type" : "integer",
            "description" : "The severity of unpublished extension. 5 indicates an error state",
            "format" : "int32",
            "nullable" : true
          },
          "registered" : {
            "type" : "boolean",
            "description" : "Represents whether extension is already registered"
          },
          "active" : {
            "type" : "boolean",
            "description" : "Represents whether this version is active version"
          },
          "distributed" : {
            "type" : "boolean",
            "description" : "Represents whether the release is distributed"
          },
          "featureSets" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/FeatureSetDetails"
            },
            "description" : "Feature sets contained in the given release"
          },
          "dataSources" : {
            "type" : "array",
            "description" : "Available data sources for the given release",
            "items" : {
              "type" : "string",
              "description" : "Available data sources for the given release"
            }
          },
          "configuredFeatureSets" : {
            "type" : "array",
            "description" : "Configured feature sets for an installed release",
            "items" : {
              "type" : "string",
              "description" : "Configured feature sets for an installed release"
            }
          },
          "assetsInfo" : {
            "type" : "array",
            "description" : "Assets types and its count",
            "items" : {
              "$ref" : "#/components/schemas/AssetInfo"
            }
          },
          "minClusterVersion" : {
            "type" : "integer",
            "description" : "Minimum cluster version for the release",
            "format" : "int32",
            "nullable" : true
          }
        },
        "description" : "Extensions releases information"
      },
      "Image" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Title of the image."
          },
          "alt" : {
            "type" : "string",
            "description" : "Alternate text for the image."
          },
          "src" : {
            "type" : "string",
            "description" : "Url of the image."
          }
        },
        "description" : "Information about the image details of a capability.",
        "nullable" : true
      },
      "ItemDetails" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Represents the type of item. It can be TECHNOLOGY, EXTENSION1 or EXTENSION2.",
            "enum" : [ "EXTENSION1", "EXTENSION2", "TECHNOLOGY" ]
          },
          "itemId" : {
            "type" : "string",
            "description" : "Unique Id of the item."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the item."
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the item.",
            "nullable" : true
          },
          "tags" : {
            "type" : "array",
            "description" : "Grouping of items with keywords.",
            "items" : {
              "type" : "string",
              "description" : "Grouping of items with keywords."
            }
          },
          "logo" : {
            "type" : "string",
            "description" : "The logo of the item. Can be a URL or Base64 encoded. Intended for <image> html tags.",
            "nullable" : true
          },
          "authorName" : {
            "type" : "string",
            "description" : "Name of the author of the item.",
            "nullable" : true
          },
          "authorLogo" : {
            "type" : "string",
            "description" : "Url for the author's logo.",
            "nullable" : true
          },
          "clusterCompatible" : {
            "type" : "boolean",
            "description" : "Checks if the item is compatible with the cluster version.",
            "nullable" : true
          },
          "clusterMinVersion" : {
            "type" : "integer",
            "description" : "The minimum cluster version required to use this item.",
            "format" : "int32",
            "nullable" : true
          },
          "clusterMaxVersion" : {
            "type" : "integer",
            "description" : "The maximum supported cluster version for this item.",
            "format" : "int32",
            "nullable" : true
          },
          "notCompatibleReason" : {
            "type" : "string",
            "description" : "The reason why the item is not compatible with the cluster version.",
            "nullable" : true
          },
          "descriptionBlocks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DescriptionBlock"
            }
          },
          "documentationLink" : {
            "type" : "string",
            "description" : "An absolute link to a documentation page explaining the item.",
            "nullable" : true
          },
          "marketingLink" : {
            "type" : "string",
            "description" : "An absolute link to a marketing page promoting how the item can be used with dynatrace.",
            "nullable" : true
          },
          "technologyDetails" : {
            "$ref" : "#/components/schemas/TechnologyDetails"
          },
          "extension1Details" : {
            "$ref" : "#/components/schemas/Extension1Details"
          },
          "extension2Details" : {
            "$ref" : "#/components/schemas/Extension2Details"
          },
          "relatedItems" : {
            "type" : "array",
            "description" : "Related items.",
            "items" : {
              "$ref" : "#/components/schemas/RelatedItem"
            }
          }
        },
        "description" : "Public metadata for an item."
      },
      "RelatedItem" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Represents the type of item. It can be TECHNOLOGY, EXTENSION1 or EXTENSION2.",
            "enum" : [ "EXTENSION1", "EXTENSION2", "TECHNOLOGY" ]
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "iconUrl" : {
            "type" : "string",
            "description" : "The logo of the item. Can be a URL or Base64 encoded. Intended for <image> html tags"
          },
          "externalLink" : {
            "type" : "string",
            "description" : "External link (marketing/documentation) that can provide with additional information."
          },
          "hasClusterLink" : {
            "type" : "boolean",
            "description" : "Indicates whether there is a page within the product to activate this item."
          }
        },
        "description" : "Related items."
      },
      "TechnologyDetails" : {
        "type" : "object",
        "properties" : {
          "activationLink" : {
            "type" : "string",
            "description" : "Represents the installation/public navigation link for the technology."
          }
        },
        "description" : "Additional details of the technology.",
        "nullable" : true
      },
      "ExtensionReleaseNotes" : {
        "type" : "object",
        "properties" : {
          "markdown" : {
            "type" : "string",
            "description" : "Release notes in markdown format"
          }
        },
        "description" : "Releases notes for an extension."
      },
      "ItemList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "description" : "A list of available items.",
            "items" : {
              "$ref" : "#/components/schemas/ItemOverview"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          }
        }
      },
      "ItemOverview" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Represents the type of item. It can be TECHNOLOGY, EXTENSION1 or EXTENSION2.",
            "enum" : [ "EXTENSION1", "EXTENSION2", "TECHNOLOGY" ]
          },
          "itemId" : {
            "type" : "string",
            "description" : "Unique Id of the item."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the item."
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the item."
          },
          "tags" : {
            "type" : "array",
            "description" : "Grouping of items with keywords.",
            "items" : {
              "type" : "string",
              "description" : "Grouping of items with keywords."
            }
          },
          "authorName" : {
            "type" : "string",
            "description" : "Name of the author of the item."
          },
          "authorLogo" : {
            "type" : "string",
            "description" : "Url for the author's logo."
          },
          "clusterCompatible" : {
            "type" : "boolean",
            "description" : "Checks if the item is compatible with the cluster version."
          },
          "notCompatibleReason" : {
            "type" : "string",
            "description" : "The reason why the item is not compatible with the cluster version."
          },
          "documentationLink" : {
            "type" : "string",
            "description" : "An absolute link to the documentation page of this item."
          },
          "marketingLink" : {
            "type" : "string",
            "description" : "An absolute link to the marketing page of this item."
          },
          "hasDescriptionBlocks" : {
            "type" : "boolean",
            "description" : "Whether or not the details call will contain description blocks."
          },
          "comingSoon" : {
            "type" : "boolean",
            "description" : "Whether or not the item is planned to be released soon"
          },
          "artifactId" : {
            "type" : "string",
            "description" : "The unique ID used by the artifacts contained in releases.",
            "example" : "snmp-extension.dynatrace.com"
          },
          "logo" : {
            "type" : "string",
            "description" : "The logo of the item. Can be a URL or Base64 encoded. Intended for <image> html tags"
          },
          "activationLink" : {
            "type" : "string",
            "description" : "The activation link for a technology"
          }
        },
        "description" : "Overview of an item."
      },
      "JavaScriptMappingFileDto" : {
        "type" : "object",
        "properties" : {
          "minifiedJsFileUrl" : {
            "type" : "string",
            "description" : "The minified JavaScript file URL to which the mapping file belongs to."
          },
          "fileType" : {
            "type" : "string",
            "description" : "The type of the file.",
            "enum" : [ "MINIFIED", "SOURCE", "SOURCEMAP" ]
          },
          "fileName" : {
            "type" : "string",
            "description" : "The name of the file."
          },
          "size" : {
            "type" : "integer",
            "description" : "The size of the file, in KB.",
            "format" : "int32"
          },
          "numberOfFiles" : {
            "type" : "integer",
            "description" : "The number of files.",
            "format" : "int32"
          },
          "zipped" : {
            "type" : "boolean",
            "description" : "Whether several files are zipped into one file."
          },
          "uploadTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp of the file upload, in UTC milliseconds.",
            "format" : "int64"
          },
          "pinned" : {
            "type" : "boolean",
            "description" : "Whether the file is pinned and therefore not automatically deleted."
          }
        }
      },
      "JavaScriptMappingFileListDto" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "jsMappingFiles" : {
            "type" : "array",
            "description" : "A list of JavaScript mapping files.",
            "items" : {
              "$ref" : "#/components/schemas/JavaScriptMappingFileDto"
            }
          }
        }
      },
      "JavaScriptMappingFileMetadataDto" : {
        "type" : "object",
        "properties" : {
          "pinned" : {
            "type" : "boolean",
            "description" : "Whether the file is pinned and therefore not automatically deleted."
          }
        }
      },
      "ExportedLogRecordList" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "description" : "A list of retrieved log records.",
            "items" : {
              "$ref" : "#/components/schemas/LogRecord"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          }
        },
        "description" : "A list of exported log records.",
        "example" : {
          "results" : [ {
            "timestamp" : "1631193089000",
            "status" : "ERROR",
            "content" : "example log content",
            "event.type" : "LOG",
            "additionalColumns" : {
              "custom.attribute" : [ "value1", "value2" ],
              "loglevel" : [ "SEVERE" ]
            }
          } ],
          "pageSize" : 100,
          "nextPageKey" : "___-2lZ43q0AAAAdeJxjYAAC1sLS1KJKBhjggtIijFCGHEwCAFiHAoP___7aVnjerQ",
          "totalCount" : 150
        }
      },
      "LogRecord" : {
        "type" : "object",
        "properties" : {
          "additionalColumns" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Additional columns of the log record.",
              "items" : {
                "type" : "string",
                "description" : "Additional columns of the log record."
              }
            },
            "description" : "Additional columns of the log record."
          },
          "eventType" : {
            "type" : "string",
            "description" : "Type of event",
            "enum" : [ "K8S", "LOG", "SFM" ]
          },
          "content" : {
            "type" : "string",
            "description" : "The content of the log record."
          },
          "timestamp" : {
            "type" : "integer",
            "description" : "The timestamp of the log record, in UTC milliseconds.",
            "format" : "int64"
          },
          "status" : {
            "type" : "string",
            "description" : "The log status (based on the log level).",
            "enum" : [ "ERROR", "INFO", "NONE", "NOT_APPLICABLE", "WARN" ]
          }
        },
        "description" : "A single log record.",
        "example" : {
          "timestamp" : "1631193089000",
          "status" : "ERROR",
          "content" : "example log content",
          "event.type" : "LOG",
          "additionalColumns" : {
            "custom.attribute" : [ "value1", "value2" ],
            "loglevel" : [ "SEVERE" ]
          }
        }
      },
      "AggregatedLog" : {
        "type" : "object",
        "properties" : {
          "aggregationResult" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "integer",
                  "description" : "Aggregated log records.",
                  "format" : "int64"
                },
                "description" : "Aggregated log records."
              },
              "description" : "Aggregated log records."
            },
            "description" : "Aggregated log records."
          }
        },
        "description" : "Aggregated log records.",
        "example" : {
          "aggregationResult" : {
            "processId" : {
              "1597835271" : {
                "cassandra" : "6"
              },
              "1597835331" : {
                "apache" : "12",
                "cassandra" : "60"
              }
            },
            "hostId" : {
              "1597835271" : {
                "localhost" : "12"
              },
              "1597835331" : {
                "remotehost" : "6"
              }
            },
            "logLevel" : {
              "1597835271" : {
                "ERROR" : "1",
                "INFO" : "2"
              },
              "1597835331" : {
                "INFO" : "17"
              }
            },
            "logPath" : {
              "1597835271" : {
                "/var/log/messages" : "15",
                "/var/log/syslog" : "3"
              },
              "1597835331" : {
                "/var/log/messages" : "15",
                "/var/log/syslog" : "3"
              }
            }
          }
        }
      },
      "LogRecordsList" : {
        "type" : "object",
        "properties" : {
          "sliceSize" : {
            "type" : "integer",
            "description" : "The total number of records in a slice.",
            "format" : "int64"
          },
          "nextSliceKey" : {
            "type" : "string",
            "description" : "The cursor for the next slice of log records."
          },
          "results" : {
            "type" : "array",
            "description" : "A list of retrieved log records.",
            "items" : {
              "$ref" : "#/components/schemas/LogRecord"
            }
          }
        },
        "description" : "A list of retrieved log records.",
        "example" : {
          "results" : [ {
            "timestamp" : "1631193089000",
            "status" : "ERROR",
            "content" : "example log content",
            "event.type" : "LOG",
            "additionalColumns" : {
              "custom.attribute" : [ "value1", "value2" ],
              "loglevel" : [ "SEVERE" ]
            }
          } ],
          "sliceSize" : 100,
          "nextSliceKey" : "___-2hI03q0AAAAAAAAAAAAAA-gAAAAAAAAH0P____8AAABkAAAACXRpbWVzdGFtcAD___7aEjTerQ"
        }
      },
      "MonitoredEntityStateParam" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "string",
            "description" : "The value of the monitoring state paramter."
          },
          "key" : {
            "type" : "string",
            "description" : "The key of the monitoring state paramter."
          }
        },
        "description" : "Key-value parameter of the monitoring state."
      },
      "MonitoredEntityStates" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the process group instance."
          },
          "params" : {
            "type" : "array",
            "description" : "Additional parameters of the monitoring state.",
            "items" : {
              "$ref" : "#/components/schemas/MonitoredEntityStateParam"
            }
          },
          "severity" : {
            "type" : "string",
            "description" : "The type of the monitoring state.",
            "enum" : [ "deep_monitoring_ok", "info", "ok", "warning" ]
          },
          "state" : {
            "type" : "string",
            "description" : "The name of the monitoring state.",
            "enum" : [ "agent_injection_status_go_dynamizer_failed", "agent_injection_status_go_vertigo_support_added", "agent_injection_status_nginx_patched_binary_detected", "agent_injection_status_php_opcache_disabled", "agent_injection_status_php_stack_size_too_low", "agent_injection_suppression", "aix_enable_full_monitoring_needed", "bad_installer", "boshbpm_disabled", "container_injection_failed", "containerd_disabled", "crio_disabled", "custom_pg_rule_required", "deep_monitoring_successful", "deep_monitoring_unsuccessful", "docker_disabled", "garden_disabled", "host_infra_structure_only", "host_monitoring_disabled", "network_agent_inactive", "ok", "parent_process_restart_required", "podman_disabled", "process_group_disabled", "process_group_disabled_via_container_injection_rule", "process_group_disabled_via_container_injection_rule_restart", "process_group_disabled_via_global_settings", "process_group_disabled_via_injection_rule", "process_group_disabled_via_injection_rule_restart", "restart_required", "restart_required_apache", "restart_required_docker_deamon", "restart_required_host_id_inconsistent", "restart_required_outdated_agent_apache_update", "restart_required_outdated_agent_injected", "restart_required_using_different_data_storage_dir", "restart_required_using_different_log_path", "restart_required_virtualized_container", "unsupported_state", "winc_disabled" ]
          }
        },
        "description" : "Monitoring state of the process group instance."
      },
      "MonitoredStates" : {
        "type" : "object",
        "properties" : {
          "monitoringStates" : {
            "type" : "array",
            "description" : "A list of process group instances and their monitoring states.",
            "items" : {
              "$ref" : "#/components/schemas/MonitoredEntityStates"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entities in the response.",
            "format" : "int64"
          }
        },
        "description" : "A list of entities and their monitoring states.",
        "example" : {
          "totalCount" : 1,
          "monitoringStates" : [ {
            "states" : [ {
              "entityId" : "PROCESS_GROUP_INSTANCE-F1266E1D0AAC2C3C",
              "state" : "restart_required_outdated_agent_injected",
              "severity" : "warning",
              "parameters" : [ {
                "key" : "pids",
                "value" : "111,222,333"
              } ]
            } ]
          } ]
        }
      },
      "Release" : {
        "type" : "object",
        "properties" : {
          "affectedByProblems" : {
            "type" : "boolean",
            "description" : "The entity has one or more problems",
            "example" : true
          },
          "securityVulnerabilitiesEnabled" : {
            "type" : "boolean",
            "description" : "Indicates that the security vulnerabilities feature is enabled",
            "example" : true
          },
          "affectedBySecurityVulnerabilities" : {
            "type" : "boolean",
            "description" : "The entity has one or more security vulnerabilities",
            "example" : true
          },
          "throughput" : {
            "minimum" : 0,
            "type" : "number",
            "description" : "The count of bytes per second of the entity",
            "format" : "double",
            "example" : 923234
          },
          "softwareTechs" : {
            "type" : "array",
            "description" : "The software technologies of the release",
            "example" : [ {
              "technology" : "JAVA",
              "edition" : "OpenJDK",
              "version" : "1.8.0_242",
              "verbatimType" : "Java"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/SoftwareTechs"
            }
          },
          "product" : {
            "type" : "string",
            "description" : "The product name",
            "example" : "Sockshop"
          },
          "securityVulnerabilitiesCount" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "The number of security vulnerabilities of the entity",
            "format" : "int32",
            "example" : 4
          },
          "releaseEntityId" : {
            "type" : "string",
            "description" : "The entity id of correlating release.",
            "example" : "PROCESS_GROUP-DFDBAC9CBF104253"
          },
          "problemCount" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "The number of problems of the entity",
            "format" : "int32",
            "example" : 4
          },
          "stage" : {
            "type" : "string",
            "description" : "The stage name",
            "example" : "staging"
          },
          "instances" : {
            "type" : "array",
            "description" : "The instances entityIds included in this release",
            "example" : [ "PROCESS_GROUP_INSTANCE-49D94B90FB71C45B", "PROCESS_GROUP_INSTANCE-7EA049157C82D1A5" ],
            "items" : {
              "$ref" : "#/components/schemas/ReleaseInstance"
            }
          },
          "running" : {
            "type" : "boolean",
            "description" : "The related PGI is still running/monitored",
            "example" : true
          },
          "version" : {
            "type" : "string",
            "description" : "The identified release version",
            "example" : "1.195.34.12341232423-012342"
          },
          "name" : {
            "type" : "string",
            "description" : "The entity name",
            "example" : "cluster"
          }
        },
        "description" : "Contains data related to a single release of a component.\nA Release is a combination of a component and a version.\nA Component can be any form of deployable that can be associated with a version.\nIn the first draft, a Component is always a Service.\n\nThe tuple <name, product, stage, version> is always unique."
      },
      "ReleaseInstance" : {
        "type" : "object",
        "properties" : {
          "securityVulnerabilities" : {
            "type" : "array",
            "description" : "List of Security vulnerabilities Ids",
            "example" : [ "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567" ],
            "items" : {
              "type" : "string",
              "description" : "List of Security vulnerabilities Ids",
              "example" : "[\"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"]"
            }
          },
          "entityId" : {
            "type" : "string",
            "description" : "The entity id of the instance.",
            "example" : "PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253"
          },
          "buildVersion" : {
            "type" : "string",
            "description" : "The build version",
            "example" : "223005"
          },
          "problems" : {
            "type" : "array",
            "description" : "List of event Ids of open problems",
            "example" : [ "573177299181554914_1616573184015V2" ],
            "items" : {
              "type" : "string",
              "description" : "List of event Ids of open problems",
              "example" : "[\"573177299181554914_1616573184015V2\"]"
            }
          }
        },
        "description" : "Contains data related to a single instance of a release.\nAn instance is a Process Group Instance and has an optional build version.",
        "example" : [ "PROCESS_GROUP_INSTANCE-49D94B90FB71C45B", "PROCESS_GROUP_INSTANCE-7EA049157C82D1A5" ]
      },
      "Releases" : {
        "required" : [ "totalCount" ],
        "type" : "object",
        "properties" : {
          "releasesWithProblems" : {
            "type" : "integer",
            "description" : "Number of releases with problems.",
            "format" : "int64"
          },
          "releases" : {
            "type" : "array",
            "description" : "A list of releases.",
            "items" : {
              "$ref" : "#/components/schemas/Release"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          }
        },
        "description" : "A list of releases."
      },
      "SoftwareTechs" : {
        "type" : "object",
        "properties" : {
          "edition" : {
            "type" : "string",
            "description" : "The edition of the technology.",
            "example" : "OpenJDK"
          },
          "verbatimType" : {
            "type" : "string",
            "description" : "The verbatim type of the technology.",
            "example" : "Java"
          },
          "technology" : {
            "type" : "string",
            "description" : "The type of the technology.",
            "example" : "JAVA"
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the technology.",
            "example" : "11.0.10"
          }
        },
        "description" : "Contains information about the used software technology.",
        "example" : [ {
          "technology" : "JAVA",
          "edition" : "OpenJDK",
          "version" : "1.8.0_242",
          "verbatimType" : "Java"
        } ]
      },
      "City" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the city."
          },
          "latitude" : {
            "type" : "number",
            "description" : "The latitude of the city.",
            "format" : "float"
          },
          "longitude" : {
            "type" : "number",
            "description" : "The longitude of the city.",
            "format" : "float"
          }
        },
        "description" : "Information about a city.",
        "example" : {
          "name" : "Paris",
          "latitude" : 48.85599,
          "longitude" : 2.3448
        }
      },
      "CountryWithRegionsWithCities" : {
        "type" : "object",
        "properties" : {
          "countryName" : {
            "type" : "string",
            "description" : "The name of the country."
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The ISO code of the country."
          },
          "regionCount" : {
            "type" : "integer",
            "description" : "The number of regions in the country.",
            "format" : "int32"
          },
          "regions" : {
            "type" : "array",
            "description" : "The list of regions in the country.",
            "items" : {
              "$ref" : "#/components/schemas/RegionWithCities"
            }
          }
        },
        "description" : "Information about a country.",
        "example" : {
          "countryName" : "France",
          "countryCode" : "FR",
          "regionCount" : 13,
          "regions" : [ {
            "name" : "Auvergne-Rhone-Alpes",
            "code" : "ARA",
            "cityCount" : 4,
            "cities" : [ {
              "name" : "Abondance",
              "latitude" : 46.2806,
              "longitude" : 6.7217
            }, {
              "name" : "Abrest",
              "latitude" : 46.1008,
              "longitude" : 3.4463
            } ]
          } ]
        }
      },
      "RegionWithCities" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the region."
          },
          "code" : {
            "type" : "string",
            "description" : "The code of the region."
          },
          "cityCount" : {
            "type" : "integer",
            "description" : "The number of cities in a region of a country.",
            "format" : "int32"
          },
          "cities" : {
            "type" : "array",
            "description" : "The list of cities in the region.",
            "items" : {
              "$ref" : "#/components/schemas/City"
            }
          }
        },
        "description" : "Information about a country's region and its cities.",
        "example" : {
          "name" : "Burgenland",
          "code" : "01",
          "cityCount" : 2,
          "cities" : [ {
            "name" : "Althodis",
            "latitude" : 47.3148,
            "longitude" : 16.3884
          }, {
            "name" : "Andau",
            "latitude" : 47.7733,
            "longitude" : 17.029
          } ]
        }
      },
      "Country" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the country."
          },
          "code" : {
            "type" : "string",
            "description" : "The ISO code of the country."
          }
        },
        "description" : "Information about a country.",
        "example" : {
          "name" : "Austria",
          "code" : "AT"
        }
      },
      "CountryList" : {
        "type" : "object",
        "properties" : {
          "countryCount" : {
            "type" : "integer",
            "description" : "The number of countries.",
            "format" : "int32"
          },
          "countries" : {
            "type" : "array",
            "description" : "The list of countries.",
            "items" : {
              "$ref" : "#/components/schemas/Country"
            }
          }
        },
        "description" : "The list of countries.",
        "example" : {
          "countryCount" : 252,
          "countries" : [ {
            "name" : "France",
            "code" : "FR"
          }, {
            "name" : "Belgium",
            "code" : "BE"
          } ]
        }
      },
      "CountryListWithRegions" : {
        "type" : "object",
        "properties" : {
          "countryCount" : {
            "type" : "integer",
            "description" : "The number of countries.",
            "format" : "int32"
          },
          "countries" : {
            "type" : "array",
            "description" : "The list of countries.",
            "items" : {
              "$ref" : "#/components/schemas/CountryRegions"
            }
          }
        },
        "description" : "A list of countries with their regions.",
        "example" : {
          "countryCount" : 252,
          "countries" : [ {
            "name" : "France",
            "code" : "FR",
            "regionCount" : 2,
            "regions" : [ {
              "name" : "Auvergne-Rhone-Alpes",
              "code" : "ARA"
            }, {
              "name" : "Bourgogne-Franche-Comte",
              "code" : "BFC"
            } ]
          }, {
            "name" : "Belgium",
            "code" : "BE",
            "regionCount" : 2,
            "regions" : [ {
              "name" : "Antwerp Province",
              "code" : "01"
            }, {
              "name" : "Brussels Captial",
              "code" : "11"
            } ]
          } ]
        }
      },
      "CountryRegions" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the country."
          },
          "code" : {
            "type" : "string",
            "description" : "The ISO code of the country."
          },
          "regionCount" : {
            "type" : "integer",
            "description" : "The number of regions in the country.",
            "format" : "int32"
          },
          "regions" : {
            "type" : "array",
            "description" : "The list of regions in the country.",
            "items" : {
              "$ref" : "#/components/schemas/Region"
            }
          }
        },
        "description" : "Information about a country.",
        "example" : {
          "name" : "France",
          "code" : "FR",
          "regionCount" : 2,
          "regions" : [ {
            "name" : "Auvergne-Rhone-Alpes",
            "code" : "ARA"
          }, {
            "name" : "Bourgogne-Franche-Comte",
            "code" : "BFC"
          } ]
        }
      },
      "Region" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the region."
          },
          "code" : {
            "type" : "string",
            "description" : "The code of the region."
          }
        },
        "description" : "Information about a country's region.",
        "example" : {
          "name" : "Burgenland",
          "code" : "01"
        }
      },
      "CountryWithRegions" : {
        "type" : "object",
        "properties" : {
          "countryName" : {
            "type" : "string",
            "description" : "The name of the country."
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The ISO code of the country."
          },
          "regionCount" : {
            "type" : "integer",
            "description" : "The number of regions in the country.",
            "format" : "int32"
          },
          "regions" : {
            "type" : "array",
            "description" : "The list of regions in the country.",
            "items" : {
              "$ref" : "#/components/schemas/Region"
            }
          }
        },
        "description" : "Information about a country.",
        "example" : {
          "countyName" : "France",
          "countryCode" : "FR",
          "regionCount" : 2,
          "regions" : [ {
            "name" : "Auvergne-Rhone-Alpes",
            "code" : "ARA"
          }, {
            "name" : "Bourgogne-Franche-Comte",
            "code" : "BFC"
          } ]
        }
      },
      "SettingsObjectResponse" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "invalidValue" : {
            "$ref" : "#/components/schemas/SettingsValue"
          },
          "objectId" : {
            "type" : "string",
            "description" : "For a successful request, the ID of the created or modified settings object.",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ="
          },
          "code" : {
            "type" : "integer",
            "description" : "The HTTP status code for the object.",
            "format" : "int32"
          },
          "error" : {
            "$ref" : "#/components/schemas/Error"
          }
        },
        "description" : "The response to a creation- or update-request."
      },
      "SettingsValue" : {
        "type" : "object",
        "description" : "The value of the setting. \n\n It defines the actual values of settings' parameters. \n\nThe actual content depends on the object's schema.",
        "example" : {
          "autoMonitoring" : true
        }
      },
      "EffectiveSettingsValue" : {
        "type" : "object",
        "properties" : {
          "modified" : {
            "type" : "integer",
            "description" : "The timestamp of the last modification.",
            "format" : "int64"
          },
          "author" : {
            "type" : "string",
            "description" : "The user (identified by a user ID or a public token ID) who performed that most recent modification.",
            "example" : "john.doe@example.com"
          },
          "created" : {
            "type" : "integer",
            "description" : "The timestamp of the creation.",
            "format" : "int64"
          },
          "schemaId" : {
            "type" : "string",
            "description" : "The schema on which the object is based.",
            "example" : "builtin:container.built-in-monitoring-rule"
          },
          "origin" : {
            "type" : "string",
            "description" : "The origin of the settings value.",
            "example" : "HOST-D3A3C5A146830A79"
          },
          "externalId" : {
            "type" : "string",
            "description" : "The external identifier of the settings object."
          },
          "value" : {
            "$ref" : "#/components/schemas/SettingsValue"
          },
          "schemaVersion" : {
            "type" : "string",
            "description" : "The version of the schema on which the object is based.",
            "example" : "1.0.0"
          },
          "searchSummary" : {
            "type" : "string",
            "description" : "A searchable summary string of the setting value. Plain text without Markdown."
          },
          "summary" : {
            "type" : "string",
            "description" : "A short summary of settings. This can contain Markdown and will be escaped accordingly."
          }
        },
        "description" : "An effective settings value."
      },
      "EffectiveSettingsValuesList" : {
        "required" : [ "items", "pageSize", "totalCount" ],
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "description" : "A list of effective settings values.",
            "items" : {
              "$ref" : "#/components/schemas/EffectiveSettingsValue"
            }
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          }
        },
        "description" : "A list of effective settings values."
      },
      "ModificationInfo" : {
        "type" : "object",
        "properties" : {
          "deletable" : {
            "type" : "boolean",
            "description" : "If settings value can be deleted"
          },
          "modifiable" : {
            "type" : "boolean",
            "description" : "If settings value can be modified"
          },
          "movable" : {
            "type" : "boolean",
            "description" : "If settings value can be moved/reordered. Only applicable for ordered list schema"
          },
          "modifiablePaths" : {
            "type" : "array",
            "description" : "Property paths which are modifiable, regardless of the state of `modifiable`",
            "items" : {
              "type" : "string",
              "description" : "Property paths which are modifiable, regardless of the state of `modifiable`"
            }
          },
          "nonModifiablePaths" : {
            "type" : "array",
            "description" : "Property paths which are not modifiable, when `modifiable` is true",
            "items" : {
              "type" : "string",
              "description" : "Property paths which are not modifiable, when `modifiable` is true"
            }
          },
          "first" : {
            "type" : "boolean",
            "description" : "If non-moveable settings value is in the first group of non-moveable settings, or in the last (start or end of list)"
          }
        },
        "description" : "The modification info for a single updatable setting.",
        "readOnly" : true
      },
      "SettingsObject" : {
        "type" : "object",
        "properties" : {
          "modified" : {
            "type" : "integer",
            "description" : "The timestamp of the last modification.",
            "format" : "int64"
          },
          "modifiedBy" : {
            "type" : "string",
            "description" : "The unique identifier of the user who performed the most recent modification.",
            "example" : "fab17b7a-2eb2-4c95-b818-743d94be2c30"
          },
          "author" : {
            "type" : "string",
            "description" : "The user (identified by a user ID or a public token ID) who performed that most recent modification.",
            "example" : "john.doe@example.com"
          },
          "created" : {
            "type" : "integer",
            "description" : "The timestamp of the creation.",
            "format" : "int64"
          },
          "schemaId" : {
            "type" : "string",
            "description" : "The schema on which the object is based.",
            "example" : "builtin:container.built-in-monitoring-rule"
          },
          "modificationInfo" : {
            "$ref" : "#/components/schemas/ModificationInfo"
          },
          "createdBy" : {
            "type" : "string",
            "description" : "The unique identifier of the user who created the settings object.",
            "example" : "fab17b7a-2eb2-4c95-b818-743d94be2c30"
          },
          "externalId" : {
            "type" : "string",
            "description" : "The external identifier of the settings object."
          },
          "scope" : {
            "type" : "string",
            "description" : "The scope that the object targets. For more details, please see [Dynatrace Documentation](https://dt-url.net/ky03459). ",
            "example" : "HOST-D3A3C5A146830A79"
          },
          "value" : {
            "$ref" : "#/components/schemas/SettingsValue"
          },
          "updateToken" : {
            "type" : "string",
            "description" : "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks.",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ="
          },
          "objectId" : {
            "type" : "string",
            "description" : "The ID of the settings object.",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ="
          },
          "schemaVersion" : {
            "type" : "string",
            "description" : "The version of the schema on which the object is based.",
            "example" : "1.0.0"
          },
          "searchSummary" : {
            "type" : "string",
            "description" : "A searchable summary string of the setting value. Plain text without Markdown."
          },
          "summary" : {
            "type" : "string",
            "description" : "A short summary of settings. This can contain Markdown and will be escaped accordingly."
          }
        },
        "description" : "A settings object."
      },
      "ObjectsList" : {
        "required" : [ "items", "pageSize", "totalCount" ],
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "description" : "A list of settings objects.",
            "items" : {
              "$ref" : "#/components/schemas/SettingsObject"
            }
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          }
        },
        "description" : "A list of settings objects."
      },
      "SettingsObjectCreate" : {
        "required" : [ "schemaId", "value" ],
        "type" : "object",
        "properties" : {
          "objectId" : {
            "type" : "string",
            "description" : "The ID of the settings object that should be replaced. \n\nOnly applicable if an external identifier is provided.",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ="
          },
          "schemaId" : {
            "type" : "string",
            "description" : "The schema on which the object is based.",
            "example" : "builtin:container.built-in-monitoring-rule"
          },
          "externalId" : {
            "maxLength" : 500,
            "type" : "string",
            "description" : "External identifier for the object being created"
          },
          "scope" : {
            "type" : "string",
            "description" : "The scope that the object targets. For more details, please see [Dynatrace Documentation](https://dt-url.net/ky03459). \n\nIf omitted on creation of a new object and if the schema supports scope generation, the operation will generate a scope from the provided value.",
            "example" : "HOST-D3A3C5A146830A79"
          },
          "value" : {
            "$ref" : "#/components/schemas/SettingsValue"
          },
          "schemaVersion" : {
            "type" : "string",
            "description" : "The version of the schema on which the object is based.",
            "example" : "1.0.0"
          },
          "insertAfter" : {
            "type" : "string",
            "description" : "The position of the new object. The new object will be added after the specified one. \n\nIf `null`, the new object will be placed in the last position. \n\nIf set to empty string, the new object will be placed in the first position. \n\nOnly applicable for objects based on schemas with ordered objects (schema's `ordered` parameter is set to `true`).",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ="
          }
        },
        "description" : "Configuration of a new settings object."
      },
      "SettingsObjectUpdate" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/SettingsValue"
          },
          "updateToken" : {
            "type" : "string",
            "description" : "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks.",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ="
          },
          "schemaVersion" : {
            "type" : "string",
            "description" : "The version of the schema on which the object is based.",
            "example" : "1.0.0"
          },
          "insertAfter" : {
            "type" : "string",
            "description" : "The position of the updated object. The new object will be moved behind the specified one. \n\n**insertAfter** and **insertBefore** are evaluated together and only one of both can be set. \n\nIf `null` and **insertBefore** 'null', the existing object keeps the current position. \n\nIf set to empty string, the updated object will be placed in the first position. \n\nOnly applicable for objects based on schemas with ordered objects (schema's **ordered** parameter is set to `true`).",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ="
          },
          "insertBefore" : {
            "type" : "string",
            "description" : "The position of the updated object. The new object will be moved in front of the specified one. \n\n**insertAfter** and **insertBefore** are evaluated together and only one of both can be set. \n\nIf `null` and **insertAfter** 'null', the existing object keeps the current position. \n\nIf set to empty string, the updated object will be placed in the last position. \n\nOnly applicable for objects based on schemas with ordered objects (schema's **ordered** parameter is set to `true`).",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ="
          }
        },
        "description" : "An update of a settings object."
      },
      "SchemaList" : {
        "required" : [ "items", "totalCount" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "The number of schemas in the list.",
            "format" : "int64",
            "example" : 1
          },
          "items" : {
            "type" : "array",
            "description" : "A list of settings schemas.",
            "items" : {
              "$ref" : "#/components/schemas/SchemaStub"
            }
          }
        },
        "description" : "The list of available settings schemas."
      },
      "SchemaStub" : {
        "required" : [ "displayName", "latestSchemaVersion", "schemaId" ],
        "type" : "object",
        "properties" : {
          "latestSchemaVersion" : {
            "type" : "string",
            "description" : "The most recent version of the schema.",
            "example" : "1.4.2"
          },
          "schemaId" : {
            "type" : "string",
            "description" : "The ID of the schema.",
            "example" : "builtin:container.built-in-monitoring-rule"
          },
          "displayName" : {
            "type" : "string",
            "description" : "The name of the schema.",
            "example" : "Built-in container monitoring rules"
          }
        },
        "description" : "The short representation of the settings schema."
      },
      "AbstractSloAlertDto" : {
        "required" : [ "alertName", "alertThreshold", "alertType" ],
        "type" : "object",
        "properties" : {
          "alertName" : {
            "type" : "string",
            "description" : "Name of the alert."
          },
          "alertThreshold" : {
            "type" : "number",
            "description" : "Threshold of the alert. Status alerts trigger if they fall below this value, burn rate alerts trigger if they exceed the value.",
            "format" : "double"
          },
          "alertType" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `BURN_RATE` -> BurnRateAlert \n* `STATUS` -> StatusAlert \n",
            "enum" : [ "BURN_RATE", "STATUS" ]
          }
        },
        "example" : {
          "alertName" : "Payment service availability burn rate alert",
          "alertThreshold" : 10.0,
          "alertType" : "BURN_RATE"
        },
        "discriminator" : {
          "propertyName" : "alertType",
          "mapping" : {
            "BURN_RATE" : "#/components/schemas/BurnRateAlert",
            "STATUS" : "#/components/schemas/StatusAlert"
          }
        }
      },
      "BurnRateAlert" : {
        "required" : [ "alertName", "alertThreshold", "alertType" ],
        "type" : "object",
        "description" : "Parameters of an error budget burn rate alert.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AbstractSloAlertDto"
        } ]
      },
      "StatusAlert" : {
        "required" : [ "alertName", "alertThreshold", "alertType" ],
        "type" : "object",
        "description" : "Parameters of a status alert.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AbstractSloAlertDto"
        } ]
      },
      "SloBurnRateConfig" : {
        "type" : "object",
        "properties" : {
          "burnRateVisualizationEnabled" : {
            "type" : "boolean",
            "description" : "The error budget burn rate calculation is enabled (`true`) or disabled (`false`). \n\nIn case of `false`, no calculated values will be present here. \n\nIf not defined, the error budget burn rate calculation is disabled by default.",
            "example" : true
          },
          "fastBurnThreshold" : {
            "type" : "number",
            "description" : "The threshold between a slow and a fast burn rate.",
            "format" : "double",
            "example" : 1.5
          }
        },
        "description" : "Error budget burn rate configuration of a service-level objective (SLO)."
      },
      "SloConfigItemDtoImpl" : {
        "required" : [ "evaluationType", "name", "target", "timeframe", "warning" ],
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "The SLO is enabled (`true`) or disabled (`false`). \n\nIf not defined, the SLO is disabled by default.",
            "example" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the SLO.",
            "example" : "Payment service availability"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the SLO.",
            "example" : "Rate of successful payments per week"
          },
          "metricName" : {
            "type" : "string",
            "description" : "The name that is used to create SLO func metrics keys. Once created, metric name cannot be changed.",
            "example" : "payment_service_availability"
          },
          "metricExpression" : {
            "type" : "string",
            "description" : "The percentage-based metric expression for the calculation of the SLO.",
            "example" : "(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())"
          },
          "evaluationType" : {
            "type" : "string",
            "description" : "The evaluation type of the SLO.",
            "example" : "AGGREGATE",
            "enum" : [ "AGGREGATE" ]
          },
          "filter" : {
            "type" : "string",
            "description" : "The entity filter for the SLO evaluation. The total length of the entitySelector string in SLOs is limited to 1,000 characters. Use the [syntax of entity selector](https://dt-url.net/entityselector).",
            "example" : "type(\"SERVICE\")"
          },
          "target" : {
            "type" : "number",
            "description" : "The target value of the SLO.",
            "format" : "double",
            "example" : 95.0
          },
          "warning" : {
            "type" : "number",
            "description" : "The warning value of the SLO. \n\n At warning state the SLO is still fulfilled but is getting close to failure.",
            "format" : "double",
            "example" : 97.5
          },
          "errorBudgetBurnRate" : {
            "$ref" : "#/components/schemas/SloBurnRateConfig"
          },
          "timeframe" : {
            "type" : "string",
            "description" : "The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector.",
            "example" : "-1d"
          },
          "useRateMetric" : {
            "type" : "boolean",
            "description" : "The type of the metric to use for SLO calculation: \n\n* `true`: An existing percentage-based metric. \n* `false`: A ratio of two metrics. \n\nFor a list of available metrics, see [Built-in metric page](https://dt-url.net/be03kow) or try the [GET metrics](https://dt-url.net/8e43kxf) API call.",
            "nullable" : true,
            "example" : true,
            "deprecated" : true
          },
          "metricRate" : {
            "type" : "string",
            "description" : "The percentage-based metric for the calculation of the SLO. \n\nRequired when the **useRateMetric** is set to `true`.",
            "example" : "builtin:service.successes.server.rate",
            "deprecated" : true
          },
          "metricNumerator" : {
            "type" : "string",
            "description" : "The metric for the count of successes (the numerator in rate calculation). \n\nRequired when the **useRateMetric** is set to `false`.",
            "example" : "builtin:service.errors.server.successCount",
            "deprecated" : true
          },
          "metricDenominator" : {
            "type" : "string",
            "description" : "The total count metric (the denominator in rate calculation). \n\nRequired when the **useRateMetric** is set to `false`.",
            "example" : "builtin:service.requestCount.server",
            "deprecated" : true
          }
        }
      },
      "SLO" : {
        "required" : [ "burnRateMetricKey", "enabled", "error", "errorBudget", "errorBudgetBurnRate", "errorBudgetMetricKey", "evaluatedPercentage", "evaluationType", "filter", "id", "metricExpression", "metricKey", "name", "normalizedErrorBudgetMetricKey", "status", "target", "timeframe", "warning" ],
        "type" : "object",
        "properties" : {
          "problemFilters" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The entity filter for fetching the number of problems related to an SLO. Auto-generated in case no filter has been added to the SLO.",
            "example" : "[type(\"SERVICE\")]",
            "deprecated" : true,
            "items" : {
              "type" : "string",
              "description" : "The entity filter for fetching the number of problems related to an SLO. Auto-generated in case no filter has been added to the SLO.",
              "example" : "[type(\"SERVICE\")]",
              "deprecated" : true
            }
          },
          "relatedTotalProblems" : {
            "type" : "integer",
            "description" : "Total number of problems related to the SLO. \n\nHas the value of `-1` if there's an error with fetching SLO related problems.",
            "format" : "int32"
          },
          "metricExpression" : {
            "type" : "string",
            "description" : "The percentage-based metric expression for the calculation of the SLO.",
            "example" : "(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())"
          },
          "useRateMetric" : {
            "type" : "boolean",
            "description" : "The type of the metric to use for SLO calculation: \n\n* `true`: An existing percentage-based metric. \n* `false`: A ratio of two metrics. \n\nFor a list of available metrics, see [Built-in metric page](https://dt-url.net/be03kow) or try the [GET metrics](https://dt-url.net/8e43kxf) API call.",
            "example" : true,
            "deprecated" : true
          },
          "metricRate" : {
            "type" : "string",
            "description" : "The percentage-based metric for the calculation of the SLO. \n\nRequired when the **useRateMetric** is set to `true`.",
            "example" : "builtin:service.successes.server.rate",
            "deprecated" : true
          },
          "evaluatedPercentage" : {
            "type" : "number",
            "description" : "The calculated status value of the SLO. Has the value of the evaluated SLO status or the value of `-1`: \n\n* If there is an error with the SLO calculation; in that case check the value of the **error** property. \n* If the evaluate parameter has not been set to `true`; in that case the **error** property will contain no error.",
            "format" : "double",
            "example" : 96.25
          },
          "errorBudget" : {
            "type" : "number",
            "description" : "The error budget of the calculated SLO. \n\nThe error budget is the difference between the calculated and target values. A positive number means all is good; a negative number means trouble.\n\nHas the value of the evaluated error budget or the value of `-1`: \n\n* If there is an error with the SLO calculation; in that case check the value of the **error** property. \n* If the evaluate parameter has not been set to `true`; in that case the **error** property will contain no error.",
            "format" : "double",
            "example" : 1.25
          },
          "metricNumerator" : {
            "type" : "string",
            "description" : "The metric for the count of successes (the numerator in rate calculation). \n\nRequired when the **useRateMetric** is set to `false`.",
            "example" : "builtin:service.errors.server.successCount",
            "deprecated" : true
          },
          "metricDenominator" : {
            "type" : "string",
            "description" : "The total count metric (the denominator in rate calculation). \n\nRequired when the **useRateMetric** is set to `false`.",
            "example" : "builtin:service.requestCount.server",
            "deprecated" : true
          },
          "evaluationType" : {
            "type" : "string",
            "description" : "The evaluation type of the SLO.",
            "example" : "AGGREGATE",
            "enum" : [ "AGGREGATE" ]
          },
          "errorBudgetBurnRate" : {
            "$ref" : "#/components/schemas/SloBurnRate"
          },
          "burnRateMetricKey" : {
            "type" : "string",
            "description" : "The key for the SLO's error budget burn rate func metric.",
            "example" : "func:slo.errorBudgetBurnRate.payment_service_availability"
          },
          "errorBudgetMetricKey" : {
            "type" : "string",
            "description" : "The key for the SLO's error budget func metric.",
            "example" : "func:slo.errorBudget.payment_service_availability"
          },
          "normalizedErrorBudgetMetricKey" : {
            "type" : "string",
            "description" : "The key for the SLO's normalized error budget func metric.",
            "example" : "func:slo.normalizedErrorBudget.payment_service_availability"
          },
          "numeratorValue" : {
            "type" : "number",
            "description" : "The numerator value used to evaluate the SLO when **useRateMetric** is set to `false`.",
            "format" : "double",
            "example" : 80,
            "deprecated" : true
          },
          "denominatorValue" : {
            "type" : "number",
            "description" : "The denominator value used to evaluate the SLO when **useRateMetric** is set to `false`.",
            "format" : "double",
            "example" : 90,
            "deprecated" : true
          },
          "relatedOpenProblems" : {
            "type" : "integer",
            "description" : "Number of open problems related to the SLO. \n\nHas the value of `-1` if there's an error with fetching SLO related problems.",
            "format" : "int32"
          },
          "metricKey" : {
            "type" : "string",
            "description" : "The key for the SLO's status func metric.",
            "example" : "func:slo.payment_service_availability"
          },
          "timeframe" : {
            "type" : "string",
            "description" : "The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector.",
            "example" : "-1d"
          },
          "error" : {
            "type" : "string",
            "description" : "The error of the SLO calculation. \n\nIf the value differs from `NONE`, there is something wrong with the SLO calculation.",
            "example" : "NONE"
          },
          "warning" : {
            "type" : "number",
            "description" : "The warning value of the SLO. \n\n At warning state the SLO is still fulfilled but is getting close to failure.",
            "format" : "double",
            "example" : 97.5
          },
          "filter" : {
            "type" : "string",
            "description" : "The entity filter for the SLO evaluation. The total length of the entitySelector string in SLOs is limited to 1,000 characters. Use the [syntax of entity selector](https://dt-url.net/entityselector).",
            "example" : "type(\"SERVICE\")"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the SLO.",
            "example" : "Payment service availability"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the SLO",
            "format" : "uuid",
            "example" : "123e4567-e89b-42d3-a456-556642440000"
          },
          "target" : {
            "type" : "number",
            "description" : "The target value of the SLO.",
            "format" : "double",
            "example" : 95.0
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the calculated SLO.",
            "example" : "WARNING",
            "enum" : [ "FAILURE", "SUCCESS", "WARNING" ]
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the SLO.",
            "example" : "Rate of successful payments per week"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The SLO is enabled (`true`) or disabled (`false`).",
            "example" : true
          }
        },
        "description" : "Parameters of a service-level objective (SLO)."
      },
      "SLOs" : {
        "required" : [ "slo", "totalCount" ],
        "type" : "object",
        "properties" : {
          "slo" : {
            "type" : "array",
            "description" : "The list of SLOs.",
            "items" : {
              "$ref" : "#/components/schemas/SLO"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of entries in the result.",
            "format" : "int64"
          },
          "nextPageKey" : {
            "type" : "string",
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ=="
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "The number of entries per page.",
            "format" : "int32"
          }
        },
        "description" : "Contains SLOs and paging information."
      },
      "SloBurnRate" : {
        "required" : [ "burnRateVisualizationEnabled" ],
        "type" : "object",
        "properties" : {
          "sloValue" : {
            "type" : "number",
            "description" : "The calculated value of the SLO for the timeframe chosen for the burn rate calculation.",
            "format" : "double",
            "example" : 95.0
          },
          "burnRateVisualizationEnabled" : {
            "type" : "boolean",
            "description" : "The error budget burn rate calculation is enabled (`true`) or disabled (`false`). \n\nIn case of `false`, no calculated values will be present here.",
            "example" : true
          },
          "fastBurnThreshold" : {
            "type" : "number",
            "description" : "The threshold between a slow and a fast burn rate.",
            "format" : "double",
            "example" : 1.5
          },
          "burnRateType" : {
            "type" : "string",
            "description" : "The calculated burn rate type. \n\nHas a value of 'FAST', 'SLOW' or 'NONE'.",
            "example" : "SLOW",
            "enum" : [ "FAST", "NONE", "SLOW" ]
          },
          "burnRateValue" : {
            "type" : "number",
            "description" : "The burn rate of the SLO, calculated for the last hour.",
            "format" : "double",
            "example" : 1.25
          },
          "estimatedTimeToConsumeErrorBudget" : {
            "type" : "number",
            "description" : "The estimated time left to consume the error budget in hours.",
            "format" : "double",
            "example" : 24.0
          }
        },
        "description" : "Error budget burn rate evaluation of a service-level objective (SLO)."
      },
      "SyntheticConfigDto" : {
        "required" : [ "bmMonitorTimeout", "bmStepTimeout" ],
        "type" : "object",
        "properties" : {
          "bmMonitorTimeout" : {
            "maximum" : 3600000,
            "minimum" : 60000,
            "type" : "integer",
            "description" : "bmMonitorTimeout - browser monitor execution timeout (ms)",
            "format" : "int64"
          },
          "bmStepTimeout" : {
            "maximum" : 180000,
            "minimum" : 10000,
            "type" : "integer",
            "description" : "bmStepTimeout - browser monitor single step execution timeout (ms)",
            "format" : "int64"
          }
        },
        "description" : "A DTO for synthetic configuration."
      },
      "CustomLogLine" : {
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "description" : "A timestamp of this log message",
            "format" : "int64"
          },
          "logLevel" : {
            "type" : "string",
            "description" : "Log level of the message"
          },
          "message" : {
            "type" : "string",
            "description" : "The message"
          }
        },
        "description" : "A custom script log line"
      },
      "LocationExecutionResults" : {
        "type" : "object",
        "properties" : {
          "locationId" : {
            "type" : "string",
            "description" : "Location id."
          },
          "executionId" : {
            "type" : "string",
            "description" : "Execution id."
          },
          "requestResults" : {
            "type" : "array",
            "description" : "The list of the monitor's request results executed on this location.",
            "items" : {
              "$ref" : "#/components/schemas/MonitorRequestExecutionResult"
            }
          }
        },
        "description" : "Results of the execution HTTP monitor's requests at a given location"
      },
      "MonitorExecutionResults" : {
        "type" : "object",
        "properties" : {
          "monitorId" : {
            "type" : "string",
            "description" : "Monitor id."
          },
          "locationsExecutionResults" : {
            "type" : "array",
            "description" : "The list with the results of the requests executed on assigned locations.",
            "items" : {
              "$ref" : "#/components/schemas/LocationExecutionResults"
            }
          }
        },
        "description" : "Results of the execution of all HTTP monitor's requests.",
        "example" : {
          "monitorId" : "HTTP_CHECK-12B428F6D37A9197",
          "locationsExecutionResults" : [ {
            "locationId" : "7804738439930364165",
            "executionId" : "6136172183050046113",
            "requestResults" : [ {
              "requestId" : "HTTP_CHECK_STEP-53071FC3C4F72E28",
              "requestName" : "Request name",
              "sequenceNumber" : 1,
              "startTimestamp" : 1615806570884,
              "engineId" : 338502283,
              "publicLocation" : false,
              "url" : "https://www.examplePage.com",
              "method" : "GET",
              "requestBody" : "",
              "requestHeaders" : [ {
                "name" : "User-Agent",
                "value" : "DynatraceSynthetic/1.215.1"
              }, {
                "name" : "X-Dynatrace-Visit",
                "value" : "6136172183050046113"
              }, {
                "name" : "X-Dynatrace-Test",
                "value" : "HTTP_CHECK-12B428F6D37A9197"
              } ],
              "responseStatusCode" : 200,
              "responseBody" : "<html><head>Title</head><body>Main Page</body></html>",
              "responseSize" : 1112,
              "responseBodySizeLimitExceeded" : false,
              "responseHeaders" : [ {
                "name" : "Date",
                "value" : "Mon, 15 Mar 2021 11:09:30 GMT"
              }, {
                "name" : "Content-Language",
                "value" : "en"
              } ],
              "resolvedIps" : [ "80.252.0.145" ],
              "errorCode" : 0,
              "responseMessage" : "OK",
              "peerCertificateExpiryDate" : 1647302399000,
              "peerCertificateDetails" : "[Certificate details]",
              "totalTime" : 238,
              "hostNameResolutionTime" : 26,
              "tcpConnectTime" : 15,
              "tlsHandshakeTime" : 8,
              "timeToFirstByte" : 96,
              "redirectionTime" : 70,
              "waitingTime" : 47,
              "redirectsCount" : 1,
              "failureMessage" : ""
            } ]
          } ]
        }
      },
      "MonitorRequestExecutionResult" : {
        "required" : [ "monitorType" ],
        "type" : "object",
        "description" : "A result of the execution HTTP monitor's request.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExecutionStep"
        }, {
          "type" : "object",
          "properties" : {
            "requestId" : {
              "type" : "string",
              "description" : "Request id."
            },
            "requestName" : {
              "type" : "string",
              "description" : "Request name."
            },
            "sequenceNumber" : {
              "type" : "integer",
              "description" : "Request's sequence number.",
              "format" : "int32"
            },
            "startTimestamp" : {
              "type" : "integer",
              "description" : "Request start timestamp.",
              "format" : "int64"
            },
            "engineId" : {
              "type" : "integer",
              "description" : "VUC's id on which monitor's request was executed.",
              "format" : "int64"
            },
            "publicLocation" : {
              "type" : "boolean",
              "description" : "Flag informs whether request was executed on public location."
            },
            "url" : {
              "type" : "string",
              "description" : "Request URL address."
            },
            "method" : {
              "type" : "string",
              "description" : "Request method type."
            },
            "requestBody" : {
              "type" : "string",
              "description" : "Request's request body."
            },
            "requestHeaders" : {
              "type" : "array",
              "description" : "A list of request's headers",
              "items" : {
                "$ref" : "#/components/schemas/MonitorRequestHeader"
              }
            },
            "responseStatusCode" : {
              "type" : "integer",
              "description" : "Request's response status code.",
              "format" : "int32"
            },
            "responseBody" : {
              "type" : "string",
              "description" : "Request's response body."
            },
            "responseSize" : {
              "type" : "integer",
              "description" : "Request's response size in bytes.",
              "format" : "int64"
            },
            "responseBodySizeLimitExceeded" : {
              "type" : "boolean",
              "description" : "A flag indicating that the response payload size limit of 10MB has been exceeded."
            },
            "responseHeaders" : {
              "type" : "array",
              "description" : "A list of request's response headers",
              "items" : {
                "$ref" : "#/components/schemas/MonitorRequestHeader"
              }
            },
            "resolvedIps" : {
              "type" : "array",
              "description" : "Request's resolved ips.'",
              "items" : {
                "type" : "string",
                "description" : "Request's resolved ips.'"
              }
            },
            "healthStatusCode" : {
              "type" : "integer",
              "description" : "Request's health status code.",
              "format" : "int32"
            },
            "healthStatus" : {
              "type" : "string",
              "description" : "Request's health status."
            },
            "responseMessage" : {
              "type" : "string",
              "description" : "Request's response message.'"
            },
            "peerCertificateExpiryDate" : {
              "type" : "integer",
              "description" : "An expiry date of the first SSL certificate from the certificate chain.",
              "format" : "int64"
            },
            "peerCertificateDetails" : {
              "type" : "string",
              "description" : "Request's certificate details."
            },
            "totalTime" : {
              "type" : "integer",
              "description" : "A total request time measured in ms.",
              "format" : "int64"
            },
            "hostNameResolutionTime" : {
              "type" : "integer",
              "description" : "A hostname resolution time measured in ms.",
              "format" : "int64"
            },
            "tcpConnectTime" : {
              "type" : "integer",
              "description" : "A TCP connect time measured in ms.",
              "format" : "int64"
            },
            "tlsHandshakeTime" : {
              "type" : "integer",
              "description" : "A TLS handshake time measured in ms.",
              "format" : "int64"
            },
            "timeToFirstByte" : {
              "type" : "integer",
              "description" : "A time to first byte measured in ms.",
              "format" : "int64"
            },
            "redirectionTime" : {
              "type" : "integer",
              "description" : "Total number of milliseconds spent on handling all redirect requests, measured in ms.",
              "format" : "int64"
            },
            "waitingTime" : {
              "type" : "integer",
              "description" : "Waiting time (time to first byte - (DNS lookup time + TCP connect time + TLS handshake time), measured in ms.",
              "format" : "int64"
            },
            "redirectsCount" : {
              "type" : "integer",
              "description" : "Number of request's redirects.",
              "format" : "int32"
            },
            "failureMessage" : {
              "type" : "string",
              "description" : "Request's failure message."
            },
            "customLogs" : {
              "type" : "array",
              "description" : "Custom log messages.",
              "items" : {
                "$ref" : "#/components/schemas/CustomLogLine"
              }
            }
          }
        } ]
      },
      "MonitorRequestHeader" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Header's name."
          },
          "value" : {
            "type" : "string",
            "description" : "Header's value."
          }
        },
        "description" : "A header of the Http request"
      },
      "SyntheticLocationIdsDto" : {
        "required" : [ "entityId", "geoLocationId" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "Entity ID to be transferred"
          },
          "geoLocationId" : {
            "type" : "string",
            "description" : "GeoLocation ID to be transferred"
          }
        },
        "description" : "A DTO for synthetic Location IDs."
      },
      "PrivateSyntheticLocation" : {
        "required" : [ "entityId", "latitude", "longitude", "name", "nodes", "type" ],
        "type" : "object",
        "description" : "Configuration of a private synthetic location. \n\n Some fields are inherited from the base *SyntheticLocation* object.",
        "example" : {
          "type" : "PRIVATE",
          "name" : "Linz Location",
          "countryCode" : "AT",
          "regionCode" : "04",
          "city" : "Linz",
          "latitude" : 48.306351,
          "longitude" : 14.287399,
          "nodes" : [ "93302281" ],
          "status" : "ENABLED",
          "availabilityLocationOutage" : false,
          "availabilityNodeOutage" : false,
          "availabilityLocationNodeOutageDelayInMinutes" : 5,
          "autoUpdateChromium" : true,
          "deploymentType" : "STANDARD",
          "minActiveGateCount" : 2,
          "maxActiveGateCount" : 5,
          "nodeSize" : "S"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticLocation"
        }, {
          "type" : "object",
          "properties" : {
            "nodes" : {
              "type" : "array",
              "description" : "A list of synthetic nodes belonging to the location. \n\n You can retrieve the list of available nodes with the [GET all nodes](https://dt-url.net/miy3rpl) call.",
              "items" : {
                "type" : "string"
              }
            },
            "availabilityLocationOutage" : {
              "type" : "boolean",
              "description" : "Alerting for location outage is enabled (`true`) or disabled (`false`). Supported only for private Synthetic locations."
            },
            "availabilityNodeOutage" : {
              "type" : "boolean",
              "description" : "Alerting for node outage is enabled (`true`) or disabled (`false`). \\n\\n If enabled, the outage of *any* node in the location triggers an alert. Supported only for private Synthetic locations."
            },
            "locationNodeOutageDelayInMinutes" : {
              "maximum" : 5,
              "minimum" : 1,
              "type" : "integer",
              "description" : "Alert if location or node outage lasts longer than *X* minutes. \\n\\n Only applicable when `availabilityLocationOutage` or `availabilityNodeOutage` is set to `true`. Supported only for private Synthetic locations.",
              "format" : "int32"
            },
            "availabilityNotificationsEnabled" : {
              "type" : "boolean",
              "description" : "Notifications for location and node outage are enabled (`true`) or disabled (`false`). Supported only for private Synthetic locations."
            },
            "deploymentType" : {
              "type" : "string",
              "description" : "The deployment type of the location: \n\n* `STANDARD`: The location is deployed on Windows or Linux.\n* `KUBERNETES`: The location is deployed on Kubernetes.",
              "enum" : [ "KUBERNETES", "OPENSHIFT", "STANDARD" ]
            },
            "useNewKubernetesVersion" : {
              "type" : "boolean",
              "description" : "Boolean value describes which kubernetes version will be used:\n\n* `false`: Version 1.23+ that is older than 1.26\n* `true`: Version 1.26+."
            },
            "autoUpdateChromium" : {
              "type" : "boolean",
              "description" : "Auto upgrade of Chromium is enabled (`true`) or disabled (`false`)."
            }
          }
        } ]
      },
      "PublicSyntheticLocation" : {
        "required" : [ "browserType", "browserVersion", "cloudPlatform", "entityId", "ips", "latitude", "longitude", "name", "stage", "type" ],
        "type" : "object",
        "description" : "Configuration of a public synthetic location. \n\n Some fields are inherited from the base *SyntheticLocation* object.",
        "example" : {
          "entityId" : "SYNTHETIC_LOCATION-95196F3C9A4F4215",
          "geoLocationId" : "GEOLOCATION-95196F3C9A4F4215",
          "type" : "PUBLIC",
          "name" : "Amazon US East",
          "countryCode" : "US",
          "regionCode" : "VA",
          "city" : "Amazon US East (N. Virginia)",
          "latitude" : 39.0436,
          "longitude" : -77.4875,
          "cloudPlatform" : "AMAZON_EC2",
          "ips" : [ "134.189.153.97", "134.189.153.98" ],
          "stage" : "GA",
          "browserType" : "Chrome",
          "browserVersion" : "69.0.3497.81",
          "status" : "ENABLED",
          "capabilities" : [ "BROWSER", "HTTP" ]
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticLocation"
        }, {
          "type" : "object",
          "properties" : {
            "cloudPlatform" : {
              "type" : "string",
              "description" : "The cloud provider where the location is hosted.",
              "enum" : [ "ALIBABA", "AMAZON_EC2", "AZURE", "DYNATRACE_CLOUD", "GOOGLE_CLOUD", "INTEROUTE", "OTHER", "UNDEFINED" ]
            },
            "ips" : {
              "uniqueItems" : true,
              "type" : "array",
              "description" : "The list of IP addresses assigned to the location.",
              "items" : {
                "type" : "string"
              }
            },
            "stage" : {
              "type" : "string",
              "description" : "The stage of the location.",
              "enum" : [ "BETA", "COMING_SOON", "DELETED", "GA" ]
            },
            "browserType" : {
              "type" : "string",
              "description" : "The type of the browser the location is using to execute browser monitors."
            },
            "browserVersion" : {
              "type" : "string",
              "description" : "The version of the browser the location is using to execute browser monitors."
            },
            "capabilities" : {
              "type" : "array",
              "description" : "A list of location capabilities.",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "SyntheticLocation" : {
        "required" : [ "entityId", "latitude", "longitude", "name", "type" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the location."
          },
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `PUBLIC` -> PublicSyntheticLocation \n* `PRIVATE` -> PrivateSyntheticLocation \n* `CLUSTER` -> PrivateSyntheticLocation \n",
            "enum" : [ "CLUSTER", "PRIVATE", "PUBLIC" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the location."
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The country code of the location. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
          },
          "regionCode" : {
            "type" : "string",
            "description" : "The region code of the location. \n\n To fetch the list of available region codes, use the [GET regions of the country](https://dt-url.net/az230x0) request."
          },
          "city" : {
            "type" : "string",
            "description" : "The city of the location."
          },
          "latitude" : {
            "type" : "number",
            "description" : "The latitude of the location in `DDD.dddd` format.",
            "format" : "double"
          },
          "longitude" : {
            "type" : "number",
            "description" : "The longitude of the location in `DDD.dddd` format.",
            "format" : "double"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the location: \n\n* `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location. \n* `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location. \n* `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it.",
            "enum" : [ "DISABLED", "ENABLED", "HIDDEN" ]
          },
          "geoLocationId" : {
            "type" : "string",
            "description" : "The Dynatrace GeoLocation ID of the location."
          }
        },
        "description" : "Configuration of a synthetic location. \n\n **countryCode**, **regionCode**, **city** parameters are optional as they can be retrieved based on **latitude** and **longitude** of location.\n\n The actual set of fields depends on the type of the location. Find the list of actual objects in the description of the **type** field or see [Synthetic locations API v2 - JSON models](https://dt-url.net/3n43szj).",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "LocationCollectionElement" : {
        "required" : [ "entityId", "geoLocationId", "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the location."
          },
          "entityId" : {
            "type" : "string",
            "description" : "The Dynatrace entity ID of the location."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the location.",
            "enum" : [ "CLUSTER", "PRIVATE", "PUBLIC" ]
          },
          "cloudPlatform" : {
            "type" : "string",
            "description" : "The cloud provider where the location is hosted. \n\n Only applicable to `PUBLIC` locations.",
            "enum" : [ "ALIBABA", "AMAZON_EC2", "AZURE", "DYNATRACE_CLOUD", "GOOGLE_CLOUD", "INTEROUTE", "OTHER", "UNDEFINED" ]
          },
          "ips" : {
            "type" : "array",
            "description" : "The list of IP addresses assigned to the location. \n\n Only applicable to `PUBLIC` locations.",
            "items" : {
              "type" : "string"
            }
          },
          "stage" : {
            "type" : "string",
            "description" : "The release stage of the location.",
            "enum" : [ "BETA", "COMING_SOON", "DELETED", "GA" ]
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the location.",
            "enum" : [ "DISABLED", "ENABLED", "HIDDEN" ]
          },
          "geoLocationId" : {
            "type" : "string",
            "description" : "The Dynatrace GeoLocation ID of the location."
          }
        },
        "description" : "A synthetic location."
      },
      "SyntheticLocations" : {
        "required" : [ "locations" ],
        "type" : "object",
        "properties" : {
          "locations" : {
            "type" : "array",
            "description" : "A list of synthetic locations.",
            "items" : {
              "$ref" : "#/components/schemas/LocationCollectionElement"
            }
          }
        },
        "description" : "A list of synthetic locations.",
        "example" : {
          "locations" : [ {
            "name" : "Gdansk",
            "entityId" : "SYNTHETIC_LOCATION-53F47ECB33907667",
            "geoLocationId" : "GEOLOCATION-95196F3C9A4F4215",
            "type" : "PUBLIC",
            "cloudPlatform" : "AMAZON_EC2",
            "ips" : [ "134.189.153.97", "134.189.153.98" ],
            "stage" : "GA",
            "status" : "ENABLED",
            "capabilities" : [ "BROWSER", "HTTP" ]
          }, {
            "name" : "My private location",
            "entityId" : "SYNTHETIC_LOCATION-53F47ECB33907667",
            "geoLocationId" : "GEOLOCATION-95196F3C9A4F4215",
            "type" : "PRIVATE",
            "status" : "ENABLED"
          } ]
        }
      },
      "SyntheticPublicLocationsStatus" : {
        "required" : [ "publicLocationsEnabled" ],
        "type" : "object",
        "properties" : {
          "publicLocationsEnabled" : {
            "type" : "boolean",
            "description" : "Synthetic monitors can (`true`) or can't (`false`) run on public synthetic locations."
          }
        },
        "description" : "The status of public synthetic locations."
      },
      "SyntheticLocationUpdate" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `PUBLIC` -> SyntheticPublicLocationUpdate \n* `PRIVATE` -> SyntheticPrivateLocationUpdate \n",
            "enum" : [ "PRIVATE", "PUBLIC" ]
          }
        },
        "description" : "The synthetic location update. This is a base object, the exact type depends on the value of the `type` field.",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "SyntheticPrivateLocationUpdate" : {
        "required" : [ "latitude", "longitude", "name", "nodes", "type" ],
        "type" : "object",
        "description" : "Configuration of a private synthetic location",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticLocationUpdate"
        }, {
          "type" : "object",
          "properties" : {
            "nodes" : {
              "type" : "array",
              "description" : "A list of synthetic nodes belonging to the location. \n\n You can retrieve the list of available nodes with the [GET all nodes](https://dt-url.net/miy3rpl) call.",
              "items" : {
                "type" : "string"
              }
            },
            "name" : {
              "type" : "string",
              "description" : "The name of the location."
            },
            "countryCode" : {
              "type" : "string",
              "description" : "The country code of the location. \n\n To fetch the list of available country codes, use the [GET all countries](https://dt-url.net/37030go) request."
            },
            "regionCode" : {
              "type" : "string",
              "description" : "The region code of the location. \n\n To fetch the list of available region codes, use the [GET regions of the country](https://dt-url.net/az230x0) request."
            },
            "city" : {
              "type" : "string",
              "description" : "The city of the location."
            },
            "latitude" : {
              "type" : "number",
              "description" : "The latitude of the location in `DDD.dddd` format.",
              "format" : "double"
            },
            "longitude" : {
              "type" : "number",
              "description" : "The longitude of the location in `DDD.dddd` format.",
              "format" : "double"
            },
            "status" : {
              "type" : "string",
              "description" : "The status of the location: \n\n* `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location. \n* `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location. \n* `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it.",
              "enum" : [ "DISABLED", "ENABLED", "HIDDEN" ]
            },
            "availabilityLocationOutage" : {
              "type" : "boolean",
              "description" : "Alerting for location outage is enabled (`true`) or disabled (`false`). Supported only for private Synthetic locations."
            },
            "availabilityNodeOutage" : {
              "type" : "boolean",
              "description" : "Alerting for node outage is enabled (`true`) or disabled (`false`). \\n\\n If enabled, the outage of *any* node in the location triggers an alert. Supported only for private Synthetic locations."
            },
            "locationNodeOutageDelayInMinutes" : {
              "maximum" : 5,
              "minimum" : 1,
              "type" : "integer",
              "description" : "Alert if location or node outage lasts longer than *X* minutes. \\n\\n Only applicable when `availabilityLocationOutage` or `availabilityNodeOutage` is set to `true`. Supported only for private Synthetic locations.",
              "format" : "int32"
            },
            "availabilityNotificationsEnabled" : {
              "type" : "boolean",
              "description" : "Notifications for location and node outage are enabled (`true`) or disabled (`false`). Supported only for private Synthetic locations."
            },
            "autoUpdateChromium" : {
              "type" : "boolean",
              "description" : "Auto upgrade of Chromium is enabled (`true`) or disabled (`false`)."
            },
            "deploymentType" : {
              "type" : "string",
              "description" : "The deployment type of the location: \n\n* `STANDARD`: The location is deployed on Windows or Linux.\n* `KUBERNETES`: The location is deployed on Kubernetes.",
              "enum" : [ "KUBERNETES", "OPENSHIFT", "STANDARD" ]
            },
            "useNewKubernetesVersion" : {
              "type" : "boolean",
              "description" : "Boolean value describes which kubernetes version will be used:\n\n* `false`: Version 1.23+ that is older than 1.26\n* `true`: Version 1.26+."
            }
          }
        } ]
      },
      "SyntheticPublicLocationUpdate" : {
        "required" : [ "status", "type" ],
        "type" : "object",
        "description" : "The update of a public Synthetic location.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticLocationUpdate"
        }, {
          "type" : "object",
          "properties" : {
            "status" : {
              "type" : "string",
              "description" : "The status of the location: \n\n* `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location. \n* `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location. \n* `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it.",
              "enum" : [ "DISABLED", "ENABLED", "HIDDEN" ]
            }
          }
        } ]
      },
      "Node" : {
        "required" : [ "activeGateVersion", "autoUpdateEnabled", "browserMonitorsEnabled", "browserType", "browserVersion", "entityId", "healthCheckStatus", "hostname", "ips", "oneAgentRoutingEnabled", "operatingSystem", "playerVersion", "status", "version" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The ID of the synthetic node."
          },
          "hostname" : {
            "type" : "string",
            "description" : "The hostname of the synthetic node."
          },
          "ips" : {
            "type" : "array",
            "description" : "The IP of the synthetic node.",
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the synthetic node."
          },
          "browserMonitorsEnabled" : {
            "type" : "boolean",
            "description" : "The synthetic node is able to execute browser monitors (`true`) or not (`false`)."
          },
          "activeGateVersion" : {
            "type" : "string",
            "description" : "The version of the Active Gate."
          },
          "oneAgentRoutingEnabled" : {
            "type" : "boolean",
            "description" : "The Active Gate has the One Agent routing enabled ('true') or not ('false')."
          },
          "operatingSystem" : {
            "type" : "string",
            "description" : "The Active Gate's host operating system."
          },
          "autoUpdateEnabled" : {
            "type" : "boolean",
            "description" : "The Active Gate has the Auto update option enabled ('true') or not ('false')"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the synthetic node."
          },
          "playerVersion" : {
            "type" : "string",
            "description" : "The version of the synthetic player."
          },
          "healthCheckStatus" : {
            "type" : "string",
            "description" : "The health check status of the synthetic node."
          },
          "browserType" : {
            "type" : "string",
            "description" : "The browser type."
          },
          "browserVersion" : {
            "type" : "string",
            "description" : "The browser version."
          }
        },
        "description" : "Configuration of a synthetic node. \n\n A *synthetic node* is an ActiveGate that is able to execute synthetic monitors.",
        "example" : {
          "entityId" : "3086117876",
          "hostname" : "gdn.dyna.trace",
          "ips" : [ "238.245.160.14" ],
          "version" : "1.161.0.20181210-173639",
          "browserMonitorsEnabled" : true,
          "activeGateVersion" : "1.172.2.20190607-040913",
          "oneAgentRoutingEnabled" : true,
          "operatingSystem" : "Linux",
          "autoUpdateEnabled" : true,
          "status" : "Running",
          "playerVersion" : "1.179.0.20190920-145430",
          "healthCheckStatus" : "Ok",
          "browserType" : "Chrome",
          "browserVersion" : "69.0.3497.81"
        }
      },
      "NodeCollectionElement" : {
        "required" : [ "activeGateVersion", "autoUpdateEnabled", "browserMonitorsEnabled", "entityId", "healthCheckStatus", "hostname", "ips", "oneAgentRoutingEnabled", "operatingSystem", "playerVersion", "status", "version" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The ID of a node."
          },
          "hostname" : {
            "type" : "string",
            "description" : "The hostname of a node."
          },
          "ips" : {
            "type" : "array",
            "description" : "The IP of a node.",
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "string",
            "description" : "The version of a node"
          },
          "browserMonitorsEnabled" : {
            "type" : "boolean",
            "description" : "Browser check capabilities enabled flag."
          },
          "activeGateVersion" : {
            "type" : "string",
            "description" : "The version of the Active Gate."
          },
          "oneAgentRoutingEnabled" : {
            "type" : "boolean",
            "description" : "The Active Gate has the One Agent routing enabled ('true') or not ('false')."
          },
          "operatingSystem" : {
            "type" : "string",
            "description" : "The Active Gate's host operating system."
          },
          "autoUpdateEnabled" : {
            "type" : "boolean",
            "description" : "The Active Gate has the Auto update option enabled ('true') or not ('false')"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the synthetic node."
          },
          "playerVersion" : {
            "type" : "string",
            "description" : "The version of the synthetic player."
          },
          "healthCheckStatus" : {
            "type" : "string",
            "description" : "The health check status of the synthetic node."
          }
        },
        "description" : "The short representation of a synthetic object. Only contains the ID and the display name."
      },
      "Nodes" : {
        "required" : [ "nodes" ],
        "type" : "object",
        "properties" : {
          "nodes" : {
            "type" : "array",
            "description" : "A list of synthetic nodes",
            "items" : {
              "$ref" : "#/components/schemas/NodeCollectionElement"
            }
          }
        },
        "description" : "A list of synthetic nodes",
        "example" : {
          "nodes" : [ {
            "entityId" : "3086117876",
            "hostname" : "gdn.dyna.trace",
            "ips" : [ "238.245.160.14" ],
            "version" : "1.161.0.20181210-173639",
            "browserMonitorsEnabled" : true,
            "activeGateVersion" : "1.172.2.20190607-040913",
            "oneAgentRoutingEnabled" : true,
            "operatingSystem" : "Linux",
            "autoUpdateEnabled" : true,
            "status" : "Running",
            "playerVersion" : "1.179.0.20190920-145430",
            "healthCheckStatus" : "Ok"
          } ]
        }
      },
      "SyntheticOnDemandExecutionResult" : {
        "required" : [ "batchId", "triggeredCount", "triggeringProblemsCount" ],
        "type" : "object",
        "properties" : {
          "batchId" : {
            "type" : "string",
            "description" : "The batch identifier of the triggered executions."
          },
          "triggeringProblemsCount" : {
            "type" : "integer",
            "description" : "The total number of problems within the batch.",
            "format" : "int32"
          },
          "triggeringProblemsDetails" : {
            "type" : "array",
            "description" : "List with the entities for which triggering problems occurred.",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticOnDemandTriggeringProblemDetails"
            }
          },
          "triggeredCount" : {
            "type" : "integer",
            "description" : "The total number of the triggered executions within the batch.",
            "format" : "int32"
          },
          "triggered" : {
            "type" : "array",
            "description" : "Monitors for which on-demand executions were triggered.",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticOnDemandTriggeredMonitor"
            }
          }
        },
        "description" : "The result of on-demand synthetic monitor execution.",
        "example" : {
          "batchId" : "22396514015719218",
          "triggeringProblemsCount" : 4,
          "triggeringProblemsDetails" : [ {
            "entityId" : "HTTP_CHECK-6349B98E1CD87352",
            "locationId" : "SYNTHETIC_LOCAT-9BB04DAEBA71B8CA",
            "cause" : "Location not found"
          }, {
            "entityId" : "HTTP_CHECK-6349B98E1CD85432",
            "cause" : "Monitor not found"
          }, {
            "entityId" : "HTTP_HACK-AAAAAAA",
            "cause" : "Incorrect monitor identifier format"
          }, {
            "entityId" : "APPLICATION-WRONG",
            "cause" : "Incorrect application identifier format"
          } ],
          "triggeredCount" : 1,
          "triggered" : [ {
            "monitorId" : "HTTP_CHECK-69A9B98E1CD87352",
            "executions" : [ {
              "executionId" : "1069999568093682590",
              "locationId" : "SYNTHETIC_LOCATION-9BB04DAE11123122"
            } ]
          } ]
        }
      },
      "SyntheticOnDemandTriggeredExecutionDetails" : {
        "required" : [ "executionId", "locationId" ],
        "type" : "object",
        "properties" : {
          "executionId" : {
            "type" : "string",
            "description" : "The execution's identifier."
          },
          "locationId" : {
            "type" : "string",
            "description" : "The identifier of the location from which the monitor is to be executed."
          }
        },
        "description" : "Contains details of the triggered on-demand execution."
      },
      "SyntheticOnDemandTriggeredMonitor" : {
        "required" : [ "executions", "monitorId" ],
        "type" : "object",
        "properties" : {
          "monitorId" : {
            "type" : "string",
            "description" : "The monitor identifier."
          },
          "executions" : {
            "type" : "array",
            "description" : "The list of triggered executions.",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticOnDemandTriggeredExecutionDetails"
            }
          }
        },
        "description" : "Contains the list of on-demand executions of the monitor."
      },
      "SyntheticOnDemandTriggeringProblemDetails" : {
        "required" : [ "cause", "details", "entityId" ],
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string",
            "description" : "The entity identifier."
          },
          "locationId" : {
            "type" : "string",
            "description" : "The location identifier."
          },
          "cause" : {
            "type" : "string",
            "description" : "The cause of not triggering entity."
          },
          "details" : {
            "type" : "string",
            "description" : "The details of triggering problem."
          }
        },
        "description" : "Contains the details of problems encountered while triggering on-demand executions."
      },
      "SyntheticOnDemandExecutionRequest" : {
        "type" : "object",
        "properties" : {
          "processingMode" : {
            "type" : "string",
            "description" : "The execution's processing mode",
            "enum" : [ "STANDARD", "DISABLE_PROBLEM_DETECTION", "EXECUTIONS_DETAILS_ONLY" ],
            "default" : "STANDARD"
          },
          "failOnPerformanceIssue" : {
            "type" : "boolean",
            "description" : "If true, the execution will fail in case of performance issue.",
            "default" : true
          },
          "failOnSslWarning" : {
            "type" : "boolean",
            "description" : "Applies to HTTP monitors only. If true, the execution will fail in case of an SSL certificate expiration warning or if the certificate is missing.",
            "default" : true
          },
          "stopOnProblem" : {
            "type" : "boolean",
            "description" : "If true, no executions will be scheduled if a problem occurs.",
            "default" : false
          },
          "takeScreenshotsOnSuccess" : {
            "type" : "boolean",
            "description" : "If true, the screenshots will be taken during the execution of a browser monitor.",
            "default" : false
          },
          "monitors" : {
            "type" : "array",
            "description" : "List of monitors to be triggered.",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticOnDemandExecutionRequestMonitor"
            }
          },
          "group" : {
            "$ref" : "#/components/schemas/SyntheticOnDemandExecutionRequestGroup"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "String to string map of metadata properties for execution"
            },
            "description" : "String to string map of metadata properties for execution"
          }
        },
        "description" : "Contains parameters for the on-demand execution of monitors identified by tags, applications, or services.",
        "example" : {
          "processingMode" : "EXECUTIONS_DETAILS_ONLY",
          "failOnPerformanceIssue" : false,
          "failOnSslWarning" : true,
          "stopOnProblem" : true,
          "takeScreenshotsOnSuccess" : true,
          "monitors" : [ {
            "monitorId" : "HTTP_CHECK-6349B98E1CD87352",
            "executionCount" : 3,
            "repeatMode" : "SEQUENTIAL",
            "locations" : [ "SYNTHETIC_LOCATION-9BB04DAEBA71B8CA", "SYNTHETIC_LOCATION-ACCA399FAA1194DD" ],
            "customizedScript" : {
              "requests" : [ {
                "sequenceId" : "1",
                "url" : "https://www.somepage.org",
                "validation" : {
                  "rules" : [ {
                    "type" : "httpStatusesList",
                    "value" : "=201",
                    "passIfFound" : "true"
                  } ]
                }
              } ]
            }
          } ],
          "group" : {
            "applications" : [ "APPLICATION-CD4BEF05FA9DD044" ],
            "services" : [ "SERVICE-01C6C1282960638B", "SERVICE-B18840B4E3115C1A" ],
            "tags" : [ "tag-production", "another-tag" ]
          },
          "metadata" : {
            "key" : "value",
            "version" : "1.255.20221022"
          }
        }
      },
      "SyntheticOnDemandExecutionRequestGroup" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "List of tags. Only monitors with all tags assigned will be executed.",
            "items" : {
              "type" : "string",
              "description" : "List of tags. Only monitors with all tags assigned will be executed."
            }
          },
          "applications" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "List of application identifiers. Only monitors with all applications assigned will be executed.",
            "items" : {
              "type" : "string",
              "description" : "List of application identifiers. Only monitors with all applications assigned will be executed."
            }
          },
          "services" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "List of service identifiers. Only monitors with all services assigned will be executed.",
            "items" : {
              "type" : "string",
              "description" : "List of service identifiers. Only monitors with all services assigned will be executed."
            }
          },
          "locations" : {
            "type" : "array",
            "description" : "The locations from where monitors are to be executed.",
            "items" : {
              "type" : "string",
              "description" : "The locations from where monitors are to be executed."
            }
          }
        },
        "description" : "Contains parameters for the on-demand execution of monitors identified by tags, applications, or services."
      },
      "SyntheticOnDemandExecutionRequestMonitor" : {
        "required" : [ "monitorId" ],
        "type" : "object",
        "properties" : {
          "monitorId" : {
            "type" : "string",
            "description" : "The monitor identifier."
          },
          "customizedScript" : {
            "type" : "object",
            "description" : "Customized script properties for this on-demand batch execution."
          },
          "locations" : {
            "type" : "array",
            "description" : "The locations from where the monitor is to be executed.",
            "items" : {
              "type" : "string",
              "description" : "The locations from where the monitor is to be executed."
            }
          },
          "executionCount" : {
            "type" : "integer",
            "description" : "The number of times the monitor is to be executed per location; if not set, the monitor will be executed once.",
            "format" : "int32",
            "default" : 1
          },
          "repeatMode" : {
            "type" : "string",
            "description" : "Execution repeat mode. If not set, the mode is SEQUENTIAL.",
            "enum" : [ "SEQUENTIAL", "PARALLEL" ],
            "default" : "SEQUENTIAL"
          }
        },
        "description" : "Contains monitors to be executed on demand from the locations specified."
      },
      "SyntheticOnDemandBatchStatus" : {
        "required" : [ "batchId", "batchStatus", "executedCount", "failedCount", "failedToExecuteCount", "triggeredCount", "userId" ],
        "type" : "object",
        "properties" : {
          "batchId" : {
            "type" : "string",
            "description" : "The identifier of the batch."
          },
          "userId" : {
            "type" : "string",
            "description" : "The name of the user who triggered execution of the batch."
          },
          "batchStatus" : {
            "type" : "string",
            "description" : "The status of the batch.",
            "enum" : [ "FAILED", "FAILED_TO_EXECUTE", "NOT_TRIGGERED", "RUNNING", "SUCCESS" ]
          },
          "triggeredCount" : {
            "type" : "integer",
            "description" : "The number of triggered executions within the batch.",
            "format" : "int32"
          },
          "executedCount" : {
            "type" : "integer",
            "description" : "The number of triggered executions with the result SUCCESS or FAILED.",
            "format" : "int32"
          },
          "failedCount" : {
            "type" : "integer",
            "description" : "The number of triggered executions with the result FAILED.",
            "format" : "int32"
          },
          "failedExecutions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticOnDemandFailedExecutionStatus"
            }
          },
          "failedToExecuteCount" : {
            "type" : "integer",
            "description" : "The number of executions that were triggered and timed out because of a problem with the Synthetic engine.",
            "format" : "int32"
          },
          "failedToExecute" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticOnDemandFailedExecutionStatus"
            }
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "String to string map of metadata properties for batch"
            },
            "description" : "String to string map of metadata properties for batch"
          },
          "triggeringProblemsCount" : {
            "type" : "integer",
            "description" : "The number of executions that were not triggered due to some problems.",
            "format" : "int32"
          },
          "triggeringProblems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticOnDemandTriggeringProblemDetails"
            }
          }
        },
        "description" : "Contains information about on-demand executions triggered within the batch.",
        "example" : {
          "batchId" : "22396514015719218",
          "userId" : "admin",
          "batchStatus" : "FAILED_TO_EXECUTE",
          "triggeredCount" : 3,
          "executedCount" : 1,
          "failedCount" : 1,
          "failedExecutions" : [ {
            "executionId" : "1629891693487",
            "executionStage" : "EXECUTED",
            "failureMessage" : "Validate text match failed",
            "errorCode" : "CONSTRAINT_VIOLATED(3)",
            "executionTimestamp" : "1629891695487",
            "monitorId" : "HTTP_CHECK-6349B98E1CD87352",
            "locationId" : "SYNTHETIC_LOCATION-9BB04DAEBA71B8CA"
          } ],
          "failedToExecuteCount" : 1,
          "failedToExecute" : [ {
            "executionId" : "478437504",
            "executionStage" : "TIMED_OUT",
            "monitorId" : "SYNTHETIC_TEST-027011D7D27CC892",
            "locationId" : "SYNTHETIC_LOCATION-90380DA8A44C74BD"
          } ],
          "triggeringProblemsCount" : 2,
          "triggeringProblems" : [ {
            "entityId" : "HTTP_CHECK-6349B98E1CD87352",
            "locationId" : "SYNTHETIC_LOCAT-9BB04DAEBA71B8CA",
            "cause" : "Location not found"
          }, {
            "entityId" : "APPLICATION-WRONG",
            "cause" : "Incorrect application identifier format"
          } ],
          "metadata" : {
            "key" : "value",
            "version" : "1.255.20221022"
          }
        }
      },
      "SyntheticOnDemandFailedExecutionStatus" : {
        "required" : [ "errorCode", "executionId", "locationId", "monitorId" ],
        "type" : "object",
        "properties" : {
          "executionId" : {
            "type" : "string",
            "description" : "The identifier of the execution."
          },
          "executionStage" : {
            "type" : "string",
            "description" : "Execution stage.",
            "enum" : [ "DATA_RETRIEVED", "EXECUTED", "NOT_TRIGGERED", "TIMED_OUT", "TRIGGERED", "WAITING" ]
          },
          "failureMessage" : {
            "type" : "string",
            "description" : "Failure message."
          },
          "errorCode" : {
            "type" : "string",
            "description" : "Error code."
          },
          "executionTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp when execution was finished, in UTC milliseconds.",
            "format" : "int64"
          },
          "monitorId" : {
            "type" : "string",
            "description" : "The identifier of the monitor."
          },
          "locationId" : {
            "type" : "string",
            "description" : "The identifier of the location from where the monitor is to be executed."
          }
        },
        "description" : "Contains information about on-demand executions that failed or failed to be executed.",
        "example" : {
          "executionId" : "7002396514015719218",
          "executionStage" : "DATA_RETRIEVED",
          "failureMessage" : "Validate text match failed",
          "errorCode" : "CONSTRAINT_VIOLATED(3)",
          "executionTimestamp" : "1629891695487",
          "monitorId" : "HTTP_CHECK-6349B98E1CD87352",
          "locationId" : "SYNTHETIC_LOCATION-9BB04DAEBA71B8CA"
        }
      },
      "BMAction" : {
        "required" : [ "monitorType" ],
        "type" : "object",
        "description" : "Contains detailed information about Browser monitor action.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExecutionStep"
        }, {
          "type" : "object",
          "properties" : {
            "name" : {
              "type" : "string",
              "description" : "The name of the action."
            },
            "domain" : {
              "type" : "string",
              "description" : "The DNS domain where the action has been recorded"
            },
            "targetUrl" : {
              "type" : "string",
              "description" : "The URL of the action."
            },
            "type" : {
              "type" : "string",
              "description" : "The type of the action.",
              "enum" : [ "Custom", "EndVisit", "Error", "Load", "RageClick", "StandaloneAgentEvent", "StandaloneHttpError", "SyntheticHiddenAction", "UserSessionProperties", "ViewChangeEvent", "VisitTag", "Xhr" ]
            },
            "startTime" : {
              "type" : "integer",
              "description" : "The start time of the action on the server, in in UTC milliseconds.",
              "format" : "int64"
            },
            "endTime" : {
              "type" : "integer",
              "description" : "The stop time of the action on the server, in UTC milliseconds",
              "format" : "int64"
            },
            "duration" : {
              "type" : "integer",
              "description" : "The duration of the action, in milliseconds",
              "format" : "int64"
            },
            "apdexType" : {
              "type" : "string",
              "description" : "The user experience index of the action.",
              "enum" : [ "FRUSTRATED", "SATISFIED", "TOLERATING", "UNKNOWN" ]
            },
            "speedIndex" : {
              "type" : "integer",
              "description" : "A score indicating how quickly the page content is visually populated. A low speed index means that most parts of a page are rendering quickly.",
              "format" : "int32"
            },
            "referrer" : {
              "type" : "string",
              "description" : "The referrer."
            },
            "networkTime" : {
              "type" : "integer",
              "description" : "The amount of time spent on the data transfer for the action, in milliseconds.",
              "format" : "int32"
            },
            "serverTime" : {
              "type" : "integer",
              "description" : "The amount of time spent on the server-side processing for the action, in milliseconds.",
              "format" : "int32"
            },
            "frontendTime" : {
              "type" : "integer",
              "description" : "The amount of time spent on the frontend rendering for the action, in milliseconds.",
              "format" : "int32"
            },
            "documentInteractiveTime" : {
              "type" : "integer",
              "description" : "The amount of time spent until the document for the action became interactive, in milliseconds.",
              "format" : "int32"
            },
            "thirdPartyResources" : {
              "type" : "integer",
              "description" : "The number of third party resources loaded for the action.",
              "format" : "int32"
            },
            "thirdPartyBusyTime" : {
              "type" : "integer",
              "description" : "The time spent waiting for third party resources for the action, in milliseconds.",
              "format" : "int32"
            },
            "cdnResources" : {
              "type" : "integer",
              "description" : "The number of resources fetched from a CDN for the action.",
              "format" : "int32"
            },
            "cdnBusyTime" : {
              "type" : "integer",
              "description" : "The time spent waiting for CDN resources for the action, in milliseconds.",
              "format" : "int32"
            },
            "firstPartyResources" : {
              "type" : "integer",
              "description" : "The number of resources fetched from the originating server for the action.",
              "format" : "int32"
            },
            "firstPartyBusyTime" : {
              "type" : "integer",
              "description" : "The time spent waiting for resources from the originating server for the action, in milliseconds.",
              "format" : "int32"
            },
            "domCompleteTime" : {
              "type" : "integer",
              "description" : "The amount of time until the DOM tree is completed, in milliseconds.",
              "format" : "int32"
            },
            "domContentLoadedTime" : {
              "type" : "integer",
              "description" : "The amount of time until the DOM tree is loaded, in milliseconds.",
              "format" : "int32"
            },
            "loadEventStart" : {
              "type" : "integer",
              "description" : "The amount of time until the load event started, in milliseconds.",
              "format" : "int32"
            },
            "loadEventEnd" : {
              "type" : "integer",
              "description" : "The amount of time until the load event ended, in milliseconds.",
              "format" : "int32"
            },
            "navigationStartTime" : {
              "type" : "integer",
              "description" : "The timestamp of the navigation start, in UTC milliseconds.",
              "format" : "int64"
            },
            "requestStart" : {
              "type" : "integer",
              "description" : "The amount of time until the request started, in milliseconds.",
              "format" : "int32"
            },
            "responseStart" : {
              "type" : "integer",
              "description" : "The amount of time until the response started, in milliseconds.",
              "format" : "int32"
            },
            "responseEnd" : {
              "type" : "integer",
              "description" : "The amount of time until the response ended, in milliseconds.",
              "format" : "int32"
            },
            "visuallyCompleteTime" : {
              "type" : "integer",
              "description" : "The amount of time until the page is visually complete, in milliseconds.",
              "format" : "int32"
            },
            "startSequenceNumber" : {
              "type" : "integer",
              "description" : "The sequence number of the action (to get a kind of order).",
              "format" : "int32"
            },
            "clientTime" : {
              "type" : "integer",
              "description" : "The event startTime in client time, in milliseconds.",
              "format" : "int64"
            },
            "userActionPropertyCount" : {
              "type" : "integer",
              "description" : "The total number of properties in the action.",
              "format" : "int32"
            },
            "customErrorCount" : {
              "type" : "integer",
              "description" : "The total number of custom errors during the action.",
              "format" : "int32"
            },
            "javascriptErrorCount" : {
              "type" : "integer",
              "description" : "The total number of Javascript errors during the action.",
              "format" : "int32"
            },
            "requestErrorCount" : {
              "type" : "integer",
              "description" : "The total number of request errors during the action.",
              "format" : "int32"
            },
            "largestContentfulPaint" : {
              "type" : "integer",
              "description" : "The largest contentful paint (LCP) is the time (in milliseconds) that the largest element on the page took to render.",
              "format" : "int32"
            },
            "firstInputDelay" : {
              "type" : "integer",
              "description" : "The first input delay (FID) is the time (in milliseconds) that the browser took to respond to the first user input.",
              "format" : "int32"
            },
            "cumulativeLayoutShift" : {
              "type" : "number",
              "description" : "Cumulative layout shift: Available for Chromium-based browsers. Measured using Google-provided APIs.",
              "format" : "double"
            },
            "totalBlockingTime" : {
              "type" : "integer",
              "description" : "The time between the moment when the browser receives a request to download a resource and the time that it actually starts downloading the resource in ms.",
              "format" : "int32"
            },
            "entryAction" : {
              "type" : "boolean"
            },
            "exitAction" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "ExecutionFullResults" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Execution status."
          },
          "failureMessage" : {
            "type" : "string",
            "description" : "Failure message."
          },
          "errorCode" : {
            "type" : "string",
            "description" : "Error code."
          },
          "failedStepSequenceId" : {
            "type" : "integer",
            "description" : "Failed step sequence id.",
            "format" : "int32"
          },
          "failedStepName" : {
            "type" : "string",
            "description" : "Failed step name."
          },
          "executionStepCount" : {
            "type" : "integer",
            "description" : "Number executed steps.",
            "format" : "int32"
          },
          "executionSteps" : {
            "type" : "array",
            "description" : "Details about the monitor's step execution.",
            "items" : {
              "$ref" : "#/components/schemas/ExecutionStep"
            }
          }
        },
        "description" : "Contains extended monitor's execution details."
      },
      "ExecutionSimpleResults" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Execution status."
          },
          "failureMessage" : {
            "type" : "string",
            "description" : "Failure message."
          },
          "errorCode" : {
            "type" : "string",
            "description" : "Error code."
          },
          "responseStatusCode" : {
            "type" : "integer",
            "description" : "Response status code.",
            "format" : "int32"
          },
          "executedSteps" : {
            "type" : "integer",
            "description" : "Number of the executed steps by Synthetic engine",
            "format" : "int32"
          },
          "engineId" : {
            "type" : "integer",
            "description" : "Synthetic engine id on which monitor was executed.",
            "format" : "int64"
          },
          "hostNameResolutionTime" : {
            "type" : "integer",
            "description" : "A hostname resolution time measured in milliseconds.",
            "format" : "int64"
          },
          "tcpConnectTime" : {
            "type" : "integer",
            "description" : "A TCP connect time measured in milliseconds.",
            "format" : "int64"
          },
          "tlsHandshakeTime" : {
            "type" : "integer",
            "description" : "A TLS handshake time measured in milliseconds.",
            "format" : "int64"
          },
          "timeToFirstByte" : {
            "type" : "integer",
            "description" : "A time to first byte measured in milliseconds.",
            "format" : "int64"
          },
          "redirectionTime" : {
            "type" : "integer",
            "description" : "Total number of milliseconds spent on handling all redirect requests, measured in milliseconds.",
            "format" : "int64"
          },
          "redirectsCount" : {
            "type" : "integer",
            "description" : "Number of redirects.",
            "format" : "int32"
          },
          "publicLocation" : {
            "type" : "boolean",
            "description" : "Flag informs whether request was executed on public location."
          },
          "responseSize" : {
            "type" : "integer",
            "description" : "Request's response size in bytes.",
            "format" : "int64"
          },
          "responseBodySizeLimitExceeded" : {
            "type" : "boolean",
            "description" : "A flag indicating that the response payload size limit of 10MB has been exceeded."
          },
          "peerCertificateExpiryDate" : {
            "type" : "integer",
            "description" : "An expiry date of the first SSL certificate from the certificate chain.",
            "format" : "int64",
            "deprecated" : true
          },
          "totalTime" : {
            "type" : "integer",
            "description" : "A total time measured in milliseconds.",
            "format" : "int64"
          },
          "httperror" : {
            "type" : "boolean",
            "description" : "Informs whether is HTTP error."
          },
          "chromeError" : {
            "type" : "boolean",
            "description" : "Informs whether is Chrome error."
          },
          "startTimestamp" : {
            "type" : "integer",
            "description" : "Start timestamp.",
            "format" : "int64"
          }
        },
        "description" : "Contains basic results of the monitor's on-demand execution."
      },
      "ExecutionStep" : {
        "required" : [ "monitorType" ],
        "type" : "object",
        "properties" : {
          "monitorType" : {
            "type" : "string",
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `BROWSER` -> BMAction \n* `HTTP` -> MonitorRequestExecutionResult \n",
            "enum" : [ "BROWSER", "HTTP" ]
          }
        },
        "description" : "Contains detailed information about the monitor's step execution.",
        "discriminator" : {
          "propertyName" : "monitorType",
          "mapping" : {
            "BROWSER" : "#/components/schemas/BMAction",
            "HTTP" : "#/components/schemas/MonitorRequestExecutionResult"
          }
        }
      },
      "ObjectNode" : {
        "type" : "object",
        "description" : "Customized script properties for this on-demand batch execution."
      },
      "SyntheticOnDemandExecution" : {
        "required" : [ "batchId", "dataDeliveryTimestamp", "executionId", "executionStage", "executionTimestamp", "locationId", "monitorId", "processingMode", "schedulingTimestamp", "source", "userId" ],
        "type" : "object",
        "properties" : {
          "batchId" : {
            "type" : "string",
            "description" : "The identifier of the batch."
          },
          "executionId" : {
            "type" : "string",
            "description" : "The identifier of the execution."
          },
          "executionStage" : {
            "type" : "string",
            "description" : "Execution stage.",
            "enum" : [ "DATA_RETRIEVED", "EXECUTED", "NOT_TRIGGERED", "TIMED_OUT", "TRIGGERED", "WAITING" ]
          },
          "schedulingTimestamp" : {
            "type" : "integer",
            "description" : "The scheduling timestamp, in UTC milliseconds.",
            "format" : "int64"
          },
          "executionTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp when execution was finished, in UTC milliseconds.",
            "format" : "int64"
          },
          "dataDeliveryTimestamp" : {
            "type" : "integer",
            "description" : "The timestamp when whole data set has been collected on server, in UTC milliseconds.",
            "format" : "int64"
          },
          "monitorId" : {
            "type" : "string",
            "description" : "The identifier of the monitor."
          },
          "locationId" : {
            "type" : "string",
            "description" : "The identifier of the location from where the monitor is to be executed."
          },
          "nextExecutionId" : {
            "type" : "integer",
            "description" : "Next execution id for sequential mode.",
            "format" : "int64"
          },
          "userId" : {
            "type" : "string",
            "description" : "The name of the user who triggered the on-demand execution."
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Metadata map for the execution batch."
            },
            "description" : "Metadata map for the execution batch."
          },
          "source" : {
            "type" : "string",
            "description" : "The source of the triggering request.",
            "enum" : [ "API", "UI" ]
          },
          "processingMode" : {
            "type" : "string",
            "description" : "The processing mode of the execution.",
            "enum" : [ "DISABLE_PROBLEM_DETECTION", "EXECUTIONS_DETAILS_ONLY", "NONE", "STANDARD", "UNKNOWN" ]
          },
          "customizedScript" : {
            "$ref" : "#/components/schemas/ObjectNode"
          },
          "simpleResults" : {
            "$ref" : "#/components/schemas/ExecutionSimpleResults"
          },
          "fullResults" : {
            "$ref" : "#/components/schemas/ExecutionFullResults"
          }
        },
        "description" : "Describes the status of an on-demand execution.",
        "example" : {
          "batchId" : "22396514015719218",
          "executionId" : "7002396514015719218",
          "executionStage" : "DATA_RETRIEVED",
          "schedulingTime" : "1629891686877",
          "executionTimestamp" : "1629891695487",
          "dataDeliveryTimestamp" : "1629891701171",
          "monitorId" : "HTTP_CHECK-6349B98E1CD87352",
          "locationId" : "SYNTHETIC_LOCATION-9BB04DAEBA71B8CA",
          "metadata" : {
            "key" : "value",
            "version" : "1.255.20221022"
          },
          "userId" : "someUserIdentifier",
          "simpleResults" : [ {
            "startTimestamp" : "1629891693487",
            "engineId" : "1993198092",
            "executedSteps" : "1",
            "totalTime" : "955",
            "publicLocation" : "false",
            "tlsHandshakeTime" : "167",
            "tcpConnectTime" : "127",
            "hostNameResolutionTime" : "50",
            "redirectionTime" : "576",
            "responseBodySizeLimitExceeded" : "false",
            "responseStatusCode" : "200",
            "healthStatus" : "HEALTHY",
            "responseSize" : "1530652"
          } ],
          "source" : "API",
          "processingMode" : "STANDARD",
          "customizedScript" : {
            "requests" : [ {
              "sequenceId" : "1",
              "url" : "https://www.somepage.org",
              "validation" : {
                "rules" : [ {
                  "type" : "httpStatusesList",
                  "value" : "=201",
                  "passIfFound" : "true"
                } ]
              }
            } ]
          }
        }
      },
      "SyntheticOnDemandExecutions" : {
        "required" : [ "executions" ],
        "type" : "object",
        "properties" : {
          "executions" : {
            "type" : "array",
            "description" : "The list of executions.",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticOnDemandExecution"
            }
          }
        },
        "description" : "Contains a list of synthetic on-demand executions.",
        "example" : {
          "executions" : [ {
            "executionId" : "7002396514015719218",
            "schedulingTimestamp" : "1629891686877",
            "executionTimestamp" : "1629891695487",
            "monitorId" : "HTTP_CHECK-6349B98E1CD87352",
            "locationId" : "SYNTHETIC_LOCATION-9BB04DAEBA71B8CA",
            "executionStage" : "EXECUTED",
            "userId" : "someUserIdentifier"
          } ]
        }
      },
      "TenantToken" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The secret of the tenant token."
          }
        },
        "description" : "Tenant token"
      },
      "TenantTokenConfig" : {
        "type" : "object",
        "properties" : {
          "old" : {
            "$ref" : "#/components/schemas/TenantToken"
          },
          "active" : {
            "$ref" : "#/components/schemas/TenantToken"
          }
        },
        "description" : "Configuration of a [tenant token](https://dt-url.net/b403ss9)."
      },
      "UnitConversionResult" : {
        "required" : [ "resultValue", "unitId" ],
        "type" : "object",
        "properties" : {
          "unitId" : {
            "type" : "string",
            "description" : "The ID of the unit of this conversion result."
          },
          "resultValue" : {
            "type" : "number",
            "description" : "The result of the unit conversion.",
            "format" : "double"
          }
        },
        "description" : "The result of a unit conversion."
      },
      "Unit" : {
        "required" : [ "unitId" ],
        "type" : "object",
        "properties" : {
          "unitId" : {
            "type" : "string",
            "description" : "The ID of the unit."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the unit."
          },
          "symbol" : {
            "type" : "string",
            "description" : "The symbol of the unit."
          },
          "description" : {
            "type" : "string",
            "description" : "A short description of the unit."
          },
          "displayNamePlural" : {
            "type" : "string",
            "description" : "The plural display name of the unit."
          }
        },
        "description" : "The metadata of a unit.",
        "example" : {
          "unitId" : "Second",
          "displayName" : "second",
          "displayNamePlural" : "seconds",
          "symbol" : "s",
          "description" : "The second is the base unit of time and defined as 1/86400 of a day."
        }
      },
      "UnitList" : {
        "required" : [ "totalCount", "units" ],
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of units in the result.",
            "format" : "int64"
          },
          "units" : {
            "type" : "array",
            "description" : "A list of units.",
            "items" : {
              "$ref" : "#/components/schemas/Unit"
            }
          }
        },
        "description" : "A list of units along with their properties.",
        "example" : {
          "totalCount" : 2,
          "units" : [ {
            "unitId" : "BytePerSecond",
            "displayName" : "byte per second",
            "displayNamePlural" : "bytes per second",
            "symbol" : "B/s",
            "description" : "byte per second"
          }, {
            "unitId" : "BytePerMinute",
            "displayName" : "byte per minute",
            "displayNamePlural" : "bytes per minute",
            "symbol" : "B/min",
            "description" : "byte per minute"
          } ]
        }
      }
    },
    "securitySchemes" : {
      "Api-Token" : {
        "type" : "apiKey",
        "description" : "Dynatrace API Token\n\n The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.",
        "name" : "Authorization",
        "in" : "header"
      }
    }
  }
}